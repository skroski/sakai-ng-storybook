{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppConfig",
            "id": "interface-AppConfig-9cfa5308d9c0385301781407bd7489b4a828ecf7e28dfb7cef6ba921a12ba2780e0ba18e96238baa950c9d5ed88cd03939916ba4a76667bde1ef6b0804928254",
            "file": "src/app/layout/service/app.layout.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, effect, signal } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface AppConfig {\n    inputStyle: string;\n    colorScheme: string;\n    theme: string;\n    ripple: boolean;\n    menuMode: string;\n    scale: number;\n}\n\ninterface LayoutState {\n    staticMenuDesktopInactive: boolean;\n    overlayMenuActive: boolean;\n    profileSidebarVisible: boolean;\n    configSidebarVisible: boolean;\n    staticMenuMobileActive: boolean;\n    menuHoverActive: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LayoutService {\n    _config: AppConfig = {\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'static',\n        colorScheme: 'light',\n        theme: 'lara-light-indigo',\n        scale: 14,\n    };\n\n    config = signal<AppConfig>(this._config);\n\n    state: LayoutState = {\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false,\n    };\n\n    private configUpdate = new Subject<AppConfig>();\n\n    private overlayOpen = new Subject<any>();\n\n    configUpdate$ = this.configUpdate.asObservable();\n\n    overlayOpen$ = this.overlayOpen.asObservable();\n\n    constructor() {\n        effect(() => {\n            const config = this.config();\n            if (this.updateStyle(config)) {\n                this.changeTheme();\n            }\n            this.changeScale(config.scale);\n            this.onConfigUpdate();\n        });\n    }\n\n    updateStyle(config: AppConfig) {\n        return (\n            config.theme !== this._config.theme ||\n            config.colorScheme !== this._config.colorScheme\n        );\n    }\n\n    onMenuToggle() {\n        if (this.isOverlay()) {\n            this.state.overlayMenuActive = !this.state.overlayMenuActive;\n            if (this.state.overlayMenuActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n\n        if (this.isDesktop()) {\n            this.state.staticMenuDesktopInactive =\n                !this.state.staticMenuDesktopInactive;\n        } else {\n            this.state.staticMenuMobileActive =\n                !this.state.staticMenuMobileActive;\n\n            if (this.state.staticMenuMobileActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n    }\n\n    showProfileSidebar() {\n        this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n        if (this.state.profileSidebarVisible) {\n            this.overlayOpen.next(null);\n        }\n    }\n\n    showConfigSidebar() {\n        this.state.configSidebarVisible = true;\n    }\n\n    isOverlay() {\n        return this.config().menuMode === 'overlay';\n    }\n\n    isDesktop() {\n        return window.innerWidth > 991;\n    }\n\n    isMobile() {\n        return !this.isDesktop();\n    }\n\n    onConfigUpdate() {\n        this._config = { ...this.config() };\n        this.configUpdate.next(this.config());\n    }\n\n    changeTheme() {\n        const config = this.config();\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const themeLinkHref = themeLink.getAttribute('href')!;\n        const newHref = themeLinkHref\n            .split('/')\n            .map((el) =>\n                el == this._config.theme\n                    ? (el = config.theme)\n                    : el == `theme-${this._config.colorScheme}`\n                    ? (el = `theme-${config.colorScheme}`)\n                    : el\n            )\n            .join('/');\n\n        this.replaceThemeLink(newHref);\n    }\n    replaceThemeLink(href: string) {\n        const id = 'theme-css';\n        let themeLink = <HTMLLinkElement>document.getElementById(id);\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(\n            cloneLinkElement,\n            themeLink.nextSibling\n        );\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n        });\n    }\n\n    changeScale(value: number) {\n        document.documentElement.style.fontSize = `${value}px`;\n    }\n}\n",
            "properties": [
                {
                    "name": "colorScheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "menuMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "ripple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Country",
            "id": "interface-Country-b22846ec8fcae14d486d0cec96b64c42c6d72f6121ba64782df6bb8e6aff75166d66d3ed19019c443d99da77896dd09384cae96aca3c7de1882840f92e96b695",
            "file": "src/app/demo/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Customer",
            "id": "interface-Customer-b22846ec8fcae14d486d0cec96b64c42c6d72f6121ba64782df6bb8e6aff75166d66d3ed19019c443d99da77896dd09384cae96aca3c7de1882840f92e96b695",
            "file": "src/app/demo/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n}\n",
            "properties": [
                {
                    "name": "activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Representative",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "expandedRows",
            "id": "interface-expandedRows-8449a537892c5bcecc7c359216a188d38b47f7c564270a6cb61129e00e8ed0330f015b360f1c0326c247240e50a3d9ee7702d97d84aab8a7620f1c817798fc33",
            "file": "src/app/demo/components/uikit/table/tabledemo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Customer, Representative } from 'src/app/demo/api/customer';\nimport { CustomerService } from 'src/app/demo/service/customer.service';\nimport { Product } from 'src/app/demo/api/product';\nimport { ProductService } from 'src/app/demo/service/product.service';\nimport { Table } from 'primeng/table';\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\ninterface expandedRows {\n    [key: string]: boolean;\n}\n\n@Component({\n    templateUrl: './tabledemo.component.html',\n    providers: [MessageService, ConfirmationService]\n})\nexport class TableDemoComponent implements OnInit {\n\n    customers1: Customer[] = [];\n\n    customers2: Customer[] = [];\n\n    customers3: Customer[] = [];\n\n    selectedCustomers1: Customer[] = [];\n\n    selectedCustomer: Customer = {};\n\n    representatives: Representative[] = [];\n\n    statuses: any[] = [];\n\n    products: Product[] = [];\n\n    rowGroupMetadata: any;\n\n    expandedRows: expandedRows = {};\n\n    activityValues: number[] = [0, 100];\n\n    isExpanded: boolean = false;\n\n    idFrozen: boolean = false;\n\n    loading: boolean = true;\n\n    @ViewChild('filter') filter!: ElementRef;\n\n    constructor(private customerService: CustomerService, private productService: ProductService) { }\n\n    ngOnInit() {\n        this.customerService.getCustomersLarge().then(customers => {\n            this.customers1 = customers;\n            this.loading = false;\n\n            // @ts-ignore\n            this.customers1.forEach(customer => customer.date = new Date(customer.date));\n        });\n        this.customerService.getCustomersMedium().then(customers => this.customers2 = customers);\n        this.customerService.getCustomersLarge().then(customers => this.customers3 = customers);\n        this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\n\n        this.representatives = [\n            { name: 'Amy Elsner', image: 'amyelsner.png' },\n            { name: 'Anna Fali', image: 'annafali.png' },\n            { name: 'Asiya Javayant', image: 'asiyajavayant.png' },\n            { name: 'Bernardo Dominic', image: 'bernardodominic.png' },\n            { name: 'Elwin Sharvill', image: 'elwinsharvill.png' },\n            { name: 'Ioni Bowcher', image: 'ionibowcher.png' },\n            { name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png' },\n            { name: 'Onyama Limba', image: 'onyamalimba.png' },\n            { name: 'Stephen Shaw', image: 'stephenshaw.png' },\n            { name: 'XuXue Feng', image: 'xuxuefeng.png' }\n        ];\n\n        this.statuses = [\n            { label: 'Unqualified', value: 'unqualified' },\n            { label: 'Qualified', value: 'qualified' },\n            { label: 'New', value: 'new' },\n            { label: 'Negotiation', value: 'negotiation' },\n            { label: 'Renewal', value: 'renewal' },\n            { label: 'Proposal', value: 'proposal' }\n        ];\n    }\n\n    onSort() {\n        this.updateRowGroupMetaData();\n    }\n\n    updateRowGroupMetaData() {\n        this.rowGroupMetadata = {};\n\n        if (this.customers3) {\n            for (let i = 0; i < this.customers3.length; i++) {\n                const rowData = this.customers3[i];\n                const representativeName = rowData?.representative?.name || '';\n\n                if (i === 0) {\n                    this.rowGroupMetadata[representativeName] = { index: 0, size: 1 };\n                }\n                else {\n                    const previousRowData = this.customers3[i - 1];\n                    const previousRowGroup = previousRowData?.representative?.name;\n                    if (representativeName === previousRowGroup) {\n                        this.rowGroupMetadata[representativeName].size++;\n                    }\n                    else {\n                        this.rowGroupMetadata[representativeName] = { index: i, size: 1 };\n                    }\n                }\n            }\n        }\n    }\n\n    expandAll() {\n        if (!this.isExpanded) {\n            this.products.forEach(product => product && product.name ? this.expandedRows[product.name] = true : '');\n\n        } else {\n            this.expandedRows = {};\n        }\n        this.isExpanded = !this.isExpanded;\n    }\n\n    formatCurrency(value: number) {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    onGlobalFilter(table: Table, event: Event) {\n        table.filterGlobal((event.target as HTMLInputElement).value, 'contains');\n    }\n\n    clear(table: Table) {\n        table.clear();\n        this.filter.nativeElement.value = '';\n    }\n    \n}",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-8449a537892c5bcecc7c359216a188d38b47f7c564270a6cb61129e00e8ed0330f015b360f1c0326c247240e50a3d9ee7702d97d84aab8a7620f1c817798fc33",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        },
        {
            "name": "Image",
            "id": "interface-Image-37220691eca127072e45c55b5f482f6bf4db3ba473e416c775759a3a0a2aa61d36c43c27cfa1cbae8a71342cd5a2e5126bc51e48127f9c79a8dc99081acea379",
            "file": "src/app/demo/api/image.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Image {\n    previewImageSrc?:any;\n    thumbnailImageSrc?:any;\n    alt?:any;\n    title?:any;\n}\n",
            "properties": [
                {
                    "name": "alt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "previewImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "thumbnailImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "InventoryStatus",
            "id": "interface-InventoryStatus-3127e41bda8a227033c8e6b8ec05fba3652c18543351ce7d2df6674ae116ebe50d73018156f26414441a6e1b859f45714f0912724abe609138b799af71c1b55c",
            "file": "src/app/demo/api/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface InventoryStatus {\n    label: string;\n    value: string;\n}\nexport interface Product {\n    id?: string;\n    code?: string;\n    name?: string;\n    description?: string;\n    price?: number;\n    quantity?: number;\n    inventoryStatus?: InventoryStatus;\n    category?: string;\n    image?: string;\n    rating?: number;\n}",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LayoutState",
            "id": "interface-LayoutState-9cfa5308d9c0385301781407bd7489b4a828ecf7e28dfb7cef6ba921a12ba2780e0ba18e96238baa950c9d5ed88cd03939916ba4a76667bde1ef6b0804928254",
            "file": "src/app/layout/service/app.layout.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, effect, signal } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface AppConfig {\n    inputStyle: string;\n    colorScheme: string;\n    theme: string;\n    ripple: boolean;\n    menuMode: string;\n    scale: number;\n}\n\ninterface LayoutState {\n    staticMenuDesktopInactive: boolean;\n    overlayMenuActive: boolean;\n    profileSidebarVisible: boolean;\n    configSidebarVisible: boolean;\n    staticMenuMobileActive: boolean;\n    menuHoverActive: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LayoutService {\n    _config: AppConfig = {\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'static',\n        colorScheme: 'light',\n        theme: 'lara-light-indigo',\n        scale: 14,\n    };\n\n    config = signal<AppConfig>(this._config);\n\n    state: LayoutState = {\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false,\n    };\n\n    private configUpdate = new Subject<AppConfig>();\n\n    private overlayOpen = new Subject<any>();\n\n    configUpdate$ = this.configUpdate.asObservable();\n\n    overlayOpen$ = this.overlayOpen.asObservable();\n\n    constructor() {\n        effect(() => {\n            const config = this.config();\n            if (this.updateStyle(config)) {\n                this.changeTheme();\n            }\n            this.changeScale(config.scale);\n            this.onConfigUpdate();\n        });\n    }\n\n    updateStyle(config: AppConfig) {\n        return (\n            config.theme !== this._config.theme ||\n            config.colorScheme !== this._config.colorScheme\n        );\n    }\n\n    onMenuToggle() {\n        if (this.isOverlay()) {\n            this.state.overlayMenuActive = !this.state.overlayMenuActive;\n            if (this.state.overlayMenuActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n\n        if (this.isDesktop()) {\n            this.state.staticMenuDesktopInactive =\n                !this.state.staticMenuDesktopInactive;\n        } else {\n            this.state.staticMenuMobileActive =\n                !this.state.staticMenuMobileActive;\n\n            if (this.state.staticMenuMobileActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n    }\n\n    showProfileSidebar() {\n        this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n        if (this.state.profileSidebarVisible) {\n            this.overlayOpen.next(null);\n        }\n    }\n\n    showConfigSidebar() {\n        this.state.configSidebarVisible = true;\n    }\n\n    isOverlay() {\n        return this.config().menuMode === 'overlay';\n    }\n\n    isDesktop() {\n        return window.innerWidth > 991;\n    }\n\n    isMobile() {\n        return !this.isDesktop();\n    }\n\n    onConfigUpdate() {\n        this._config = { ...this.config() };\n        this.configUpdate.next(this.config());\n    }\n\n    changeTheme() {\n        const config = this.config();\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const themeLinkHref = themeLink.getAttribute('href')!;\n        const newHref = themeLinkHref\n            .split('/')\n            .map((el) =>\n                el == this._config.theme\n                    ? (el = config.theme)\n                    : el == `theme-${this._config.colorScheme}`\n                    ? (el = `theme-${config.colorScheme}`)\n                    : el\n            )\n            .join('/');\n\n        this.replaceThemeLink(newHref);\n    }\n    replaceThemeLink(href: string) {\n        const id = 'theme-css';\n        let themeLink = <HTMLLinkElement>document.getElementById(id);\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(\n            cloneLinkElement,\n            themeLink.nextSibling\n        );\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n        });\n    }\n\n    changeScale(value: number) {\n        document.documentElement.style.fontSize = `${value}px`;\n    }\n}\n",
            "properties": [
                {
                    "name": "configSidebarVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "menuHoverActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "overlayMenuActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "profileSidebarVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "staticMenuDesktopInactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "staticMenuMobileActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MenuChangeEvent",
            "id": "interface-MenuChangeEvent-d41837fedd8a1f8b3bbfc108b6cff52eeb4c17d16c63ed8d858c4edc42e16f0aefb00d8e17090278893ade3d9859eeec142933bd2732f29055c1402716bc0cdd",
            "file": "src/app/layout/api/menuchangeevent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MenuChangeEvent {\n    key: string;\n    routeEvent?: boolean;\n}",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "routeEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Product",
            "id": "interface-Product-3127e41bda8a227033c8e6b8ec05fba3652c18543351ce7d2df6674ae116ebe50d73018156f26414441a6e1b859f45714f0912724abe609138b799af71c1b55c",
            "file": "src/app/demo/api/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface InventoryStatus {\n    label: string;\n    value: string;\n}\nexport interface Product {\n    id?: string;\n    code?: string;\n    name?: string;\n    description?: string;\n    price?: number;\n    quantity?: number;\n    inventoryStatus?: InventoryStatus;\n    category?: string;\n    image?: string;\n    rating?: number;\n}",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InventoryStatus",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Representative",
            "id": "interface-Representative-b22846ec8fcae14d486d0cec96b64c42c6d72f6121ba64782df6bb8e6aff75166d66d3ed19019c443d99da77896dd09384cae96aca3c7de1882840f92e96b695",
            "file": "src/app/demo/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\n    name?: string;\n    code?: string;\n}\n\nexport interface Representative {\n    name?: string;\n    image?: string;\n}\n\nexport interface Customer {\n    id?: number;\n    name?: string;\n    country?: Country;\n    company?: string;\n    date?: string;\n    status?: string;\n    activity?: number;\n    representative?: Representative;\n}\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "CountryService",
            "id": "injectable-CountryService-5dc2f1588d6aaa404895efc7dc92d7c84c3734a438104c260ac72a3c741005491203e86ea344a152c83696471d838393a2a73dab1b6f734f672d3f48d98b2659",
            "file": "src/app/demo/service/country.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCountries",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CountryService {\n\n    constructor(private http: HttpClient) { }\n\n    getCountries() {\n        return this.http.get<any>('assets/demo/data/countries.json')\n            .toPromise()\n            .then(res => res.data as any[])\n            .then(data => data);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CustomerService",
            "id": "injectable-CustomerService-89e1f7cc6a040dafbba054eff8996237b92580e38735486524b6bbb7c80cdde24a636bf7e3d43864a35de7d83e1fd33cc9028e672c1c4f1edaac13bea21a71e8",
            "file": "src/app/demo/service/customer.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCustomersLarge",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCustomersMedium",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCustomersSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Customer } from '../api/customer';\n\n@Injectable()\nexport class CustomerService {\n\n    constructor(private http: HttpClient) { }\n\n    getCustomersSmall() {\n        return this.http.get<any>('assets/demo/data/customers-small.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n\n    getCustomersMedium() {\n        return this.http.get<any>('assets/demo/data/customers-medium.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n\n    getCustomersLarge() {\n        return this.http.get<any>('assets/demo/data/customers-large.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "EventService",
            "id": "injectable-EventService-7c0a03d19599c074a780acf4749ba3a1d93512782239b744e2ff806bb4fc63e14c581dee2deb688aa7dbcc81d48b8f11962741a637b78486ebc3d3f22dd06e01",
            "file": "src/app/demo/service/event.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EventService {\n\n    constructor(private http: HttpClient) { }\n\n    getEvents() {\n        return this.http.get<any>('assets/demo/data/scheduleevents.json')\n            .toPromise()\n            .then(res => res.data as any[])\n            .then(data => data);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "IconService",
            "id": "injectable-IconService-a65aaf69480067ae32a956bb6dc2a1e81bb95f1a9e5805d53956faf1208a89f0fe27250ed2df25eb3723674216dd2610865375a69f90ec169cd88c3178f99510",
            "file": "src/app/demo/service/icon.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'assets/demo/data/icons.json'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "icons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getIcons",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class IconService {\n\n    constructor(private http: HttpClient) { }\n\n    icons!: any[];\n\n    selectedIcon: any;\n\n    apiUrl = 'assets/demo/data/icons.json';\n\n    getIcons() {\n        return this.http.get(this.apiUrl).pipe(map((response: any) => {\n            this.icons = response.icons;\n            return this.icons;\n        }));\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LayoutService",
            "id": "injectable-LayoutService-9cfa5308d9c0385301781407bd7489b4a828ecf7e28dfb7cef6ba921a12ba2780e0ba18e96238baa950c9d5ed88cd03939916ba4a76667bde1ef6b0804928254",
            "file": "src/app/layout/service/app.layout.service.ts",
            "properties": [
                {
                    "name": "_config",
                    "defaultValue": "{\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'static',\n        colorScheme: 'light',\n        theme: 'lara-light-indigo',\n        scale: 14,\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "config",
                    "defaultValue": "signal<AppConfig>(this._config)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "configUpdate",
                    "defaultValue": "new Subject<AppConfig>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "configUpdate$",
                    "defaultValue": "this.configUpdate.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "overlayOpen",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "overlayOpen$",
                    "defaultValue": "this.overlayOpen.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "state",
                    "defaultValue": "{\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false,\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutState",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methods": [
                {
                    "name": "changeScale",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isDesktop",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isMobile",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfigUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMenuToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "replaceThemeLink",
                    "args": [
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showConfigSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showProfileSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateStyle",
                    "args": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, effect, signal } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface AppConfig {\n    inputStyle: string;\n    colorScheme: string;\n    theme: string;\n    ripple: boolean;\n    menuMode: string;\n    scale: number;\n}\n\ninterface LayoutState {\n    staticMenuDesktopInactive: boolean;\n    overlayMenuActive: boolean;\n    profileSidebarVisible: boolean;\n    configSidebarVisible: boolean;\n    staticMenuMobileActive: boolean;\n    menuHoverActive: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LayoutService {\n    _config: AppConfig = {\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'static',\n        colorScheme: 'light',\n        theme: 'lara-light-indigo',\n        scale: 14,\n    };\n\n    config = signal<AppConfig>(this._config);\n\n    state: LayoutState = {\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false,\n    };\n\n    private configUpdate = new Subject<AppConfig>();\n\n    private overlayOpen = new Subject<any>();\n\n    configUpdate$ = this.configUpdate.asObservable();\n\n    overlayOpen$ = this.overlayOpen.asObservable();\n\n    constructor() {\n        effect(() => {\n            const config = this.config();\n            if (this.updateStyle(config)) {\n                this.changeTheme();\n            }\n            this.changeScale(config.scale);\n            this.onConfigUpdate();\n        });\n    }\n\n    updateStyle(config: AppConfig) {\n        return (\n            config.theme !== this._config.theme ||\n            config.colorScheme !== this._config.colorScheme\n        );\n    }\n\n    onMenuToggle() {\n        if (this.isOverlay()) {\n            this.state.overlayMenuActive = !this.state.overlayMenuActive;\n            if (this.state.overlayMenuActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n\n        if (this.isDesktop()) {\n            this.state.staticMenuDesktopInactive =\n                !this.state.staticMenuDesktopInactive;\n        } else {\n            this.state.staticMenuMobileActive =\n                !this.state.staticMenuMobileActive;\n\n            if (this.state.staticMenuMobileActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n    }\n\n    showProfileSidebar() {\n        this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n        if (this.state.profileSidebarVisible) {\n            this.overlayOpen.next(null);\n        }\n    }\n\n    showConfigSidebar() {\n        this.state.configSidebarVisible = true;\n    }\n\n    isOverlay() {\n        return this.config().menuMode === 'overlay';\n    }\n\n    isDesktop() {\n        return window.innerWidth > 991;\n    }\n\n    isMobile() {\n        return !this.isDesktop();\n    }\n\n    onConfigUpdate() {\n        this._config = { ...this.config() };\n        this.configUpdate.next(this.config());\n    }\n\n    changeTheme() {\n        const config = this.config();\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const themeLinkHref = themeLink.getAttribute('href')!;\n        const newHref = themeLinkHref\n            .split('/')\n            .map((el) =>\n                el == this._config.theme\n                    ? (el = config.theme)\n                    : el == `theme-${this._config.colorScheme}`\n                    ? (el = `theme-${config.colorScheme}`)\n                    : el\n            )\n            .join('/');\n\n        this.replaceThemeLink(newHref);\n    }\n    replaceThemeLink(href: string) {\n        const id = 'theme-css';\n        let themeLink = <HTMLLinkElement>document.getElementById(id);\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(\n            cloneLinkElement,\n            themeLink.nextSibling\n        );\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n        });\n    }\n\n    changeScale(value: number) {\n        document.documentElement.style.fontSize = `${value}px`;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 52
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "MenuService",
            "id": "injectable-MenuService-be39be1bddf5f72ca4d6293cdaa988832741f24f96d8ee6726e4d6f5a129a8b28f614157a997664646eda0ea03b969b2e83ee4eff83c26fe96098d7c4e63eaa4",
            "file": "src/app/layout/app.menu.service.ts",
            "properties": [
                {
                    "name": "menuSource",
                    "defaultValue": "new Subject<MenuChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuSource$",
                    "defaultValue": "this.menuSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "resetSource",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resetSource$",
                    "defaultValue": "this.resetSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "onMenuStateChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "MenuChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MenuChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from './api/menuchangeevent';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenuService {\n\n    private menuSource = new Subject<MenuChangeEvent>();\n    private resetSource = new Subject();\n\n    menuSource$ = this.menuSource.asObservable();\n    resetSource$ = this.resetSource.asObservable();\n\n    onMenuStateChange(event: MenuChangeEvent) {\n        this.menuSource.next(event);\n    }\n\n    reset() {\n        this.resetSource.next(true);\n    }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NodeService",
            "id": "injectable-NodeService-2066d380791873107c99063485aa29ff035da351e0741ad3b7dd6fa5ccbeb9ce502d11e811e9fb2d3d65ad2251fcd26b84712734f8704a3954b9b85e708fae78",
            "file": "src/app/demo/service/node.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFilesystem",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLazyFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLazyFilesystem",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Injectable()\nexport class NodeService {\n\n    constructor(private http: HttpClient) { }\n\n    getFiles() {\n        return this.http.get<any>('assets/demo/data/files.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getLazyFiles() {\n        return this.http.get<any>('assets/demo/data/files-lazy.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getFilesystem() {\n        return this.http.get<any>('assets/demo/data/filesystem.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getLazyFilesystem() {\n        return this.http.get<any>('assets/demo/data/filesystem-lazy.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "PhotoService",
            "id": "injectable-PhotoService-7d484add9133ce2de0a08d1f3dc61f09606db58dee4c9952d93f42bfd6bce9859f8cc50e179fa7620e8760cefbd18e24dab8dc9a3d9480cae3fa72e2a49fac92",
            "file": "src/app/demo/service/photo.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getImages",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Image } from '../api/image';\n\n@Injectable()\nexport class PhotoService {\n\n    constructor(private http: HttpClient) { }\n\n    getImages() {\n        return this.http.get<any>('assets/demo/data/photos.json')\n            .toPromise()\n            .then(res => res.data as Image[])\n            .then(data => data);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-1bfcfc2e1d441666abad616f2b4d367baed02aaf542e0316a64717b24669ab31190745ef65f318ffef6fc5eec61179ef7b392d74e4351f07e75958647af4f220",
            "file": "src/app/demo/service/product.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsMixed",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsWithOrdersSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../api/product';\n\n@Injectable()\nexport class ProductService {\n\n    constructor(private http: HttpClient) { }\n\n    getProductsSmall() {\n        return this.http.get<any>('assets/demo/data/products-small.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProducts() {\n        return this.http.get<any>('assets/demo/data/products.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProductsMixed() {\n        return this.http.get<any>('assets/demo/data/products-mixed.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProductsWithOrdersSmall() {\n        return this.http.get<any>('assets/demo/data/products-orders-small.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AccessComponent",
            "id": "component-AccessComponent-27d6ab005c6d06320ac59e072942ba06f8834c9b78e298b7e2323dfb6a770bbd03296e1a3efbc25770533f32ce12af4b1b2757a7772073a2fe90f4259553594b",
            "file": "src/app/demo/components/auth/access/access.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-access",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./access.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-access',\n    templateUrl: './access.component.html',\n})\nexport class AccessComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <img src=\"assets/demo/images/access/logo-orange.svg\" alt=\"Sakai logo\" class=\"mb-5 w-6rem flex-shrink-0\">\n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, rgba(247, 149, 48, 0.4) 10%, rgba(247, 149, 48, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8 flex flex-column align-items-center\" style=\"border-radius:53px\">\n                <div class=\"grid flex flex-column align-items-center\">\n                    <div class=\"flex justify-content-center align-items-center bg-orange-500 border-circle\" style=\"width:3.2rem; height:3.2rem;\">\n                        <i class=\"text-50 pi pi-fw pi-lock text-2xl\"></i>\n                    </div>\n                    <h1 class=\"text-900 font-bold text-4xl lg:text-5xl mb-2\">Access Denied</h1>\n                    <span class=\"text-600 mb-5\">You do not have the necessary permisions. Please contact admins.</span>\n                    <img src=\"assets/demo/images/access/asset-access.svg\" alt=\"Access denied\" class=\"mb-5\" width=\"80%\">\n                    <button pButton pRipple icon=\"pi pi-arrow-left\" label=\"Go to Dashboard\" class=\"p-button-text\" [routerLink]=\"['/']\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5c5b6bdcdd1c70cca68d8510e744fe6631f328b1d6094cf058eb0143c6c5edc43e94f44cf17c9af0cf9a873da8fe0321c3ab00f5404127bb1d796e89d63a2513",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n    constructor(private primengConfig: PrimeNGConfig) { }\n\n    ngOnInit() {\n        this.primengConfig.ripple = true;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AppConfigComponent",
            "id": "component-AppConfigComponent-a7629e05ee68551af65ec623a2aeb7c86bdb98d724fda638ad9f3386a0948eae29564e7e756d9e6ed71d15bf39777ce3adf509723cb97a99c877ead711d32a05",
            "file": "src/app/layout/config/app.config.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-config",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.config.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "minimal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "menuService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "scales",
                    "defaultValue": "[12, 13, 14, 15, 16]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "colorScheme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "colorScheme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementScale",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "incrementScale",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfigButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { LayoutService } from '../service/app.layout.service';\nimport { MenuService } from '../app.menu.service';\n\n@Component({\n    selector: 'app-config',\n    templateUrl: './app.config.component.html',\n})\nexport class AppConfigComponent {\n    @Input() minimal: boolean = false;\n\n    scales: number[] = [12, 13, 14, 15, 16];\n\n    constructor(\n        public layoutService: LayoutService,\n        public menuService: MenuService\n    ) {}\n\n    get visible(): boolean {\n        return this.layoutService.state.configSidebarVisible;\n    }\n    set visible(_val: boolean) {\n        this.layoutService.state.configSidebarVisible = _val;\n    }\n\n    get scale(): number {\n        return this.layoutService.config().scale;\n    }\n    set scale(_val: number) {\n        this.layoutService.config.update((config) => ({\n            ...config,\n            scale: _val,\n        }));\n    }\n\n    get menuMode(): string {\n        return this.layoutService.config().menuMode;\n    }\n    set menuMode(_val: string) {\n        this.layoutService.config.update((config) => ({\n            ...config,\n            menuMode: _val,\n        }));\n    }\n\n    get inputStyle(): string {\n        return this.layoutService.config().inputStyle;\n    }\n    set inputStyle(_val: string) {\n        this.layoutService.config().inputStyle = _val;\n    }\n\n    get ripple(): boolean {\n        return this.layoutService.config().ripple;\n    }\n    set ripple(_val: boolean) {\n        this.layoutService.config.update((config) => ({\n            ...config,\n            ripple: _val,\n        }));\n    }\n\n    set theme(val: string) {\n        this.layoutService.config.update((config) => ({\n            ...config,\n            theme: val,\n        }));\n    }\n    get theme(): string {\n        return this.layoutService.config().theme;\n    }\n\n    set colorScheme(val: string) {\n        this.layoutService.config.update((config) => ({\n            ...config,\n            colorScheme: val,\n        }));\n    }\n    get colorScheme(): string {\n        return this.layoutService.config().colorScheme;\n    }\n\n    onConfigButtonClick() {\n        this.layoutService.showConfigSidebar();\n    }\n\n    changeTheme(theme: string, colorScheme: string) {\n        this.theme = theme;\n        this.colorScheme = colorScheme;\n    }\n\n    decrementScale() {\n        this.scale--;\n    }\n\n    incrementScale() {\n        this.scale++;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "visible": {
                    "name": "visible",
                    "setSignature": {
                        "name": "visible",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 22,
                        "jsdoctags": [
                            {
                                "name": "_val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "visible",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 19
                    }
                },
                "scale": {
                    "name": "scale",
                    "setSignature": {
                        "name": "scale",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_val",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "_val",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "scale",
                        "type": "number",
                        "returnType": "number",
                        "line": 26
                    }
                },
                "menuMode": {
                    "name": "menuMode",
                    "setSignature": {
                        "name": "menuMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "_val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "menuMode",
                        "type": "string",
                        "returnType": "string",
                        "line": 36
                    }
                },
                "inputStyle": {
                    "name": "inputStyle",
                    "setSignature": {
                        "name": "inputStyle",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 49,
                        "jsdoctags": [
                            {
                                "name": "_val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "inputStyle",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "ripple": {
                    "name": "ripple",
                    "setSignature": {
                        "name": "ripple",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "_val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "ripple",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 53
                    }
                },
                "theme": {
                    "name": "theme",
                    "setSignature": {
                        "name": "theme",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 63,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "theme",
                        "type": "string",
                        "returnType": "string",
                        "line": 69
                    }
                },
                "colorScheme": {
                    "name": "colorScheme",
                    "setSignature": {
                        "name": "colorScheme",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 73,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "colorScheme",
                        "type": "string",
                        "returnType": "string",
                        "line": 79
                    }
                }
            },
            "templateData": "<button class=\"layout-config-button p-link\" type=\"button\" (click)=\"onConfigButtonClick()\">\n    <i class=\"pi pi-cog\"></i>\n</button>\n\n<p-sidebar [(visible)]=\"visible\" position=\"right\" [transitionOptions]=\"'.3s cubic-bezier(0, 0, 0.2, 1)'\" styleClass=\"layout-config-sidebar w-20rem\">\n    <h5>Scale</h5>\n    <div class=\"flex align-items-center\">\n        <button icon=\"pi pi-minus\" type=\"button\" pButton (click)=\"decrementScale()\" class=\"p-button-text p-button-rounded w-2rem h-2rem mr-2\" [disabled]=\"scale === scales[0]\"></button>\n        <div class=\"flex gap-2 align-items-center\">\n            <i class=\"pi pi-circle-fill text-300\" *ngFor=\"let s of scales\" [ngClass]=\"{'text-primary-500': s === scale}\"></i>\n        </div>\n        <button icon=\"pi pi-plus\"  type=\"button\" pButton (click)=\"incrementScale()\" class=\"p-button-text p-button-rounded w-2rem h-2rem ml-2\" [disabled]=\"scale === scales[scales.length - 1]\"></button>\n    </div>\n\n    <ng-container *ngIf=\"!minimal\">\n        <h5>Menu Type</h5>\n        <div class=\"field-radiobutton\">\n            <p-radioButton name=\"menuMode\" value=\"static\" [(ngModel)]=\"menuMode\" inputId=\"mode1\"></p-radioButton>\n            <label for=\"mode1\">Static</label>\n        </div>\n        <div class=\"field-radiobutton\">\n            <p-radioButton name=\"menuMode\" value=\"overlay\" [(ngModel)]=\"menuMode\" inputId=\"mode2\"></p-radioButton>\n            <label for=\"mode2\">Overlay</label>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"!minimal\">\n        <h5>Input Style</h5>\n        <div class=\"flex\">\n            <div class=\"field-radiobutton flex-1\">\n                <p-radioButton name=\"inputStyle\" value=\"outlined\" [(ngModel)]=\"inputStyle\" inputId=\"outlined_input\"></p-radioButton>\n                <label for=\"outlined_input\">Outlined</label>\n            </div>\n            <div class=\"field-radiobutton flex-1\">\n                <p-radioButton name=\"inputStyle\" value=\"filled\" [(ngModel)]=\"inputStyle\" inputId=\"filled_input\"></p-radioButton>\n                <label for=\"filled_input\">Filled</label>\n            </div>\n        </div>\n\n        <h5>Ripple Effect</h5>\n        <p-inputSwitch [(ngModel)]=\"ripple\"></p-inputSwitch>\n    </ng-container>\n\n\n    <h5>Bootstrap</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('bootstrap4-light-blue', 'light')\">\n                <img src=\"assets/layout/images/themes/bootstrap4-light-blue.svg\" class=\"w-2rem h-2rem\" alt=\"Bootstrap Light Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('bootstrap4-light-purple', 'light')\">\n                <img src=\"assets/layout/images/themes/bootstrap4-light-purple.svg\" class=\"w-2rem h-2rem\" alt=\"Bootstrap Light Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('bootstrap4-dark-blue', 'dark')\">\n                <img src=\"assets/layout/images/themes/bootstrap4-dark-blue.svg\" class=\"w-2rem h-2rem\" alt=\"Bootstrap Dark Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('bootstrap4-dark-purple', 'dark')\">\n                <img src=\"assets/layout/images/themes/bootstrap4-dark-purple.svg\" class=\"w-2rem h-2rem\" alt=\"Bootstrap Dark Purple\">\n            </button>\n        </div>\n    </div>\n\n    <h5>Material Design</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('md-light-indigo', 'light')\">\n                <img src=\"assets/layout/images/themes/md-light-indigo.svg\" class=\"w-2rem h-2rem\" alt=\"Material Light Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('md-light-deeppurple', 'light')\">\n                <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" class=\"w-2rem h-2rem\" alt=\"Material Light DeepPurple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('md-dark-indigo', 'dark')\">\n                <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" class=\"w-2rem h-2rem\" alt=\"Material Dark Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('md-dark-deeppurple', 'dark')\">\n                <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" class=\"w-2rem h-2rem\" alt=\"Material Dark DeepPurple\">\n            </button>\n        </div>\n    </div>\n\n    <h5>Material Design Compact</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('mdc-light-indigo', 'light')\">\n                <img src=\"assets/layout/images/themes/md-light-indigo.svg\" class=\"w-2rem h-2rem\" alt=\"Material Light Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('mdc-light-deeppurple', 'light')\">\n                <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" class=\"w-2rem h-2rem\" alt=\"Material Light Deep Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('mdc-dark-indigo', 'dark')\">\n                <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" class=\"w-2rem h-2rem\" alt=\"Material Dark Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('mdc-dark-deeppurple', 'dark')\">\n                <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" class=\"w-2rem h-2rem\" alt=\"Material Dark Deep Purple\">\n            </button>\n        </div>\n    </div>\n\n    <h5>Tailwind</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('tailwind-light', 'light')\">\n                <img src=\"assets/layout/images/themes/tailwind-light.png\" class=\"w-2rem h-2rem\" alt=\"Tailwind Light\">\n            </button>\n        </div>\n    </div>\n\n    <h5>Fluent UI</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('fluent-light', 'light')\">\n                <img src=\"assets/layout/images/themes/fluent-light.png\" class=\"w-2rem h-2rem\" alt=\"Fluent Light\">\n            </button>\n        </div>\n    </div>\n\n    <h5>PrimeOne Design - 2022</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-light-indigo', 'light')\">\n                <img src=\"assets/layout/images/themes/lara-light-indigo.png\" class=\"w-2rem h-2rem\" alt=\"Lara Light Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-light-blue', 'light')\">\n                <img src=\"assets/layout/images/themes/lara-light-blue.png\" class=\"w-2rem h-2rem\" alt=\"Lara Light Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-light-purple', 'light')\">\n                <img src=\"assets/layout/images/themes/lara-light-purple.png\" class=\"w-2rem h-2rem\" alt=\"Lara Light Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-light-teal', 'light')\">\n                <img src=\"assets/layout/images/themes/lara-light-teal.png\" class=\"w-2rem h-2rem\" alt=\"Lara Light Teal\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-dark-indigo', 'dark')\">\n                <img src=\"assets/layout/images/themes/lara-dark-indigo.png\" class=\"w-2rem h-2rem\" alt=\"Lara Dark Indigo\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-dark-blue', 'dark')\">\n                <img src=\"assets/layout/images/themes/lara-dark-blue.png\" class=\"w-2rem h-2rem\" alt=\"Lara Dark Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-dark-purple', 'dark')\">\n                <img src=\"assets/layout/images/themes/lara-dark-purple.png\" class=\"w-2rem h-2rem\" alt=\"Lara Dark Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('lara-dark-teal', 'dark')\">\n                <img src=\"assets/layout/images/themes/lara-dark-teal.png\" class=\"w-2rem h-2rem\" alt=\"Lara Dark Teal\">\n            </button>\n        </div>\n    </div>\n\n    <h5>PrimeOne Design - 2021</h5>\n    <div class=\"grid\">\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('saga-blue', 'light')\">\n                <img src=\"assets/layout/images/themes/saga-blue.png\" class=\"w-2rem h-2rem\" alt=\"Saga Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('saga-green', 'light')\">\n                <img src=\"assets/layout/images/themes/saga-green.png\" class=\"w-2rem h-2rem\" alt=\"Saga Green\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('saga-orange', 'light')\">\n                <img src=\"assets/layout/images/themes/saga-orange.png\" class=\"w-2rem h-2rem\" alt=\"Saga Orange\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('saga-purple', 'light')\">\n                <img src=\"assets/layout/images/themes/saga-purple.png\" class=\"w-2rem h-2rem\" alt=\"Saga Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('vela-blue', 'dark')\">\n                <img src=\"assets/layout/images/themes/vela-blue.png\" class=\"w-2rem h-2rem\" alt=\"Vela Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('vela-green', 'dark')\">\n                <img src=\"assets/layout/images/themes/vela-green.png\" class=\"w-2rem h-2rem\" alt=\"Vela Green\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('vela-orange', 'dark')\">\n                <img src=\"assets/layout/images/themes/vela-orange.png\" class=\"w-2rem h-2rem\" alt=\"Vela Orange\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('vela-purple', 'dark')\">\n                <img src=\"assets/layout/images/themes/vela-purple.png\" class=\"w-2rem h-2rem\" alt=\"Vela Purple\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('arya-blue', 'dark')\">\n                <img src=\"assets/layout/images/themes/arya-blue.png\" class=\"w-2rem h-2rem\" alt=\"Arya Blue\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('arya-green', 'dark')\">\n                <img src=\"assets/layout/images/themes/arya-green.png\" class=\"w-2rem h-2rem\" alt=\"Arya Green\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('arya-orange', 'dark')\">\n                <img src=\"assets/layout/images/themes/arya-orange.png\" class=\"w-2rem h-2rem\" alt=\"Arya Orange\">\n            </button>\n        </div>\n        <div class=\"col-3\">\n            <button class=\"p-link w-2rem h-2rem\" (click)=\"changeTheme('arya-purple', 'dark')\">\n                <img src=\"assets/layout/images/themes/arya-purple.png\" class=\"w-2rem h-2rem\" alt=\"Arya Purple\">\n            </button>\n        </div>\n    </div>\n</p-sidebar>\n"
        },
        {
            "name": "AppFooterComponent",
            "id": "component-AppFooterComponent-410bc1aaf18d7a3a67f386f1b76c4bb560d99fa408a5e7a890b6fbcbd5db1c474ad920a723e2f09c603f6ad6450053b8594ec47ec3448bc9159c6b53b38abed3",
            "file": "src/app/layout/app.footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { LayoutService } from \"./service/app.layout.service\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './app.footer.component.html'\n})\nexport class AppFooterComponent {\n    constructor(public layoutService: LayoutService) { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"layout-footer\">\n    <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"Logo\" height=\"20\" class=\"mr-2\"/>\n    by\n    <span class=\"font-medium ml-2\">PrimeNG</span>\n</div>\n"
        },
        {
            "name": "AppLayoutComponent",
            "id": "component-AppLayoutComponent-04969a3ee47cb440a331ccab121188ce1e7708d3223e22330cdc1b3c7c911e4a10812e2234f23cdcceefef3f5a34824402ac8b6fb5f1f84e0ef9f171a00a5f27",
            "file": "src/app/layout/app.layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appSidebar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppSidebarComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AppSidebarComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "appTopbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppTopBarComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AppTopBarComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "menuOutsideClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "overlayMenuOpenSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "profileMenuOutsideClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "blockBodyScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideProfileMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unblockBodyScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, Subscription } from 'rxjs';\nimport { LayoutService } from \"./service/app.layout.service\";\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppTopBarComponent } from './app.topbar.component';\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './app.layout.component.html'\n})\nexport class AppLayoutComponent implements OnDestroy {\n\n    overlayMenuOpenSubscription: Subscription;\n\n    menuOutsideClickListener: any;\n\n    profileMenuOutsideClickListener: any;\n\n    @ViewChild(AppSidebarComponent) appSidebar!: AppSidebarComponent;\n\n    @ViewChild(AppTopBarComponent) appTopbar!: AppTopBarComponent;\n\n    constructor(public layoutService: LayoutService, public renderer: Renderer2, public router: Router) {\n        this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\n            if (!this.menuOutsideClickListener) {\n                this.menuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                    const isOutsideClicked = !(this.appSidebar.el.nativeElement.isSameNode(event.target) || this.appSidebar.el.nativeElement.contains(event.target) \n                        || this.appTopbar.menuButton.nativeElement.isSameNode(event.target) || this.appTopbar.menuButton.nativeElement.contains(event.target));\n                    \n                    if (isOutsideClicked) {\n                        this.hideMenu();\n                    }\n                });\n            }\n\n            if (!this.profileMenuOutsideClickListener) {\n                this.profileMenuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                    const isOutsideClicked = !(this.appTopbar.menu.nativeElement.isSameNode(event.target) || this.appTopbar.menu.nativeElement.contains(event.target)\n                        || this.appTopbar.topbarMenuButton.nativeElement.isSameNode(event.target) || this.appTopbar.topbarMenuButton.nativeElement.contains(event.target));\n\n                    if (isOutsideClicked) {\n                        this.hideProfileMenu();\n                    }\n                });\n            }\n\n            if (this.layoutService.state.staticMenuMobileActive) {\n                this.blockBodyScroll();\n            }\n        });\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => {\n                this.hideMenu();\n                this.hideProfileMenu();\n            });\n    }\n\n    hideMenu() {\n        this.layoutService.state.overlayMenuActive = false;\n        this.layoutService.state.staticMenuMobileActive = false;\n        this.layoutService.state.menuHoverActive = false;\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n            this.menuOutsideClickListener = null;\n        }\n        this.unblockBodyScroll();\n    }\n\n    hideProfileMenu() {\n        this.layoutService.state.profileSidebarVisible = false;\n        if (this.profileMenuOutsideClickListener) {\n            this.profileMenuOutsideClickListener();\n            this.profileMenuOutsideClickListener = null;\n        }\n    }\n\n    blockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.add('blocked-scroll');\n        }\n        else {\n            document.body.className += ' blocked-scroll';\n        }\n    }\n\n    unblockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.remove('blocked-scroll');\n        }\n        else {\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n\n    get containerClass() {\n        return {\n            'layout-theme-light': this.layoutService.config().colorScheme === 'light',\n            'layout-theme-dark': this.layoutService.config().colorScheme === 'dark',\n            'layout-overlay': this.layoutService.config().menuMode === 'overlay',\n            'layout-static': this.layoutService.config().menuMode === 'static',\n            'layout-static-inactive': this.layoutService.state.staticMenuDesktopInactive && this.layoutService.config().menuMode === 'static',\n            'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n            'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n            'p-input-filled': this.layoutService.config().inputStyle === 'filled',\n            'p-ripple-disabled': !this.layoutService.config().ripple\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.overlayMenuOpenSubscription) {\n            this.overlayMenuOpenSubscription.unsubscribe();\n        }\n\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "containerClass": {
                    "name": "containerClass",
                    "getSignature": {
                        "name": "containerClass",
                        "type": "",
                        "returnType": "",
                        "line": 98
                    }
                }
            },
            "templateData": "<div class=\"layout-wrapper\" [ngClass]=\"containerClass\">\n    <app-topbar></app-topbar>\n    <div class=\"layout-sidebar\">\n        <app-sidebar></app-sidebar>\n    </div>\n    <div class=\"layout-main-container\">\n        <div class=\"layout-main\">\n            <router-outlet></router-outlet>\n        </div>\n        <app-footer></app-footer>\n    </div>\n    <app-config></app-config>\n    <div class=\"layout-mask\"></div>\n</div>\n"
        },
        {
            "name": "AppMenuComponent",
            "id": "component-AppMenuComponent-d3c7d1634b2580809ad62ed0296c0301df9352f6588bbf73b5958aad7699512d3db524e3d93b5cafee088349a64ad8d203e8ccb59eab356f9e5bd63afd3278dc",
            "file": "src/app/layout/app.menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "model",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { OnInit } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { LayoutService } from './service/app.layout.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './app.menu.component.html'\n})\nexport class AppMenuComponent implements OnInit {\n\n    model: any[] = [];\n\n    constructor(public layoutService: LayoutService) { }\n\n    ngOnInit() {\n        this.model = [\n            {\n                label: 'Home',\n                items: [\n                    { label: 'Dashboard', icon: 'pi pi-fw pi-home', routerLink: ['/'] }\n                ]\n            },\n            {\n                label: 'UI Components',\n                items: [\n                    { label: 'Form Layout', icon: 'pi pi-fw pi-id-card', routerLink: ['/uikit/formlayout'] },\n                    { label: 'Input', icon: 'pi pi-fw pi-check-square', routerLink: ['/uikit/input'] },\n                    { label: 'Float Label', icon: 'pi pi-fw pi-bookmark', routerLink: ['/uikit/floatlabel'] },\n                    { label: 'Invalid State', icon: 'pi pi-fw pi-exclamation-circle', routerLink: ['/uikit/invalidstate'] },\n                    { label: 'Button', icon: 'pi pi-fw pi-box', routerLink: ['/uikit/button'] },\n                    { label: 'Table', icon: 'pi pi-fw pi-table', routerLink: ['/uikit/table'] },\n                    { label: 'List', icon: 'pi pi-fw pi-list', routerLink: ['/uikit/list'] },\n                    { label: 'Tree', icon: 'pi pi-fw pi-share-alt', routerLink: ['/uikit/tree'] },\n                    { label: 'Panel', icon: 'pi pi-fw pi-tablet', routerLink: ['/uikit/panel'] },\n                    { label: 'Overlay', icon: 'pi pi-fw pi-clone', routerLink: ['/uikit/overlay'] },\n                    { label: 'Media', icon: 'pi pi-fw pi-image', routerLink: ['/uikit/media'] },\n                    { label: 'Menu', icon: 'pi pi-fw pi-bars', routerLink: ['/uikit/menu'], routerLinkActiveOptions: { paths: 'subset', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' } },\n                    { label: 'Message', icon: 'pi pi-fw pi-comment', routerLink: ['/uikit/message'] },\n                    { label: 'File', icon: 'pi pi-fw pi-file', routerLink: ['/uikit/file'] },\n                    { label: 'Chart', icon: 'pi pi-fw pi-chart-bar', routerLink: ['/uikit/charts'] },\n                    { label: 'Misc', icon: 'pi pi-fw pi-circle', routerLink: ['/uikit/misc'] }\n                ]\n            },\n            {\n                label: 'Prime Blocks',\n                items: [\n                    { label: 'Free Blocks', icon: 'pi pi-fw pi-eye', routerLink: ['/blocks'], badge: 'NEW' },\n                    { label: 'All Blocks', icon: 'pi pi-fw pi-globe', url: ['https://www.primefaces.org/primeblocks-ng'], target: '_blank' },\n                ]\n            },\n            {\n                label: 'Utilities',\n                items: [\n                    { label: 'PrimeIcons', icon: 'pi pi-fw pi-prime', routerLink: ['/utilities/icons'] },\n                    { label: 'PrimeFlex', icon: 'pi pi-fw pi-desktop', url: ['https://www.primefaces.org/primeflex/'], target: '_blank' },\n                ]\n            },\n            {\n                label: 'Pages',\n                icon: 'pi pi-fw pi-briefcase',\n                items: [\n                    {\n                        label: 'Landing',\n                        icon: 'pi pi-fw pi-globe',\n                        routerLink: ['/landing']\n                    },\n                    {\n                        label: 'Auth',\n                        icon: 'pi pi-fw pi-user',\n                        items: [\n                            {\n                                label: 'Login',\n                                icon: 'pi pi-fw pi-sign-in',\n                                routerLink: ['/auth/login']\n                            },\n                            {\n                                label: 'Error',\n                                icon: 'pi pi-fw pi-times-circle',\n                                routerLink: ['/auth/error']\n                            },\n                            {\n                                label: 'Access Denied',\n                                icon: 'pi pi-fw pi-lock',\n                                routerLink: ['/auth/access']\n                            }\n                        ]\n                    },\n                    {\n                        label: 'Crud',\n                        icon: 'pi pi-fw pi-pencil',\n                        routerLink: ['/pages/crud']\n                    },\n                    {\n                        label: 'Timeline',\n                        icon: 'pi pi-fw pi-calendar',\n                        routerLink: ['/pages/timeline']\n                    },\n                    {\n                        label: 'Not Found',\n                        icon: 'pi pi-fw pi-exclamation-circle',\n                        routerLink: ['/notfound']\n                    },\n                    {\n                        label: 'Empty',\n                        icon: 'pi pi-fw pi-circle-off',\n                        routerLink: ['/pages/empty']\n                    },\n                ]\n            },\n            {\n                label: 'Hierarchy',\n                items: [\n                    {\n                        label: 'Submenu 1', icon: 'pi pi-fw pi-bookmark',\n                        items: [\n                            {\n                                label: 'Submenu 1.1', icon: 'pi pi-fw pi-bookmark',\n                                items: [\n                                    { label: 'Submenu 1.1.1', icon: 'pi pi-fw pi-bookmark' },\n                                    { label: 'Submenu 1.1.2', icon: 'pi pi-fw pi-bookmark' },\n                                    { label: 'Submenu 1.1.3', icon: 'pi pi-fw pi-bookmark' },\n                                ]\n                            },\n                            {\n                                label: 'Submenu 1.2', icon: 'pi pi-fw pi-bookmark',\n                                items: [\n                                    { label: 'Submenu 1.2.1', icon: 'pi pi-fw pi-bookmark' }\n                                ]\n                            },\n                        ]\n                    },\n                    {\n                        label: 'Submenu 2', icon: 'pi pi-fw pi-bookmark',\n                        items: [\n                            {\n                                label: 'Submenu 2.1', icon: 'pi pi-fw pi-bookmark',\n                                items: [\n                                    { label: 'Submenu 2.1.1', icon: 'pi pi-fw pi-bookmark' },\n                                    { label: 'Submenu 2.1.2', icon: 'pi pi-fw pi-bookmark' },\n                                ]\n                            },\n                            {\n                                label: 'Submenu 2.2', icon: 'pi pi-fw pi-bookmark',\n                                items: [\n                                    { label: 'Submenu 2.2.1', icon: 'pi pi-fw pi-bookmark' },\n                                ]\n                            },\n                        ]\n                    }\n                ]\n            },\n            {\n                label: 'Get Started',\n                items: [\n                    {\n                        label: 'Documentation', icon: 'pi pi-fw pi-question', routerLink: ['/documentation']\n                    },\n                    {\n                        label: 'View Source', icon: 'pi pi-fw pi-search', url: ['https://github.com/primefaces/sakai-ng-storybook'], target: '_blank'\n                    }\n                ]\n            }\n        ];\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"layout-menu\">\n    <ng-container *ngFor=\"let item of model; let i = index;\">\n        <li app-menuitem *ngIf=\"!item.separator\" [item]=\"item\" [index]=\"i\" [root]=\"true\"></li>\n        <li *ngIf=\"item.separator\" class=\"menu-separator\"></li>\n    </ng-container>\n    <li>\n        <a href=\"https://www.primefaces.org/primeblocks-ng/#/\">\n            <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'banner-primeblocks' : 'banner-primeblocks-dark'}}.png\" alt=\"Prime Blocks\" class=\"w-full mt-3\"/>\n        </a>\n    </li>\n</ul>\n"
        },
        {
            "name": "AppMenuitemComponent",
            "id": "component-AppMenuitemComponent-5576dc4cce5f760adcacfa6b1b8df082065144eb412f71ccff2eb62cb7174bed9d4f5e675ef8022e13e1b8b05c64f8017ab075786b3cb12582c18ed0ba70e1c3",
            "file": "src/app/layout/app.menuitem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[app-menuitem]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container>\n          <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{item.label}}</div>\n\t<a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\"\n\t   [ngClass]=\"item.class\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t</a>\n\t<a *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" (click)=\"itemClick($event)\" [ngClass]=\"item.class\"\n\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{ paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\n             [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\"\n             [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" [queryParams]=\"item.queryParams\"\n             [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t</a>\n\n\t<ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\n\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n\t\t\t<li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\n\t\t</ng-template>\n\t</ul>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "parentKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "root",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "key",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "menuResetSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "menuSourceSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "itemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateActiveStateFromRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.active-menuitem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 135,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MenuService } from './app.menu.service';\nimport { LayoutService } from './service/app.layout.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: '[app-menuitem]',\n    template: `\n\t\t<ng-container>\n            <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{item.label}}</div>\n\t\t\t<a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\"\n\t\t\t   [ngClass]=\"item.class\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\t\t\t<a *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" (click)=\"itemClick($event)\" [ngClass]=\"item.class\" \n\t\t\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{ paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\n               [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" \n               [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" [queryParams]=\"item.queryParams\"\n               [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\n\t\t\t<ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\n\t\t\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n\t\t\t\t\t<li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\n\t\t\t\t</ng-template>\n\t\t\t</ul>\n\t\t</ng-container>\n    `,\n    animations: [\n        trigger('children', [\n            state('collapsed', style({\n                height: '0'\n            })),\n            state('expanded', style({\n                height: '*'\n            })),\n            transition('collapsed <=> expanded', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class AppMenuitemComponent implements OnInit, OnDestroy {\n\n    @Input() item: any;\n\n    @Input() index!: number;\n\n    @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n    @Input() parentKey!: string;\n\n    active = false;\n\n    menuSourceSubscription: Subscription;\n\n    menuResetSubscription: Subscription;\n\n    key: string = \"\";\n\n    constructor(public layoutService: LayoutService, private cd: ChangeDetectorRef, public router: Router, private menuService: MenuService) {\n        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(value => {\n            Promise.resolve(null).then(() => {\n                if (value.routeEvent) {\n                    this.active = (value.key === this.key || value.key.startsWith(this.key + '-')) ? true : false;\n                }\n                else {\n                    if (value.key !== this.key && !value.key.startsWith(this.key + '-')) {\n                        this.active = false;\n                    }\n                }\n            });\n        });\n\n        this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n            this.active = false;\n        });\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(params => {\n                if (this.item.routerLink) {\n                    this.updateActiveStateFromRoute();\n                }\n            });\n    }\n\n    ngOnInit() {\n        this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\n\n        if (this.item.routerLink) {\n            this.updateActiveStateFromRoute();\n        }\n    }\n\n    updateActiveStateFromRoute() {\n        let activeRoute = this.router.isActive(this.item.routerLink[0], { paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' });\n\n        if (activeRoute) {\n            this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n        }\n    }\n\n    itemClick(event: Event) {\n        // avoid processing disabled items\n        if (this.item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        // execute command\n        if (this.item.command) {\n            this.item.command({ originalEvent: event, item: this.item });\n        }\n\n        // toggle active state\n        if (this.item.items) {\n            this.active = !this.active;\n        }\n\n        this.menuService.onMenuStateChange({ key: this.key });\n    }\n\n    get submenuAnimation() {\n        return this.root ? 'expanded' : (this.active ? 'expanded' : 'collapsed');\n    }\n\n    @HostBinding('class.active-menuitem') \n    get activeClass() {\n        return this.active && !this.root;\n    }\n\n    ngOnDestroy() {\n        if (this.menuSourceSubscription) {\n            this.menuSourceSubscription.unsubscribe();\n        }\n\n        if (this.menuResetSubscription) {\n            this.menuResetSubscription.unsubscribe();\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "submenuAnimation": {
                    "name": "submenuAnimation",
                    "getSignature": {
                        "name": "submenuAnimation",
                        "type": "",
                        "returnType": "",
                        "line": 130
                    }
                },
                "activeClass": {
                    "name": "activeClass",
                    "getSignature": {
                        "name": "activeClass",
                        "type": "",
                        "returnType": "",
                        "line": 135
                    }
                }
            }
        },
        {
            "name": "AppSidebarComponent",
            "id": "component-AppSidebarComponent-5c7e59f6beb4d552d668c426a9699214a9a6de9dde11f5b0fb7beed0eb764fb22383c9ae59cd173a644a748a08203b1710f2712342e42b7550395051e02a88ba",
            "file": "src/app/layout/app.sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef } from '@angular/core';\nimport { LayoutService } from \"./service/app.layout.service\";\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './app.sidebar.component.html'\n})\nexport class AppSidebarComponent {\n    constructor(public layoutService: LayoutService, public el: ElementRef) { }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": " <app-menu></app-menu>\n"
        },
        {
            "name": "AppTopBarComponent",
            "id": "component-AppTopBarComponent-595fe90cfe2ad9f9c166912c6de95b177b0aaf6a03763a5e9069e4e7b87eddc2d1822622ba956d31edfe9f8aa00d7146f437be259217304101b8cc3c860eab20",
            "file": "src/app/layout/app.topbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-topbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.topbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'topbarmenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "menuButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menubutton'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "topbarMenuButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'topbarmenubutton'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from \"./service/app.layout.service\";\n\n@Component({\n    selector: 'app-topbar',\n    templateUrl: './app.topbar.component.html'\n})\nexport class AppTopBarComponent {\n\n    items!: MenuItem[];\n\n    @ViewChild('menubutton') menuButton!: ElementRef;\n\n    @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n\n    @ViewChild('topbarmenu') menu!: ElementRef;\n\n    constructor(public layoutService: LayoutService) { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"layout-topbar\">\n    <a class=\"layout-topbar-logo\" routerLink=\"\">\n        <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"logo\">\n        <span>SAKAI</span>\n    </a>\n\n    <button #menubutton class=\"p-link layout-menu-button layout-topbar-button\" (click)=\"layoutService.onMenuToggle()\">\n        <i class=\"pi pi-bars\"></i>\n    </button>\n\n    <button #topbarmenubutton class=\"p-link layout-topbar-menu-button layout-topbar-button\" (click)=\"layoutService.showProfileSidebar()\">\n        <i class=\"pi pi-ellipsis-v\"></i>\n    </button>\n\n    <div #topbarmenu class=\"layout-topbar-menu\" [ngClass]=\"{'layout-topbar-menu-mobile-active': layoutService.state.profileSidebarVisible}\">\n        <button class=\"p-link layout-topbar-button\">\n            <i class=\"pi pi-calendar\"></i>\n            <span>Calendar</span>\n        </button>\n        <button class=\"p-link layout-topbar-button\">\n            <i class=\"pi pi-user\"></i>\n            <span>Profile</span>\n        </button>\n        <button class=\"p-link layout-topbar-button\" [routerLink]=\"'/documentation'\">\n            <i class=\"pi pi-cog\"></i>\n            <span>Settings</span>\n        </button>\n    </div>\n</div>"
        },
        {
            "name": "BlocksComponent",
            "id": "component-BlocksComponent-4265e045106d49a3aa1b46a44ddec4c528cf2b0bd66c0ac997a0dda2f30a767f7160460cabac462f2020d5701df1c60991a4c1002acec4124cac917c389afecd",
            "file": "src/app/demo/components/primeblocks/blocks/blocks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blocks.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "block1",
                    "defaultValue": "`\n<div class=\"grid grid-nogutter surface-section text-800\">\n    <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n        <section>\n            <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n            <div class=\"text-6xl text-primary font-bold mb-3\">visitors deserve to see</div>\n            <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n            <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\n            <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\n        </section>\n    </div>\n    <div class=\"col-12 md:col-6 overflow-hidden\">\n        <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "block10",
                    "defaultValue": "`\n<div class=\"surface-card p-4 shadow-2 border-round\">\n    <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\n    <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\n    <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 400
                },
                {
                    "name": "block2",
                    "defaultValue": "`\n<div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\n    <div class=\"mb-3 font-bold text-2xl\">\n        <span class=\"text-900\">One Product, </span>\n        <span class=\"text-blue-600\">Many Solutions</span>\n    </div>\n    <div class=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\n    <div class=\"grid\">\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\n            <span class=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\n            <span class=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\n            <span class=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\n            <span class=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-github text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Open Source</div>\n            <span class=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\n        </div>\n        <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\n            <span class=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\n        </div>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "block3",
                    "defaultValue": "`\n<div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\n    <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n\n    <div class=\"grid\">\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$9</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$29</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$49</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Imperdiet proin</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Nisi scelerisque</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "block4",
                    "defaultValue": "`\n<div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"text-700 text-center\">\n        <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\n        <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\n        <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n        <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "block5",
                    "defaultValue": "`\n<div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\n    <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\n    <div class=\"align-items-center hidden lg:flex\">\n        <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\n    </div>\n    <a class=\"flex align-items-center ml-2 mr-8\">\n        <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\n    </a>\n    <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\n        <i class=\"pi pi-times\"></i>\n    </a>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "block6",
                    "defaultValue": "`\n<div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\n    <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\n        <li>\n            <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\n        </li>\n        <li class=\"px-2\">\n            <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\n        </li>\n        <li>\n            <span class=\"text-900 line-height-3\">Analytics</span>\n        </li>\n    </ul>\n    <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\n        <div>\n            <div class=\"font-medium text-3xl text-900\">Customers</div>\n            <div class=\"flex align-items-center text-700 flex-wrap\">\n                <div class=\"mr-5 flex align-items-center mt-3\">\n                    <i class=\"pi pi-users mr-2\"></i>\n                    <span>332 Active Users</span>\n                </div>\n                <div class=\"mr-5 flex align-items-center mt-3\">\n                    <i class=\"pi pi-globe mr-2\"></i>\n                    <span>9402 Sessions</span>\n                </div>\n                <div class=\"flex align-items-center mt-3\">\n                    <i class=\"pi pi-clock mr-2\"></i>\n                    <span>2.32m Avg. Duration</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"mt-3 lg:mt-0\">\n            <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\n            <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\n        </div>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 219
                },
                {
                    "name": "block7",
                    "defaultValue": "`\n<div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\n    <div class=\"grid\">\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Orders</span>\n                        <div class=\"text-900 font-medium text-xl\">152</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">24 new </span>\n                <span class=\"text-500\">since last visit</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Revenue</span>\n                        <div class=\"text-900 font-medium text-xl\">$2.100</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">%52+ </span>\n                <span class=\"text-500\">since last week</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Customers</span>\n                        <div class=\"text-900 font-medium text-xl\">28441</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">520  </span>\n                <span class=\"text-500\">newly registered</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Comments</span>\n                        <div class=\"text-900 font-medium text-xl\">152 Unread</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">85 </span>\n                <span class=\"text-500\">responded</span>\n            </div>\n        </div>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 257
                },
                {
                    "name": "block8",
                    "defaultValue": "`\n<div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n    <div class=\"text-center mb-5\">\n        <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n        <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\n        <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\n        <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\n    </div>\n\n    <div>\n        <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\n        <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\n\n        <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\n        <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\n\n        <div class=\"flex align-items-center justify-content-between mb-6\">\n            <div class=\"flex align-items-center\">\n                <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                <label for=\"rememberme1\">Remember me</label>\n            </div>\n            <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\n        </div>\n\n        <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\n    </div>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 323
                },
                {
                    "name": "block9",
                    "defaultValue": "`\n<div class=\"surface-section\">\n    <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\n    <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\n    <ul class=\"list-none p-0 m-0\">\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\n                <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\n                <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\n                <p-chip label=\"Thriller\"></p-chip>\n            </div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\n                A group of professional bank robbers start to feel the heat from police\n                when they unknowingly leave a clue at their latest heist.</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n    </ul>\n</div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 351
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './blocks.component.html'\n})\nexport class BlocksComponent{\n\n    block1: string = `\n<div class=\"grid grid-nogutter surface-section text-800\">\n    <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n        <section>\n            <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n            <div class=\"text-6xl text-primary font-bold mb-3\">visitors deserve to see</div>\n            <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n            <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\n            <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\n        </section>\n    </div>\n    <div class=\"col-12 md:col-6 overflow-hidden\">\n        <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\n    </div>\n</div>`;\n\n    block2: string = `\n<div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\n    <div class=\"mb-3 font-bold text-2xl\">\n        <span class=\"text-900\">One Product, </span>\n        <span class=\"text-blue-600\">Many Solutions</span>\n    </div>\n    <div class=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\n    <div class=\"grid\">\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\n            <span class=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\n            <span class=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\n            <span class=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\n            <span class=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\n        </div>\n        <div class=\"col-12 md:col-4 mb-4 px-5\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-github text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Open Source</div>\n            <span class=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\n        </div>\n        <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n            <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\n            </span>\n            <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\n            <span class=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\n        </div>\n    </div>\n</div>`;\n\n    block3: string = `\n<div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\n    <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n\n    <div class=\"grid\">\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$9</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$29</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 lg:col-4\">\n            <div class=\"p-3 h-full\">\n                <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\n                    <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\n                    <div class=\"text-600\">Plan description</div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div class=\"flex align-items-center\">\n                        <span class=\"font-bold text-2xl text-900\">$49</span>\n                        <span class=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Imperdiet proin</span>\n                        </li>\n                        <li class=\"flex align-items-center mb-3\">\n                            <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Nisi scelerisque</span>\n                        </li>\n                    </ul>\n                    <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>`;\n\n    block4: string = `\n<div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"text-700 text-center\">\n        <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\n        <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\n        <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n        <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\n    </div>\n</div>`;\n\n    block5: string = `\n<div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\n    <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\n    <div class=\"align-items-center hidden lg:flex\">\n        <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\n    </div>\n    <a class=\"flex align-items-center ml-2 mr-8\">\n        <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\n    </a>\n    <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\n        <i class=\"pi pi-times\"></i>\n    </a>\n</div>`;\n\n    block6: string = `\n<div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\n    <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\n        <li>\n            <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\n        </li>\n        <li class=\"px-2\">\n            <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\n        </li>\n        <li>\n            <span class=\"text-900 line-height-3\">Analytics</span>\n        </li>\n    </ul>\n    <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\n        <div>\n            <div class=\"font-medium text-3xl text-900\">Customers</div>\n            <div class=\"flex align-items-center text-700 flex-wrap\">\n                <div class=\"mr-5 flex align-items-center mt-3\">\n                    <i class=\"pi pi-users mr-2\"></i>\n                    <span>332 Active Users</span>\n                </div>\n                <div class=\"mr-5 flex align-items-center mt-3\">\n                    <i class=\"pi pi-globe mr-2\"></i>\n                    <span>9402 Sessions</span>\n                </div>\n                <div class=\"flex align-items-center mt-3\">\n                    <i class=\"pi pi-clock mr-2\"></i>\n                    <span>2.32m Avg. Duration</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"mt-3 lg:mt-0\">\n            <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\n            <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\n        </div>\n    </div>\n</div>`;\n\n    block7: string = `\n<div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\n    <div class=\"grid\">\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Orders</span>\n                        <div class=\"text-900 font-medium text-xl\">152</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">24 new </span>\n                <span class=\"text-500\">since last visit</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Revenue</span>\n                        <div class=\"text-900 font-medium text-xl\">$2.100</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">%52+ </span>\n                <span class=\"text-500\">since last week</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Customers</span>\n                        <div class=\"text-900 font-medium text-xl\">28441</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">520  </span>\n                <span class=\"text-500\">newly registered</span>\n            </div>\n        </div>\n        <div class=\"col-12 md:col-6 lg:col-3\">\n            <div class=\"surface-card shadow-2 p-3 border-round\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Comments</span>\n                        <div class=\"text-900 font-medium text-xl\">152 Unread</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                        <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">85 </span>\n                <span class=\"text-500\">responded</span>\n            </div>\n        </div>\n    </div>\n</div>`;\n\n    block8: string = `\n<div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n    <div class=\"text-center mb-5\">\n        <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n        <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\n        <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\n        <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\n    </div>\n\n    <div>\n        <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\n        <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\n\n        <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\n        <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\n\n        <div class=\"flex align-items-center justify-content-between mb-6\">\n            <div class=\"flex align-items-center\">\n                <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                <label for=\"rememberme1\">Remember me</label>\n            </div>\n            <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\n        </div>\n\n        <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\n    </div>\n</div>`;\n\n    block9: string = `\n<div class=\"surface-section\">\n    <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\n    <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\n    <ul class=\"list-none p-0 m-0\">\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\n                <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\n                <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\n                <p-chip label=\"Thriller\"></p-chip>\n            </div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n        <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\n            <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\n            <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\n                A group of professional bank robbers start to feel the heat from police\n                when they unknowingly leave a clue at their latest heist.</div>\n            <div class=\"w-6 md:w-2 flex justify-content-end\">\n                <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n            </div>\n        </li>\n    </ul>\n</div>`;\n\n    block10: string = `\n<div class=\"surface-card p-4 shadow-2 border-round\">\n    <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\n    <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\n    <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\n</div>`;\n\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<block-viewer header=\"Hero\" [code]=\"block1\">\n    <div class=\"grid grid-nogutter surface-section text-800\">\n        <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n            <section>\n                <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n                <div class=\"text-6xl text-primary font-bold mb-3\">visitors deserve to see</div>\n                <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n                <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\n                <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\n            </section>\n        </div>\n        <div class=\"col-12 md:col-6 overflow-hidden\">\n            <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Feature\" [code]=\"block2\">\n    <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\n        <div class=\"mb-3 font-bold text-2xl\">\n            <span class=\"text-900\">One Product, </span>\n            <span class=\"text-blue-600\">Many Solutions</span>\n        </div>\n        <div class=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\n        <div class=\"grid\">\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\n                <span class=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\n            </div>\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\n                <span class=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\n            </div>\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\n                <span class=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\n            </div>\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\n                <span class=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\n            </div>\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-github text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">Open Source</div>\n                <span class=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\n            </div>\n            <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\n                    <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\n                </span>\n                <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\n                <span class=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\n            </div>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Pricing\" [code]=\"block3\">\n    <div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\n        <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\n        <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n\n        <div class=\"grid\">\n            <div class=\"col-12 lg:col-4\">\n                <div class=\"p-3 h-full\">\n                    <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                        <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\n                        <div class=\"text-600\">Plan description</div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <div class=\"flex align-items-center\">\n                            <span class=\"font-bold text-2xl text-900\">$9</span>\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\n                        </div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Arcu vitae elementum</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Dui faucibus in ornare</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Morbi tincidunt augue</span>\n                            </li>\n                        </ul>\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-12 lg:col-4\">\n                <div class=\"p-3 h-full\">\n                    <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\n                        <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\n                        <div class=\"text-600\">Plan description</div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <div class=\"flex align-items-center\">\n                            <span class=\"font-bold text-2xl text-900\">$29</span>\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\n                        </div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Arcu vitae elementum</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Dui faucibus in ornare</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Morbi tincidunt augue</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Duis ultricies lacus sed</span>\n                            </li>\n                        </ul>\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-12 lg:col-4\">\n                <div class=\"p-3 h-full\">\n                    <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\n                        <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\n                        <div class=\"text-600\">Plan description</div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <div class=\"flex align-items-center\">\n                            <span class=\"font-bold text-2xl text-900\">$49</span>\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\n                        </div>\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Arcu vitae elementum</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Dui faucibus in ornare</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Morbi tincidunt augue</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Duis ultricies lacus sed</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Imperdiet proin</span>\n                            </li>\n                            <li class=\"flex align-items-center mb-3\">\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                <span>Nisi scelerisque</span>\n                            </li>\n                        </ul>\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Call to Action\" [code]=\"block4\">\n    <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n        <div class=\"text-700 text-center\">\n            <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\n            <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\n            <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n            <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Banner\" [code]=\"block5\" containerClass=\"surface-section py-8\">\n    <div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\n        <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\n        <div class=\"align-items-center hidden lg:flex\">\n            <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\n        </div>\n        <a class=\"flex align-items-center ml-2 mr-8\">\n            <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\n        </a>\n        <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\n            <i class=\"pi pi-times\"></i>\n        </a>\n    </div>\n</block-viewer>\n\n\n<block-viewer header=\"Page Heading\" [code]=\"block6\">\n    <div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\n        <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\n            <li>\n                <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\n            </li>\n            <li class=\"px-2\">\n                <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\n            </li>\n            <li>\n                <span class=\"text-900 line-height-3\">Analytics</span>\n            </li>\n        </ul>\n        <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\n            <div>\n                <div class=\"font-medium text-3xl text-900\">Customers</div>\n                <div class=\"flex align-items-center text-700 flex-wrap\">\n                    <div class=\"mr-5 flex align-items-center mt-3\">\n                        <i class=\"pi pi-users mr-2\"></i>\n                        <span>332 Active Users</span>\n                    </div>\n                    <div class=\"mr-5 flex align-items-center mt-3\">\n                        <i class=\"pi pi-globe mr-2\"></i>\n                        <span>9402 Sessions</span>\n                    </div>\n                    <div class=\"flex align-items-center mt-3\">\n                        <i class=\"pi pi-clock mr-2\"></i>\n                        <span>2.32m Avg. Duration</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mt-3 lg:mt-0\">\n                <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\n                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\n            </div>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Stats\" [code]=\"block7\">\n    <div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\n        <div class=\"grid\">\n            <div class=\"col-12 md:col-6 lg:col-3\">\n                <div class=\"surface-card shadow-2 p-3 border-round\">\n                    <div class=\"flex justify-content-between mb-3\">\n                        <div>\n                            <span class=\"block text-500 font-medium mb-3\">Orders</span>\n                            <div class=\"text-900 font-medium text-xl\">152</div>\n                        </div>\n                        <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                            <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                        </div>\n                    </div>\n                    <span class=\"text-green-500 font-medium\">24 new </span>\n                    <span class=\"text-500\">since last visit</span>\n                </div>\n            </div>\n            <div class=\"col-12 md:col-6 lg:col-3\">\n                <div class=\"surface-card shadow-2 p-3 border-round\">\n                    <div class=\"flex justify-content-between mb-3\">\n                        <div>\n                            <span class=\"block text-500 font-medium mb-3\">Revenue</span>\n                            <div class=\"text-900 font-medium text-xl\">$2.100</div>\n                        </div>\n                        <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                            <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                        </div>\n                    </div>\n                    <span class=\"text-green-500 font-medium\">%52+ </span>\n                    <span class=\"text-500\">since last week</span>\n                </div>\n            </div>\n            <div class=\"col-12 md:col-6 lg:col-3\">\n                <div class=\"surface-card shadow-2 p-3 border-round\">\n                    <div class=\"flex justify-content-between mb-3\">\n                        <div>\n                            <span class=\"block text-500 font-medium mb-3\">Customers</span>\n                            <div class=\"text-900 font-medium text-xl\">28441</div>\n                        </div>\n                        <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                            <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                        </div>\n                    </div>\n                    <span class=\"text-green-500 font-medium\">520  </span>\n                    <span class=\"text-500\">newly registered</span>\n                </div>\n            </div>\n            <div class=\"col-12 md:col-6 lg:col-3\">\n                <div class=\"surface-card shadow-2 p-3 border-round\">\n                    <div class=\"flex justify-content-between mb-3\">\n                        <div>\n                            <span class=\"block text-500 font-medium mb-3\">Comments</span>\n                            <div class=\"text-900 font-medium text-xl\">152 Unread</div>\n                        </div>\n                        <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n                            <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\n                        </div>\n                    </div>\n                    <span class=\"text-green-500 font-medium\">85 </span>\n                    <span class=\"text-500\">responded</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Sign-In\" [code]=\"block8\" containerClass=\"surface-ground px-4 py-8 md:px-6 lg:px-8 flex align-items-center justify-content-center\">\n    <div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n        <div class=\"text-center mb-5\">\n            <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n            <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\n            <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\n            <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\n        </div>\n\n        <div>\n            <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\n            <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\n\n            <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\n            <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\n\n            <div class=\"flex align-items-center justify-content-between mb-6\">\n                <div class=\"flex align-items-center\">\n                    <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                    <label for=\"rememberme1\">Remember me</label>\n                </div>\n                <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\n            </div>\n\n            <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\n        </div>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Description List\" [code]=\"block9\" containerClass=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"surface-section\">\n        <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\n        <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\n        <ul class=\"list-none p-0 m-0\">\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n                </div>\n            </li>\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\n                    <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\n                    <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\n                    <p-chip label=\"Thriller\"></p-chip>\n                </div>\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n                </div>\n            </li>\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n                </div>\n            </li>\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n                </div>\n            </li>\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\n                    A group of professional bank robbers start to feel the heat from police\n                     when they unknowingly leave a clue at their latest heist.</div>\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\n                </div>\n            </li>\n        </ul>\n    </div>\n</block-viewer>\n\n<block-viewer header=\"Card\" [code]=\"block10\" containerClass=\"px-4 py-8 md:px-6 lg:px-8\">\n    <div class=\"surface-card p-4 shadow-2 border-round\">\n        <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\n        <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\n        <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\n    </div>\n</block-viewer>\n"
        },
        {
            "name": "BlockViewerComponent",
            "id": "component-BlockViewerComponent-b0db4c28d64b9e6bea80b063bebcec18a24ffacb67ffc73fbd6ca6dba421fd2439e79670f3b060dd352672daf114df0f0d27835d49476cddd018159b494d6c48",
            "file": "src/app/demo/components/primeblocks/blockviewer/blockviewer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "block-viewer",
            "styleUrls": [
                "./blockviewer.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"block-section\">\n    <div class=\"block-header\">\n        <span class=\"block-title\">\n            <span>{{header}}</span>\n            <span class=\"badge-free\" *ngIf=\"free\">Free</span>\n            <span class=\"badge-new\" *ngIf=\"new\">New</span>\n        </span>\n        <div class=\"block-actions\">\n            <a tabindex=\"0\" [ngClass]=\"{'block-action-active': blockView === BlockView.PREVIEW}\" (click)=\"activateView($event, BlockView.PREVIEW)\"><span>Preview</span></a>\n            <a [attr.tabindex]=\"'0'\" [ngClass]=\"{'block-action-active': blockView === BlockView.CODE}\" (click)=\"activateView($event, BlockView.CODE)\">\n                <span>Code</span>\n            </a>\n            <a [attr.tabindex]=\"'0'\" class=\"block-action-copy\" (click)=\"copyCode($event)\"\n                pTooltip=\"Copied to clipboard\" tooltipEvent=\"focus\" tooltipPosition=\"bottom\"><i class=\"pi pi-copy m-0\"></i></a>\n        </div>\n    </div>\n    <div class=\"block-content\">\n        <div [class]=\"containerClass\" [ngStyle]=\"previewStyle\" *ngIf=\"blockView === BlockView.PREVIEW\">\n            <ng-content></ng-content>\n        </div>\n        <div *ngIf=\"blockView === BlockView.CODE\">\n            <pre class=\"app-code\"><code>{{code}}</code></pre>\n        </div>\n    </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "containerClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "free",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "new",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "previewStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "object",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blockView",
                    "defaultValue": "BlockView.PREVIEW",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BlockView",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "BlockView",
                    "defaultValue": "BlockView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "activateView",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "blockView",
                            "type": "BlockView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "blockView",
                            "type": "BlockView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "copyCode",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nenum BlockView {\n    PREVIEW,\n    CODE\n}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'block-viewer',\n    template: `\n    <div class=\"block-section\">\n        <div class=\"block-header\">\n            <span class=\"block-title\">\n                <span>{{header}}</span>\n                <span class=\"badge-free\" *ngIf=\"free\">Free</span>\n                <span class=\"badge-new\" *ngIf=\"new\">New</span>\n            </span>\n            <div class=\"block-actions\">\n                <a tabindex=\"0\" [ngClass]=\"{'block-action-active': blockView === BlockView.PREVIEW}\" (click)=\"activateView($event, BlockView.PREVIEW)\"><span>Preview</span></a>\n                <a [attr.tabindex]=\"'0'\" [ngClass]=\"{'block-action-active': blockView === BlockView.CODE}\" (click)=\"activateView($event, BlockView.CODE)\">\n                    <span>Code</span>\n                </a>\n                <a [attr.tabindex]=\"'0'\" class=\"block-action-copy\" (click)=\"copyCode($event)\" \n                    pTooltip=\"Copied to clipboard\" tooltipEvent=\"focus\" tooltipPosition=\"bottom\"><i class=\"pi pi-copy m-0\"></i></a>\n            </div>\n        </div>\n        <div class=\"block-content\">\n            <div [class]=\"containerClass\" [ngStyle]=\"previewStyle\" *ngIf=\"blockView === BlockView.PREVIEW\">\n                <ng-content></ng-content>\n            </div>\n            <div *ngIf=\"blockView === BlockView.CODE\">\n                <pre class=\"app-code\"><code>{{code}}</code></pre>\n            </div>\n        </div>\n    </div>\n  `,\n    styleUrls: ['./blockviewer.component.scss']\n})\nexport class BlockViewerComponent {\n\n    @Input() header!: string;\n\n    @Input() code!: string;\n\n    @Input() containerClass!: string;\n\n    @Input() previewStyle!: object;\n\n    @Input() free: boolean = true;\n\n    @Input() new: boolean = false;\n\n    BlockView = BlockView;\n\n    blockView: BlockView = BlockView.PREVIEW;\n\n    activateView(event: Event, blockView: BlockView) {\n\n        this.blockView = blockView;\n        event.preventDefault();\n    }\n\n\n    async copyCode(event: Event) {\n        await navigator.clipboard.writeText(this.code);\n        event.preventDefault();\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block-section {\n    margin-bottom: 4rem;\n}\n\n.block-header {\n    padding: 1rem 2rem;\n    background-color: var(--surface-section);\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    border:1px solid var(--surface-border);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .block-title {\n        font-weight: 700;\n        display: inline-flex;\n        align-items: center;\n\n        .badge-free {\n            border-radius: 4px;\n            padding: .25rem .5rem;\n            background-color: var(--orange-500);\n            color: white;\n            margin-left: 1rem;\n            font-weight: 700;\n            font-size: .875rem;\n        }\n    }\n\n    .block-actions {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        user-select: none;\n        margin-left: 1rem;\n\n        a {\n            display: flex;\n            align-items: center;\n            margin-right: .75rem;\n            padding: .5rem 1rem;\n            border-radius: 4px;\n            border: 1px solid transparent;\n            transition: background-color .2s;\n            cursor: pointer;\n\n            &:last-child {\n                margin-right: 0;\n            }\n\n            &:not(.block-action-disabled):hover {\n                background-color: var(--surface-hover);\n            }\n\n            &.block-action-active {\n                border-color: var(--primary-color);\n                color: var(--primary-color);\n            }\n\n            &.block-action-copy {\n                i {\n                    color: var(--primary-color);\n                    font-size: 1.25rem;\n                }\n            }\n\n            &.block-action-disabled {\n                opacity: .6;\n                cursor: auto !important;\n            }\n\n            i {\n                margin-right: .5rem;\n            }\n        }\n    }\n}\n\n.block-content {\n    padding: 0;\n    border:1px solid var(--surface-border);\n    border-top: 0 none;\n\n    pre.app-code {\n        background-color: var(--surface-card) !important;\n        padding-bottom: 1rem !important;\n        margin-bottom: 0 !important;\n\n        code {\n            padding: 1rem 2.5rem;\n        }\n    }\n}\n\n@media screen and (max-width: 575px) {\n    .block-header {\n        flex-direction: column;\n        align-items: start;\n\n        .block-actions {\n            margin-top: 1rem;\n            margin-left: 0;\n        }\n    }\n}",
                    "styleUrl": "./blockviewer.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #fff;\n  background-color: green;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "ButtonDemoComponent",
            "id": "component-ButtonDemoComponent-6b62ae9d6314d1adbac38f69e3d16f704fa7a987985a1213b6c6868dd66cc095ee52145c7e3cd3df904ea247e443a6d1db813139b7e45483c05173a0fc869d71",
            "file": "src/app/demo/components/uikit/button/buttondemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-buttondemo",
            "styleUrls": [],
            "styles": [],
            "template": "<button    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"medium\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "loading",
                    "defaultValue": "[false, false, false, false]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "load",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { MenuItem } from \"primeng/api\";\n\n@Component({\n    //templateUrl: './buttondemo.component.html',\n    selector: 'app-buttondemo',\n    template: `<button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n    styleUrl: './buttondemo.component.scss',\n})\nexport class ButtonDemoComponent implements OnInit {\n\n    @Input()\n    primary = false;\n\n    @Input()\n    backgroundColor?: string;\n\n    @Input()\n    size: \"small\" | \"medium\" | \"large\" = \"medium\";\n\n    @Input()\n    label?: string;\n\n    @Output()\n    onClick = new EventEmitter<Event>();\n\n    public get classes(): string[] {\n        const mode = this.primary\n            ? \"p-button-primary\"\n            : \"p-button-secondary\";\n\n        return [\"p-element p-ripple p-component p-button \", `p-button-${this.size}`, mode];\n    }\n\n    items: MenuItem[] = [];\n\n    loading = [false, false, false, false];\n\n    ngOnInit() {\n        this.items = [\n            { label: \"Update\", icon: \"pi pi-refresh\" },\n            { label: \"Delete\", icon: \"pi pi-times\" },\n            { label: \"Angular.io\", icon: \"pi pi-info\", url: \"http://angular.io\" },\n            { separator: true },\n            { label: \"Setup\", icon: \"pi pi-cog\" },\n        ];\n    }\n\n    load(index: number) {\n        this.loading[index] = true;\n        setTimeout(() => (this.loading[index] = false), 1000);\n    }\n}\n",
            "styleUrl": "./buttondemo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            }
        },
        {
            "name": "ChartsDemoComponent",
            "id": "component-ChartsDemoComponent-97f7dceed9bae1cee1501f118b66952e32871705a70d837e18df136d77d6553ca8f592af7c8d7ef9fe62e53a5d4caa9c3913c459f60107dae25814f9d0e3a360",
            "file": "src/app/demo/components/uikit/charts/chartsdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./chartsdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "barData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "barOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "lineData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lineOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "pieData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "pieOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "polarData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "polarOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "radarData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "radarOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "initCharts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 264,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, debounceTime } from 'rxjs';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    templateUrl: './chartsdemo.component.html'\n})\nexport class ChartsDemoComponent implements OnInit, OnDestroy {\n\n    lineData: any;\n\n    barData: any;\n\n    pieData: any;\n\n    polarData: any;\n\n    radarData: any;\n\n    lineOptions: any;\n\n    barOptions: any;\n\n    pieOptions: any;\n\n    polarOptions: any;\n\n    radarOptions: any;\n\n    subscription: Subscription;\n    constructor(private layoutService: LayoutService) {\n        this.subscription = this.layoutService.configUpdate$\n            .pipe(debounceTime(25))\n            .subscribe((config) => {\n                this.initCharts();\n            });\n    }\n\n    ngOnInit() {\n        this.initCharts();\n    }\n\n    initCharts() {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const textColor = documentStyle.getPropertyValue('--text-color');\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n        \n        this.barData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n                    borderColor: documentStyle.getPropertyValue('--primary-500'),\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n                    borderColor: documentStyle.getPropertyValue('--primary-200'),\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        };\n\n        this.barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        fontColor: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary,\n                        font: {\n                            weight: 500\n                        }\n                    },\n                    grid: {\n                        display: false,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n            }\n        };\n\n        this.pieData = {\n            labels: ['A', 'B', 'C'],\n            datasets: [\n                {\n                    data: [540, 325, 702],\n                    backgroundColor: [\n                        documentStyle.getPropertyValue('--indigo-500'),\n                        documentStyle.getPropertyValue('--purple-500'),\n                        documentStyle.getPropertyValue('--teal-500')\n                    ],\n                    hoverBackgroundColor: [\n                        documentStyle.getPropertyValue('--indigo-400'),\n                        documentStyle.getPropertyValue('--purple-400'),\n                        documentStyle.getPropertyValue('--teal-400')\n                    ]\n                }]\n        };\n\n        this.pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        usePointStyle: true,\n                        color: textColor\n                    }\n                }\n            }\n        };\n\n        this.lineData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n                    borderColor: documentStyle.getPropertyValue('--primary-500'),\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n                    borderColor: documentStyle.getPropertyValue('--primary-200'),\n                    tension: .4\n                }\n            ]\n        };\n\n        this.lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        fontColor: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n            }\n        };\n\n        this.polarData = {\n            datasets: [{\n                data: [\n                    11,\n                    16,\n                    7,\n                    3\n                ],\n                backgroundColor: [\n                    documentStyle.getPropertyValue('--indigo-500'),\n                    documentStyle.getPropertyValue('--purple-500'),\n                    documentStyle.getPropertyValue('--teal-500'),\n                    documentStyle.getPropertyValue('--orange-500')\n                ],\n                label: 'My dataset'\n            }],\n            labels: [\n                'Indigo',\n                'Purple',\n                'Teal',\n                'Orange'\n            ]\n        };\n\n        this.polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: surfaceBorder\n                    }\n                }\n            }\n        };\n\n        this.radarData = {\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    borderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointBackgroundColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointHoverBackgroundColor: textColor,\n                    pointHoverBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    borderColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointBackgroundColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointBorderColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointHoverBackgroundColor: textColor,\n                    pointHoverBorderColor: documentStyle.getPropertyValue('--purple-400'),\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        };\n\n        this.radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        fontColor: textColor\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: textColorSecondary\n                    }\n                }\n            }\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"grid p-fluid\">\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Linear Chart</h5>\n            <p-chart type=\"line\" [data]=\"lineData\" [options]=\"lineOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Pie Chart</h5>\n            <p-chart type=\"pie\" [data]=\"pieData\" [options]=\"pieOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Polar Area Chart</h5>\n            <p-chart type=\"polarArea\" [data]=\"polarData\" [options]=\"polarOptions\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Bar Chart</h5>\n            <p-chart type=\"bar\" [data]=\"barData\" [options]=\"barOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Doughnut Chart</h5>\n            <p-chart type=\"doughnut\" [data]=\"pieData\" [options]=\"pieOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Radar Chart</h5>\n            <p-chart type=\"radar\" [data]=\"radarData\" [options]=\"radarOptions\"></p-chart>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "ConfirmationComponent",
            "id": "component-ConfirmationComponent-15c24895d904006ef7c9bb108ed7f09121232de0991b13eaede88ebf1445492c2f243e5cc27da3fbc2eeee64b7275db7288bd78afb0a8c9a02215aeeb661ef21",
            "file": "src/app/demo/components/uikit/menus/confirmation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n  <i class=\"pi pi-fw pi-check mr-2 text-2xl\"></i>\n  <p class=\"m-0 mt-5 text-center text-lg\">Confirmation Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  template: `\n  <div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n    <i class=\"pi pi-fw pi-check mr-2 text-2xl\"></i>\n    <p class=\"m-0 mt-5 text-center text-lg\">Confirmation Component Content via Child Route</p>\n  </div>\n  `\n})\nexport class ConfirmationComponent {\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": []
        },
        {
            "name": "CrudComponent",
            "id": "component-CrudComponent-19ef5cb03679298c02311ca2ceb0805a04957c7bd77f55cc29ffd004352d815c868a1937a14412c30d310fd3693fbca792c1378dc308d2617c6e295ae89fdb27",
            "file": "src/app/demo/components/pages/crud/crud.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./crud.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cols",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "deleteProductDialog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "deleteProductsDialog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "product",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "productDialog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "[5, 10, 20]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selectedProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "statuses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "confirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirmDeleteSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSelectedProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findIndexById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onGlobalFilter",
                    "args": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/demo/api/product';\nimport { MessageService } from 'primeng/api';\nimport { Table } from 'primeng/table';\nimport { ProductService } from 'src/app/demo/service/product.service';\n\n@Component({\n    templateUrl: './crud.component.html',\n    providers: [MessageService]\n})\nexport class CrudComponent implements OnInit {\n\n    productDialog: boolean = false;\n\n    deleteProductDialog: boolean = false;\n\n    deleteProductsDialog: boolean = false;\n\n    products: Product[] = [];\n\n    product: Product = {};\n\n    selectedProducts: Product[] = [];\n\n    submitted: boolean = false;\n\n    cols: any[] = [];\n\n    statuses: any[] = [];\n\n    rowsPerPageOptions = [5, 10, 20];\n\n    constructor(private productService: ProductService, private messageService: MessageService) { }\n\n    ngOnInit() {\n        this.productService.getProducts().then(data => this.products = data);\n\n        this.cols = [\n            { field: 'product', header: 'Product' },\n            { field: 'price', header: 'Price' },\n            { field: 'category', header: 'Category' },\n            { field: 'rating', header: 'Reviews' },\n            { field: 'inventoryStatus', header: 'Status' }\n        ];\n\n        this.statuses = [\n            { label: 'INSTOCK', value: 'instock' },\n            { label: 'LOWSTOCK', value: 'lowstock' },\n            { label: 'OUTOFSTOCK', value: 'outofstock' }\n        ];\n    }\n\n    openNew() {\n        this.product = {};\n        this.submitted = false;\n        this.productDialog = true;\n    }\n\n    deleteSelectedProducts() {\n        this.deleteProductsDialog = true;\n    }\n\n    editProduct(product: Product) {\n        this.product = { ...product };\n        this.productDialog = true;\n    }\n\n    deleteProduct(product: Product) {\n        this.deleteProductDialog = true;\n        this.product = { ...product };\n    }\n\n    confirmDeleteSelected() {\n        this.deleteProductsDialog = false;\n        this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\n        this.selectedProducts = [];\n    }\n\n    confirmDelete() {\n        this.deleteProductDialog = false;\n        this.products = this.products.filter(val => val.id !== this.product.id);\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\n        this.product = {};\n    }\n\n    hideDialog() {\n        this.productDialog = false;\n        this.submitted = false;\n    }\n\n    saveProduct() {\n        this.submitted = true;\n\n        if (this.product.name?.trim()) {\n            if (this.product.id) {\n                // @ts-ignore\n                this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value : this.product.inventoryStatus;\n                this.products[this.findIndexById(this.product.id)] = this.product;\n                this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\n            } else {\n                this.product.id = this.createId();\n                this.product.code = this.createId();\n                this.product.image = 'product-placeholder.svg';\n                // @ts-ignore\n                this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n                this.products.push(this.product);\n                this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\n            }\n\n            this.products = [...this.products];\n            this.productDialog = false;\n            this.product = {};\n        }\n    }\n\n    findIndexById(id: string): number {\n        let index = -1;\n        for (let i = 0; i < this.products.length; i++) {\n            if (this.products[i].id === id) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    createId(): string {\n        let id = '';\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 5; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return id;\n    }\n\n    onGlobalFilter(table: Table, event: Event) {\n        table.filterGlobal((event.target as HTMLInputElement).value, 'contains');\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12\">\n        <div class=\"card px-6 py-6\">\n            <p-toast></p-toast>\n            <p-toolbar styleClass=\"mb-4\">\n                <ng-template pTemplate=\"left\">\n                    <div class=\"my-2\">\n                        <button pButton pRipple label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\n                        <button pButton pRipple label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" (click)=\"deleteSelectedProducts()\" [disabled]=\"!selectedProducts || !selectedProducts.length\"></button>\n                    </div>\n                </ng-template>\n\n                <ng-template pTemplate=\"right\">\n                    <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\n                    <button pButton pRipple label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" (click)=\"dt.exportCSV()\"></button>\n                </ng-template>\n            </p-toolbar>\n\n            <p-table #dt [value]=\"products\" [columns]=\"cols\" responsiveLayout=\"scroll\" [rows]=\"10\" [globalFilterFields]=\"['name','country.name','representative.name','status']\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,20,30]\" [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [(selection)]=\"selectedProducts\" selectionMode=\"multiple\" [rowHover]=\"true\" dataKey=\"id\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n                        <h5 class=\"m-0\">Manage Products</h5>\n                        <span class=\"block mt-2 md:mt-0 p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <input pInputText type=\"text\" (input)=\"onGlobalFilter(dt, $event)\" placeholder=\"Search...\"  class=\"w-full sm:w-auto\"/>\n                        </span>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 3rem\">\n                            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                        </th>\n                        <th pSortableColumn=\"code\">Code <p-sortIcon field=\"code\"></p-sortIcon></th>\n                        <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n                        <th>Image</th>\n                        <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n                        <th pSortableColumn=\"category\">Category <p-sortIcon field=\"category\"></p-sortIcon></th>\n                        <th pSortableColumn=\"rating\">Reviews <p-sortIcon field=\"rating\"></p-sortIcon></th>\n                        <th pSortableColumn=\"inventoryStatus\">Status <p-sortIcon field=\"inventoryStatus\"></p-sortIcon></th>\n                        <th></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-product>\n                    <tr>\n                        <td>\n                            <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\n                        </td>\n                        <td style=\"width:14%; min-width:10rem;\"><span class=\"p-column-title\">Code</span>\n                            {{product.code || product.id}}\n                        </td>\n                        <td style=\"width:14%; min-width:10rem;\">\n                            <span class=\"p-column-title\">Name</span>\n                            {{product.name}}\n                        </td>\n                        <td style=\"width:14%; min-width:10rem;\"><span class=\"p-column-title\">Image</span>\n                            <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" width=\"100\" class=\"shadow-4\" />\n                        </td>\n                        <td style=\"width:14%; min-width:8rem;\">\n                            <span class=\"p-column-title\">Price</span>\n                            {{product.price | currency:'USD'}}\n                        </td>\n                        <td style=\"width:14%; min-width:10rem;\">\n                            <span class=\"p-column-title\">Category</span>\n                            {{product.category}}\n                        </td>\n                        <td style=\"width:14%; min-width: 10rem;\"><span class=\"p-column-title\">Reviews</span>\n                            <p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\n                        </td>\n                        <td style=\"width:14%; min-width: 10rem;\"><span class=\"p-column-title\">Status</span>\n                            <span [class]=\"'product-badge status-' + (product.inventoryStatus ? product.inventoryStatus.toLowerCase() : '')\">{{product.inventoryStatus}}</span>\n                        </td>\n                        <td>\n                            <div class=\"flex\">\n                                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"editProduct(product)\"></button>\n                                <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" (click)=\"deleteProduct(product)\"></button>\n                            </div>\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n\n        <p-dialog [(visible)]=\"productDialog\" [style]=\"{width: '450px'}\" header=\"Product Details\" [modal]=\"true\" class=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.image\" width=\"150\" class=\"mt-0 mx-auto mb-5 block shadow-2\" *ngIf=\"product.image\">\n                <div class=\"field\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"product.name\" required autofocus [ngClass]=\"{'ng-invalid ng-dirty' : submitted && !product.name}\"/>\n                    <small class=\"ng-dirty ng-invalid\" *ngIf=\"submitted && !product.name\">Name is required.</small>\n                </div>\n                <div class=\"field\">\n                    <label for=\"description\">Description</label>\n                    <textarea id=\"description\" pInputTextarea [(ngModel)]=\"product.description\" required rows=\"3\" cols=\"20\"></textarea>\n                </div>\n                <div class=\"field\">\n                    <label for=\"status\">Inventory Status</label>\n                    <p-dropdown [(ngModel)]=\"product.inventoryStatus\" inputId=\"inventoryStatus\" optionValue=\"label\" [options]=\"statuses\" placeholder=\"Select\">\n                        <ng-template pTemplate=\"selectedItem\">\n                            <span *ngIf=\"product && product.inventoryStatus\" [class]=\"'product-badge status-' + product.inventoryStatus.toString().toLowerCase()\">{{product.inventoryStatus}}</span>\n                        </ng-template>\n                        <ng-template let-option pTemplate=\"item\">\n                            <span [class]=\"'product-badge status-' + option.value\">{{option.label}}</span>\n                        </ng-template>\n                    </p-dropdown>\n                </div>\n\n                <div class=\"field\">\n                    <label class=\"mb-3\">Category</label>\n                    <div class=\"formgrid grid\">\n                        <div class=\"field-radiobutton col-6\">\n                            <p-radioButton id=\"category1\" name=\"category\" value=\"Accessories\" [(ngModel)]=\"product.category\"></p-radioButton>\n                            <label for=\"category1\">Accessories</label>\n                        </div>\n                        <div class=\"field-radiobutton col-6\">\n                            <p-radioButton id=\"category2\" name=\"category\" value=\"Clothing\" [(ngModel)]=\"product.category\"></p-radioButton>\n                            <label for=\"category2\">Clothing</label>\n                        </div>\n                        <div class=\"field-radiobutton col-6\">\n                            <p-radioButton id=\"category3\" name=\"category\" value=\"Electronics\" [(ngModel)]=\"product.category\"></p-radioButton>\n                            <label for=\"category3\">Electronics</label>\n                        </div>\n                        <div class=\"field-radiobutton col-6\">\n                            <p-radioButton id=\"category4\" name=\"category\" value=\"Fitness\" [(ngModel)]=\"product.category\"></p-radioButton>\n                            <label for=\"category4\">Fitness</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"formgrid grid\">\n                    <div class=\"field col\">\n                        <label for=\"price\">Price</label>\n                        <p-inputNumber id=\"price\" [(ngModel)]=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\n                    </div>\n                    <div class=\"field col\">\n                        <label for=\"quantity\">Quantity</label>\n                        <p-inputNumber id=\"quantity\" [(ngModel)]=\"product.quantity\"></p-inputNumber>\n                    </div>\n                </div>\n            </ng-template>\n\n            <ng-template pTemplate=\"footer\">\n                <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\n                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"saveProduct()\"></button>\n            </ng-template>\n        </p-dialog>\n\n        <p-dialog [(visible)]=\"deleteProductDialog\" header=\"Confirm\" [modal]=\"true\" [style]=\"{width:'450px'}\">\n            <div class=\"flex align-items-center justify-content-center\">\n                <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\"></i>\n                <span *ngIf=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n            </div>\n            <ng-template pTemplate=\"footer\">\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-text\" label=\"No\" (click)=\"deleteProductDialog = false\"></button>\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-text\" label=\"Yes\" (click)=\"confirmDelete()\"></button>\n            </ng-template>\n        </p-dialog>\n\n        <p-dialog [(visible)]=\"deleteProductsDialog\" header=\"Confirm\" [modal]=\"true\" [style]=\"{width:'450px'}\">\n            <div class=\"flex align-items-center justify-content-center\">\n                <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\"></i>\n                <span>Are you sure you want to delete selected products?</span>\n            </div>\n            <ng-template pTemplate=\"footer\">\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-text\" label=\"No\" (click)=\"deleteProductsDialog = false\"></button>\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-text\" label=\"Yes\" (click)=\"confirmDeleteSelected()\"></button>\n            </ng-template>\n        </p-dialog>\n    </div>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-c08726af694aa8fef89ec1093de2662f2b7e26fc14e8aa4c98fbe5e13cd9bbf9b6f88de725738b2b06dca44053cca51f91f0793d6f680070516aefe1236417c8",
            "file": "src/app/demo/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "initChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Product } from '../../api/product';\nimport { ProductService } from '../../service/product.service';\nimport { Subscription, debounceTime } from 'rxjs';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n    items!: MenuItem[];\n\n    products!: Product[];\n\n    chartData: any;\n\n    chartOptions: any;\n\n    subscription!: Subscription;\n\n    constructor(private productService: ProductService, public layoutService: LayoutService) {\n        this.subscription = this.layoutService.configUpdate$\n        .pipe(debounceTime(25))\n        .subscribe((config) => {\n            this.initChart();\n        });\n    }\n\n    ngOnInit() {\n        this.initChart();\n        this.productService.getProductsSmall().then(data => this.products = data);\n\n        this.items = [\n            { label: 'Add New', icon: 'pi pi-fw pi-plus' },\n            { label: 'Remove', icon: 'pi pi-fw pi-minus' }\n        ];\n    }\n\n    initChart() {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const textColor = documentStyle.getPropertyValue('--text-color');\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n\n        this.chartData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--bluegray-700'),\n                    borderColor: documentStyle.getPropertyValue('--bluegray-700'),\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--green-600'),\n                    borderColor: documentStyle.getPropertyValue('--green-600'),\n                    tension: .4\n                }\n            ]\n        };\n\n        this.chartOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                }\n            }\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "    <div class=\"grid\">\n        <div class=\"col-12 lg:col-6 xl:col-3\">\n            <div class=\"card mb-0\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Orders</span>\n                        <div class=\"text-900 font-medium text-xl\">152</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\n                        <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">24 new </span>\n                <span class=\"text-500\">since last visit</span>\n            </div>\n        </div>\n        <div class=\"col-12 lg:col-6 xl:col-3\">\n            <div class=\"card mb-0\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Revenue</span>\n                        <div class=\"text-900 font-medium text-xl\">$2.100</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\n                        <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">%52+ </span>\n                <span class=\"text-500\">since last week</span>\n            </div>\n        </div>\n        <div class=\"col-12 lg:col-6 xl:col-3\">\n            <div class=\"card mb-0\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Customers</span>\n                        <div class=\"text-900 font-medium text-xl\">28441</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\n                        <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">520  </span>\n                <span class=\"text-500\">newly registered</span>\n            </div>\n        </div>\n        <div class=\"col-12 lg:col-6 xl:col-3\">\n            <div class=\"card mb-0\">\n                <div class=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span class=\"block text-500 font-medium mb-3\">Comments</span>\n                        <div class=\"text-900 font-medium text-xl\">152 Unread</div>\n                    </div>\n                    <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\n                        <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span class=\"text-green-500 font-medium\">85 </span>\n                <span class=\"text-500\">responded</span>\n            </div>\n        </div>\n\n        <div class=\"col-12 xl:col-6\">\n            <div class=\"card\">\n                <h5>Recent Sales</h5>\n                <p-table [value]=\"products\" [paginator]=\"true\" [rows]=\"5\" responsiveLayout=\"scroll\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th>Image</th>\n                            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n                            <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n                            <th>View</th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-product>\n                        <tr>\n                            <td style=\"width: 15%; min-width: 5rem;\">\n                                <img src=\"assets/demo/images/product/{{product.image}}\" class=\"shadow-4\" alt=\"{{product.name}}\" width=\"50\">\n                            </td>\n                            <td style=\"width: 35%; min-width: 7rem;\">{{product.name}}</td>\n                            <td style=\"width: 35%; min-width: 8rem;\">{{product.price | currency:'USD'}}</td>\n                            <td style=\"width: 15%;\">\n                                <button pButton pRipple type=\"button\" icon=\"pi pi-search\" class=\"p-button p-component p-button-text p-button-icon-only\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n            <div class=\"card\">\n                <div class=\"flex justify-content-between align-items-center mb-5\">\n                    <h5>Best Selling Products</h5>\n                    <div>\n                        <button pButton type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text p-button-plain\" (click)=\"menu.toggle($event)\"></button>\n                        <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\n                    </div>\n                </div>\n                <ul class=\"list-none p-0 m-0\">\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Space T-Shirt</span>\n                            <div class=\"mt-1 text-600\">Clothing</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-orange-500 h-full\" [ngStyle]=\"{width: '50%'}\"></div>\n                            </div>\n                            <span class=\"text-orange-500 ml-3 font-medium\">%50</span>\n                        </div>\n                    </li>\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Portal Sticker</span>\n                            <div class=\"mt-1 text-600\">Accessories</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-cyan-500 h-full\" [ngStyle]=\"{width: '16%'}\"></div>\n                            </div>\n                            <span class=\"text-cyan-500 ml-3 font-medium\">%16</span>\n                        </div>\n                    </li>\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Supernova Sticker</span>\n                            <div class=\"mt-1 text-600\">Accessories</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-pink-500 h-full\" [ngStyle]=\"{width: '67%'}\"></div>\n                            </div>\n                            <span class=\"text-pink-500 ml-3 font-medium\">%67</span>\n                        </div>\n                    </li>\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Wonders Notebook</span>\n                            <div class=\"mt-1 text-600\">Office</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-green-500 h-full\" [ngStyle]=\"{width: '35%'}\"></div>\n                            </div>\n                            <span class=\"text-green-500 ml-3 font-medium\">%35</span>\n                        </div>\n                    </li>\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Mat Black Case</span>\n                            <div class=\"mt-1 text-600\">Accessories</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-purple-500 h-full\" [ngStyle]=\"{width: '75%'}\"></div>\n                            </div>\n                            <span class=\"text-purple-500 ml-3 font-medium\">%75</span>\n                        </div>\n                    </li>\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\n                        <div>\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Robots T-Shirt</span>\n                            <div class=\"mt-1 text-600\">Clothing</div>\n                        </div>\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\n                                <div class=\"bg-teal-500 h-full\" [ngStyle]=\"{width: '40%'}\"></div>\n                            </div>\n                            <span class=\"text-teal-500 ml-3 font-medium\">%40</span>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"col-12 xl:col-6\">\n            <div class=\"card\">\n                <h5>Sales Overview</h5>\n                <p-chart type=\"line\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\n            </div>\n\n            <div class=\"card\">\n                <div class=\"flex align-items-center justify-content-between mb-4\">\n                    <h5>Notifications</h5>\n                    <div>\n                        <button pButton type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text p-button-plain\" (click)=\"menu.toggle($event)\"></button>\n                        <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\n                    </div>\n                </div>\n\n                <span class=\"block text-600 font-medium mb-3\">TODAY</span>\n                <ul class=\"p-0 mx-0 mt-0 mb-4 list-none\">\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-blue-100 border-circle mr-3 flex-shrink-0\">\n                            <i class=\"pi pi-dollar text-xl text-blue-500\"></i>\n                        </div>\n                        <span class=\"text-900 line-height-3\">Richard Jones\n                    <span class=\"text-700\"> has purchased a blue t-shirt for <span class=\"text-blue-500\">79$</span></span>\n                </span>\n                    </li>\n                    <li class=\"flex align-items-center py-2\">\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-orange-100 border-circle mr-3 flex-shrink-0\">\n                            <i class=\"pi pi-download text-xl text-orange-500\"></i>\n                        </div>\n                        <span class=\"text-700 line-height-3\">Your request for withdrawal of <span class=\"text-blue-500 font-medium\">2500$</span> has been initiated.</span>\n                    </li>\n                </ul>\n\n                <span class=\"block text-600 font-medium mb-3\">YESTERDAY</span>\n                <ul class=\"p-0 m-0 list-none\">\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-blue-100 border-circle mr-3 flex-shrink-0\">\n                            <i class=\"pi pi-dollar text-xl text-blue-500\"></i>\n                        </div>\n                        <span class=\"text-900 line-height-3\">Keyser Wick\n                    <span class=\"text-700\"> has purchased a black jacket for <span class=\"text-blue-500\">59$</span></span>\n                </span>\n                    </li>\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-pink-100 border-circle mr-3 flex-shrink-0\">\n                            <i class=\"pi pi-question text-xl text-pink-500\"></i>\n                        </div>\n                        <span class=\"text-900 line-height-3\">Jane Davis<span class=\"text-700\"> has posted a new questions about your product.</span></span>\n                    </li>\n                </ul>\n            </div>\n\n            <div class=\"px-4 py-5 shadow-2 flex flex-column md:flex-row md:align-items-center justify-content-between mb-3\" [ngStyle]=\"{borderRadius: '1rem', background: 'linear-gradient(0deg, rgba(0, 123, 255, 0.5), rgba(0, 123, 255, 0.5)), linear-gradient(92.54deg, #1C80CF 47.88%, #FFFFFF 100.01%)'}\">\n           <div>\n               <div class=\"text-blue-100 font-medium text-xl mt-2 mb-3\">TAKE THE NEXT STEP</div>\n               <div class=\"text-white font-medium text-5xl\">Try PrimeBlocks</div>\n           </div>\n           <div class=\"mt-4 mr-auto md:mt-0 md:mr-0\">\n               <a target=\"_blank\" href=\"https://www.primefaces.org/primeblocks-ng\" class=\"p-button font-bold px-5 py-3 p-button-warning p-button-rounded p-button-raised\">\n                   Get Started\n               </a>\n           </div>\n        </div>\n    </div>\n</div>\n\n"
        },
        {
            "name": "DocumentationComponent",
            "id": "component-DocumentationComponent-406e6ee98c3a57c1af4f4f75092ebbb4e13a7ed841def99524609f9b67dee60d61f0afbe550af9a55b0546689f96eb915f3f1c9122c0a5e70546f520b49cb798",
            "file": "src/app/demo/components/documentation/documentation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./documentation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./documentation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './documentation.component.html',\n    styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent { }",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@media screen and (max-width: 991px) {\n    .video-container {\n        position: relative;\n        width: 100%;\n        height: 0;\n        padding-bottom: 56.25%;\n    \n        iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        }\n    }\n}",
                    "styleUrl": "./documentation.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"card mb-3\">\n    <div>\n        <h2>Documentation</h2>\n        <h4>Getting Started</h4>\n        <p>Sakai is an application template for Angular and is distributed as a CLI project. Current versions is Angular v17 with PrimeNG v17. In case CLI is not installed already, use the command below to set it up.</p>\n    \n<pre class=\"app-code\"><code>npm install -g &#64;angular/cli</code></pre>\n        \n        <p>Once CLI is ready in your system, extract the contents of the zip file distribution, cd to the directory,\n            install the libraries from npm and then execute \"ng serve\" to run the application in your local environment.</p>\n\n<pre class=\"app-code\"><code>cd sakai\nnpm install\nng serve</code></pre>\n    \n        <p>The application should run at <span class=\"font-semibold\">http://localhost:4200/</span>, you may now start with the development of your application.</p>\n    \n        <h5>Important CLI Commands</h5>\n        <p>Following commands are derived from CLI.</p>\n\n<pre class=\"app-code\"><code>Run 'ng serve' for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\n\nRun 'ng generate component component-name' to generate a new component. You can also use `ng generate directive/pipe/service/class/module`.\n\nRun 'ng build' to build the project. The build artifacts will be stored in the `dist/` directory. Use the `-prod` flag for a production build.\n\nRun 'ng test' to execute the unit tests via [Karma](https://karma-runner.github.io).\n\nRun 'ng e2e' to execute the end-to-end tests via [Protractor](http://www.protractortest.org/).\n\nRun 'ng help' for more options.</code></pre>\n    \n        <h4>Structure</h4>\n        <p>Sakai consists of 3 main parts; the application layout, layout assets and PrimeNG component theme assets. Layout is placed inside the <span class=\"text-primary font-medium\">src/app/layout</span> folder,\n            and the assets are in the <span class=\"text-primary font-medium\">src/assets/layout</span> folder.\n        </p>\n    \n        <h5>Default Configuration</h5>\n        <p>Initial layout configuration can be defined at the main app component by injecting the <span class=\"text-primary font-medium\">LayoutService</span>, this step is optional and only necessary when customizing the defaults. Note that <span class=\"text-primary font-medium\">theme</span> and\n            <span class=\"text-primary font-medium\">scale</span> are not reactive since theme is configured outside of Angular at <strong class=\"font-semibold\">index.html</strong> by default and\n            initial scale is defined with the <span class=\"text-primary font-medium\">$scale</span> at <strong class=\"font-semibold\">layout.scss</strong>. When default theme or scale is changed at their files initially, it is required to configure the layout service with the matching values\n            to avoid sync issues. </p>\n    \n<pre class=\"app-code\"><code>import &#123; Component, OnInit &#125; from '&#64;angular/core';\nimport &#123; PrimeNGConfig &#125; from 'primeng/api';\nimport &#123; LayoutService, AppConfig &#125; from './layout/service/app.layout.service';\n\n&#64;Component(&#123;\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n&#125;)\nexport class AppComponent implements OnInit &#123;\n\n    constructor(private primengConfig: PrimeNGConfig, private layoutService: LayoutService) &#123; &#125;\n\n    ngOnInit(): void &#123;\n        this.primengConfig.ripple = true;       //enables core ripple functionality\n\n        //optional configuration with the default configuration\n        const config: AppConfig = &#123;\n            ripple: false,                      //toggles ripple on and off\n            inputStyle: 'outlined',             //default style for input elements\n            menuMode: 'static',                 //layout mode of the menu, valid values are \"static\" and \"overlay\"\n            colorScheme: 'light',               //color scheme of the template, valid values are \"light\" and \"dark\"\n            theme: 'lara-light-indigo',         //default component theme for PrimeNG\n            scale: 14                           //size of the body font size to scale the whole application\n        &#125;;\n        this.layoutService.config.set(config);\n    &#125;\n\n&#125;</code></pre>\n    \n        <h5>Menu</h5>\n        <p>Menu is a separate component defined in <span class=\"text-primary font-medium\">src/app/layout/app.menu.component.ts</span> file and based on PrimeNG MenuModel API. In order to define the menuitems,\n            navigate to this file and define your own model as a nested structure.</p>\n    \n<pre class=\"app-code\"><code>import &#123; OnInit &#125; from '&#64;angular/core';\nimport &#123; Component &#125; from '&#64;angular/core';\n\n&#64;Component(&#123;\n    selector: 'app-menu',\n    templateUrl: './app.menu.component.html'\n&#125;)\nexport class AppMenuComponent implements OnInit &#123;\n\n    model: any[] = [];\n\n    ngOnInit() &#123;\n        this.model = [\n            &#123;\n                label: 'Home',\n                items: [\n                    &#123;\n                        label: 'Dashboard',\n                        icon: 'pi pi-fw pi-home',\n                        routerLink: ['/']\n                    &#125;\n                ]\n            &#125;,\n            //...\n        ];\n    &#125;\n&#125;</code></pre>\n    \n        <h4>Integration with Existing Angular CLI Projects</h4>\n        <p>Sakai structure is designed in a modular way so that it can easily be integrated with your existing application. We've created a short tutorial with details.</p>\n    \n        <div class=\"video-container\">\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/yl2f8KKY204\" frameborder=\"0\" allowfullscreen></iframe>\n        </div>\n    \n        <h4>Theme</h4>\n        <p>Sakai provides 34 PrimeNG themes out of the box. Setup of a theme is simple by including the css of theme\n            to your bundle that are located inside <span class=\"text-primary font-medium\">assets/layout/styles/theme/</span>\n            folder such as <span class=\"text-primary font-medium\">assets/layout/styles/theme/lara-light-indigo/theme.css</span>.</p>\n\n        <p>Another alternative would be creating dynamic bundles, please see the <a href=\"https://www.youtube.com/watch?v=5VOuUdDXRsE\" class=\"font-medium text-primary hover:underline\">video tutorial</a> for an example.</p>\n    </div>\n</div>\n"
        },
        {
            "name": "EmptyDemoComponent",
            "id": "component-EmptyDemoComponent-ee68f113020d5bb8f8b5303a4a7da00f64c955e8d35bc13cca1237d9a6c63a01830ce4a5f6514f11f1ca1d512779220abe48d0257f6129840c1c0b1d8a940c2f",
            "file": "src/app/demo/components/pages/empty/emptydemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./emptydemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './emptydemo.component.html'\n})\nexport class EmptyDemoComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h4>Empty Page</h4>\n            <p>This is your empty page template to start building beautiful applications.</p>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-a6338501b388f26b1983cff023f1d78c6f60639e19f168d5353e5de34787dbe32617161f6b3395dace82346c54ffb95b2ed5fd36743552f525865d3e204fd3e0",
            "file": "src/app/demo/components/auth/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error.component.html',\n})\nexport class ErrorComponent { }",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <img src=\"assets/demo/images/error/logo-error.svg\" alt=\"Sakai logo\" class=\"mb-5 w-6rem flex-shrink-0\">\n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, rgba(233, 30, 99, 0.4) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8 flex flex-column align-items-center\" style=\"border-radius:53px\">\n                <div class=\"grid flex flex-column align-items-center\">\n                    <div class=\"flex justify-content-center align-items-center bg-pink-500 border-circle\" style=\"height:3.2rem; width:3.2rem;\">\n                        <i class=\"pi pi-fw pi-exclamation-circle text-2xl text-white\"></i>\n                    </div>\n                    <h1 class=\"text-900 font-bold text-5xl mb-2\">Error Occured</h1>\n                    <span class=\"text-600 mb-5\">Requested resource is not available.</span>\n                    <img src=\"assets/demo/images/error/asset-error.svg\" alt=\"Error\" class=\"mb-5\" width=\"80%\">\n                    <button pButton pRipple icon=\"pi pi-arrow-left\" label=\"Go to Dashboard\" class=\"p-button-text\" [routerLink]=\"['/']\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "FileDemoComponent",
            "id": "component-FileDemoComponent-4b53af2d7cd33755e2d5799ba7da58dff81a3f71a93e5f466d03f73ab88f2f25cb2809d3525fb897015a9cf3b6615fb918962167bc3d4a61beca0276accc3fac",
            "file": "src/app/demo/components/uikit/file/filedemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filedemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "uploadedFiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onBasicUpload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n    templateUrl: './filedemo.component.html',\n    providers: [MessageService]\n})\nexport class FileDemoComponent {\n\n    uploadedFiles: any[] = [];\n\n    constructor(private messageService: MessageService) {}\n\n    onUpload(event: any) {\n        for (const file of event.files) {\n            this.uploadedFiles.push(file);\n        }\n\n        this.messageService.add({ severity: 'info', summary: 'Success', detail: 'File Uploaded' });\n    }\n\n    onBasicUpload() {\n        this.messageService.add({ severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode' });\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Advanced</h5>\n            <p-fileUpload name=\"demo[]\" url=\"./upload.php\" (onUpload)=\"onUpload($event)\"\n                          [multiple]=\"true\" accept=\"image/*\" [maxFileSize]=\"1000000\">\n                <ng-template pTemplate=\"content\">\n                    <ul *ngIf=\"uploadedFiles.length\">\n                        <li *ngFor=\"let file of uploadedFiles\">{{file.name}} - {{file.size}} bytes</li>\n                    </ul>\n                </ng-template>\n            </p-fileUpload>\n\n            <h5>Basic</h5>\n            <p-fileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" [maxFileSize]=\"1000000\" (onUpload)=\"onBasicUpload()\"></p-fileUpload>\n\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "FloatLabelDemoComponent",
            "id": "component-FloatLabelDemoComponent-dddd72ff6f667ef4f177f12d307052005637836728a392863956f2fa0ed239ee2f0e67cdee76b86f37418d01e617fe63488af1a58b6d94de44cb895e2fbb30be",
            "file": "src/app/demo/components/uikit/floatlabel/floatlabeldemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./floatlabeldemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "countries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "filteredCountries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "value11",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "value12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "value2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "value8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "value9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CountryService } from 'src/app/demo/service/country.service';\n\n@Component({\n    templateUrl: './floatlabeldemo.component.html',\n})\nexport class FloatLabelDemoComponent implements OnInit {\n\n    countries: any[] = [];\n\n    cities: any[];\n\n    filteredCountries: any[] = [];\n\n    value1: any;\n\n    value2: any;\n\n    value3: any;\n\n    value4: any;\n\n    value5: any;\n\n    value6: any;\n\n    value7: any;\n\n    value8: any;\n\n    value9: any;\n\n    value10: any;\n\n    value11: any;\n\n    value12: any;\n\n    constructor(private countryService: CountryService) {\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n    }\n\n    searchCountry(event: any) {\n        // in a real application, make a request to a remote url with the query and\n        // return filtered results, for demo we filter at client side\n        const filtered: any[] = [];\n        const query = event.query;\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.countries.length; i++) {\n            const country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\n    <h5>Float Label</h5>\n    <p>\n        All input text components support floating labels by adding\n        (<mark>.p-float-label</mark>) to wrapper class.\n    </p>\n    <div class=\"grid p-fluid mt-3\">\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <input\n                    type=\"text\"\n                    id=\"inputtext\"\n                    pInputText\n                    [(ngModel)]=\"value1\"\n                />\n                <label for=\"inputtext\">InputText</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-autoComplete\n                    inputId=\"autocomplete\"\n                    [(ngModel)]=\"value2\"\n                    [suggestions]=\"filteredCountries\"\n                    (completeMethod)=\"searchCountry($event)\"\n                    field=\"name\"\n                ></p-autoComplete>\n                <label for=\"autocomplete\">AutoComplete</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label p-input-icon-left\">\n                <i class=\"pi pi-search\"></i>\n                <input\n                    type=\"text\"\n                    id=\"lefticon\"\n                    pInputText\n                    [(ngModel)]=\"value3\"\n                />\n                <label for=\"lefticon\">Left Icon</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label p-input-icon-right\">\n                <input\n                    type=\"text\"\n                    id=\"righticon\"\n                    pInputText\n                    [(ngModel)]=\"value4\"\n                />\n                <label for=\"righticon\">Right Icon</label>\n                <i class=\"pi pi-spin pi-spinner\"></i>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-calendar\n                    inputId=\"calendar\"\n                    [(ngModel)]=\"value5\"\n                ></p-calendar>\n                <label for=\"calendar\">Calendar</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value6\"></p-chips>\n                <label for=\"chips\">Chips</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-inputMask\n                    inputId=\"inputmask\"\n                    mask=\"99/99/9999\"\n                    [(ngModel)]=\"value7\"\n                ></p-inputMask>\n                <label for=\"inputmask\">InputMask</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-inputNumber\n                    inputId=\"inputnumber\"\n                    [(ngModel)]=\"value8\"\n                ></p-inputNumber>\n                <label for=\"inputnumber\">InputNumber</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <p-inputGroup>\n                <p-inputGroupAddon>\n                    <i class=\"pi pi-user\"></i>\n                </p-inputGroupAddon>\n                <span class=\"p-float-label\">\n                    <input\n                        type=\"text\"\n                        inputId=\"inputgroup\"\n                        pInputText\n                        [(ngModel)]=\"value9\"\n                    />\n                    <label for=\"inputgroup\">InputGroup</label>\n                </span>\n            </p-inputGroup>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-dropdown\n                    inputId=\"dropdown\"\n                    [autoDisplayFirst]=\"false\"\n                    [options]=\"cities\"\n                    [(ngModel)]=\"value10\"\n                    optionLabel=\"name\"\n                ></p-dropdown>\n                <label for=\"dropdown\">Dropdown</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-multiSelect\n                    inputId=\"multiselect\"\n                    [options]=\"cities\"\n                    [(ngModel)]=\"value11\"\n                    optionLabel=\"name\"\n                    [filter]=\"false\"\n                ></p-multiSelect>\n                <label for=\"multiselect\">MultiSelect</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <textarea\n                    inputId=\"textarea\"\n                    rows=\"3\"\n                    cols=\"30\"\n                    [(ngModel)]=\"value12\"\n                    pInputTextarea\n                ></textarea>\n                <label for=\"textarea\">Textarea</label>\n            </span>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "FormLayoutDemoComponent",
            "id": "component-FormLayoutDemoComponent-b42683d1be4f246fc69429020b54bb494ec5db3fc48850a378e401f052ca56e59e56ef768b66366e4e6b838f905c677316fdb46a18f7205d2527232f294f8562",
            "file": "src/app/demo/components/uikit/formlayout/formlayoutdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./formlayoutdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "cities2",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "city1",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "city2",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "dropdownItems",
                    "defaultValue": "[\n        { name: 'Option 1', code: 'Option 1' },\n        { name: 'Option 2', code: 'Option 2' },\n        { name: 'Option 3', code: 'Option 3' }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedState",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "states",
                    "defaultValue": "[\n        {name: 'Arizona', code: 'Arizona'},\n        {name: 'California', value: 'California'},\n        {name: 'Florida', code: 'Florida'},\n        {name: 'Ohio', code: 'Ohio'},\n        {name: 'Washington', code: 'Washington'}\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './formlayoutdemo.component.html'\n})\nexport class FormLayoutDemoComponent {\n\n    selectedState: any = null;\n\n    states: any[] = [\n        {name: 'Arizona', code: 'Arizona'},\n        {name: 'California', value: 'California'},\n        {name: 'Florida', code: 'Florida'},\n        {name: 'Ohio', code: 'Ohio'},\n        {name: 'Washington', code: 'Washington'}\n    ];\n\n    dropdownItems = [\n        { name: 'Option 1', code: 'Option 1' },\n        { name: 'Option 2', code: 'Option 2' },\n        { name: 'Option 3', code: 'Option 3' }\n    ];\n\n    cities1: any[] = [];\n\n    cities2: any[] = [];\n\n    city1: any = null;\n\n    city2: any = null;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid\">\n\t<div class=\"col-12 md:col-6\">\n\t\t<div class=\"card p-fluid\">\n\t\t\t<h5>Vertical</h5>\n\t\t\t<div class=\"field\">\n\t\t\t\t<label htmlFor=\"name1\">Name</label>\n\t\t\t\t<input pInputText id=\"name1\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"field\">\n\t\t\t\t<label htmlFor=\"email1\">Email</label>\n\t\t\t\t<input pInputText id=\"email1\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"field\">\n\t\t\t\t<label htmlFor=\"age1\">Age</label>\n\t\t\t\t<input pInputText id=\"age1\" type=\"text\" />\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"card p-fluid\">\n\t\t\t<h5>Vertical Grid</h5>\n\t\t\t<div class=\"p-formgrid grid\">\n\t\t\t\t<div class=\"field col\">\n\t\t\t\t\t<label htmlFor=\"name2\">Name</label>\n\t\t\t\t\t<input pInputText id=\"name2\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col\">\n\t\t\t\t\t<label htmlFor=\"email2\">Email</label>\n\t\t\t\t\t<input pInputText id=\"email2\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12 md:col-6\">\n\t\t<div class=\"card p-fluid\">\n\t\t\t<h5>Horizontal</h5>\n\t\t\t<div class=\"field grid\">\n\t\t\t\t<label htmlFor=\"name3\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Name</label>\n\t\t\t\t<div class=\"col-12 md:col-10\">\n\t\t\t\t\t<input pInputText id=\"name3\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"field grid\">\n\t\t\t\t<label htmlFor=\"email3\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Email</label>\n\t\t\t\t<div class=\"col-12 md:col-10\">\n\t\t\t\t\t<input pInputText id=\"email3\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"card\">\n\t\t\t<h5>Inline</h5>\n\t\t\t<div class=\"formgroup-inline\">\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<label htmlFor=\"firstname1\" class=\"p-sr-only\">Firstname</label>\n\t\t\t\t\t<input pInputText id=\"firstname1\" type=\"text\" placeholder=\"Firstname\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<label htmlFor=\"lastname1\" class=\"p-sr-only\">Lastname</label>\n\t\t\t\t\t<input pInputText id=\"lastname1\" type=\"text\" placeholder=\"Lastname\" />\n\t\t\t\t</div>\n\t\t\t\t<button pButton label=\"Submit\"></button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"card\">\n\t\t\t<h5>Help Text</h5>\n\t\t\t<div class=\"field p-fluid\">\n\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t<input pInputText id=\"username\" type=\"text\" />\n\t\t\t\t<small>Enter your username to reset your password.</small>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Advanced</h5>\n\t\t\t<div class=\"p-fluid p-formgrid grid\">\n\t\t\t\t<div class=\"field col-12 md:col-6\">\n\t\t\t\t\t<label htmlFor=\"firstname2\">Firstname</label>\n\t\t\t\t\t<input pInputText id=\"firstname2\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col-12 md:col-6\">\n\t\t\t\t\t<label htmlFor=\"lastname2\">Lastname</label>\n\t\t\t\t\t<input pInputText id=\"lastname2\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col-12\">\n\t\t\t\t\t<label htmlFor=\"address\">Address</label>\n\t\t\t\t\t<input pInputTextarea id=\"address\" rows=\"4\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col-12 md:col-6\">\n\t\t\t\t\t<label htmlFor=\"city\">City</label>\n\t\t\t\t\t<input pInputText id=\"city\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col-12 md:col-3\">\n\t\t\t\t\t<label htmlFor=\"state\">State</label>\n\t\t\t\t\t<p-dropdown [options]=\"dropdownItems\" optionLabel=\"name\" [(ngModel)]=\"selectedState\"></p-dropdown>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field col-12 md:col-3\">\n\t\t\t\t\t<label htmlFor=\"zip\">Zip</label>\n\t\t\t\t\t<input pInputText id=\"zip\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-5b644821d1293ee7fbd8689d784da760da1c2aa865f565b006c8330e3374b866321e032cd3e2d6aca3581416de126d1eee202f8f59b8048182917b77bf61208c",
            "file": "src/app/demo/components/utilities/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icons.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredIcons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "icons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "selectedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IconService } from 'src/app/demo/service/icon.service';\n\n@Component({\n    templateUrl: './icons.component.html',\n})\nexport class IconsComponent implements OnInit {\n\n    icons: any[] = [];\n\n    filteredIcons: any[] = [];\n\n    selectedIcon: any;\n\n    constructor(private iconService: IconService) { }\n\n    ngOnInit() {\n        this.iconService.getIcons().subscribe(data => {\n            data = data.filter(value => {\n                return value.icon.tags.indexOf('deprecate') === -1;\n            });\n\n            let icons = data;\n            icons.sort((icon1, icon2) => {\n                if (icon1.properties.name < icon2.properties.name)\n                    return -1;\n                else if (icon1.properties.name < icon2.properties.name)\n                    return 1;\n                else\n                    return 0;\n            });\n\n            this.icons = icons;\n            this.filteredIcons = data;\n        });\n    }\n\n    onFilter(event: Event): void {\n        const searchText = (event.target as HTMLInputElement).value;\n\n        if (!searchText) {\n            this.filteredIcons = this.icons;\n        }\n        else {\n            this.filteredIcons = this.icons.filter(it => {\n                return it.icon.tags[0].includes(searchText);\n            });\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "iconService",
                        "type": "IconService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "iconService",
                        "type": "IconService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\n    <h2>Icons</h2>\n        <h4>Download</h4>\n<pre class=\"app-code\"><code>npm install primeicons --save</code></pre>\n\n    <h4>Getting Started</h4>\n    <p>PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such as <strong>pi pi-check</strong>.\n        A standalone icon can be displayed using an element such as <i>i</i> or <i>span</i></p>\n\n<pre class=\"app-code\"><code>&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\n&lt;i class=\"pi pi-times\"&gt;&lt;/i&gt;</code></pre>\n    \n    <i class=\"pi pi-check\" style=\"margin-right: .5rem\"></i>\n    <i class=\"pi pi-times\"></i>\n\n    <h4>Size</h4>\n    <p>Size of the icons can easily be changed using font-size property.</p>\n\n<pre class=\"app-code\"><code>&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;</code></pre>\n\n    <i class=\"pi pi-check\"></i>\n\n<pre class=\"app-code\"><code>&lt;i class=\"pi pi-check\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;</code></pre>\n\n    <i class=\"pi pi-check\" style=\"font-size: 2rem\"></i>\n\n    <h4>Spinning Animation</h4>\n    <p>Special pi-spin class applies infinite rotate to an icon.</p>\n    \n<pre class=\"app-code\"><code>&lt;i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;</code></pre>\n    \n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n\n    <h4>List of Icons</h4>\n    <p>Here is the current list of PrimeIcons, more icons will be added periodically. You may also <a class=\"text-primary hover:underline\" href=\"https://github.com/primefaces/primeicons/issues\">request new icons</a> at the issue tracker.</p>\n    <div>\n        <input class=\"icon-filter\" (input)=\"onFilter($event)\" pInputText placeholder=\"Search an icon\" class=\"w-full p-3 mt-3 mb-5 w-full p-3 mt-3 mb-5\">\n    </div>\n\n    <div class=\"grid text-center\">\n        <div class=\"col-6 sm:col-4 lg:col-3 xl:col-2 pb-5\" *ngFor=\"let icon of filteredIcons\">\n            <i class=\"text-2xl pi pi-{{icon.properties.name}}\"></i>\n            <div>pi-{{icon.properties.name}}</div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "InputDemoComponent",
            "id": "component-InputDemoComponent-bdf03fe734f3c70ee410e80e238c7b83e4680fcdcf6f681895156b860a04fc6ec58e050e11ee29c7c5138e83e09244193dcf24b2b22370c0319d44a708c6db99",
            "file": "src/app/demo/components/uikit/input/inputdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./inputdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "countries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "filteredCountries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "paymentOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "selectedCountryAdvanced",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selectedDrop",
                    "defaultValue": "{ value: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "selectedList",
                    "defaultValue": "{ value: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selectedMulti",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "valCheck",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "valCheck2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "valColor",
                    "defaultValue": "'#424242'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "valRadio",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "valSelect1",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "valSelect2",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "valSlider",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "valSwitch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "valToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "valueKnob",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "filterCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { CountryService } from 'src/app/demo/service/country.service';\n\n@Component({\n    templateUrl: './inputdemo.component.html'\n})\nexport class InputDemoComponent implements OnInit {\n    \n    countries: any[] = [];\n\n    filteredCountries: any[] = [];\n\n    selectedCountryAdvanced: any[] = [];\n\n    valSlider = 50;\n\n    valColor = '#424242';\n\n    valRadio: string = '';\n\n    valCheck: string[] = [];\n\n    valCheck2: boolean = false;\n\n    valSwitch: boolean = false;\n\n    cities: SelectItem[] = [];\n\n    selectedList: SelectItem = { value: '' };\n\n    selectedDrop: SelectItem = { value: '' };\n\n    selectedMulti: any[] = [];\n\n    valToggle = false;\n\n    paymentOptions: any[] = [];\n\n    valSelect1: string = \"\";\n\n    valSelect2: string = \"\";\n\n    valueKnob = 20;\n\n    constructor(private countryService: CountryService) { }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n\n        this.cities = [\n            { label: 'New York', value: { id: 1, name: 'New York', code: 'NY' } },\n            { label: 'Rome', value: { id: 2, name: 'Rome', code: 'RM' } },\n            { label: 'London', value: { id: 3, name: 'London', code: 'LDN' } },\n            { label: 'Istanbul', value: { id: 4, name: 'Istanbul', code: 'IST' } },\n            { label: 'Paris', value: { id: 5, name: 'Paris', code: 'PRS' } }\n        ];\n\n        this.paymentOptions = [\n            { name: 'Option 1', value: 1 },\n            { name: 'Option 2', value: 2 },\n            { name: 'Option 3', value: 3 }\n        ];\n    }\n\n    filterCountry(event: any) {\n        const filtered: any[] = [];\n        const query = event.query;\n        for (let i = 0; i < this.countries.length; i++) {\n            const country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\n\t<div class=\"col-12 md:col-6\">\n\t\t<div class=\"card\">\n\t\t\t<h5>InputText</h5>\n\t\t\t<div class=\"grid formgrid\">\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Default\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Disabled\" [disabled]=\"true\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Invalid\" class=\"ng-dirty ng-invalid\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h5>Icons</h5>\n\t\t\t<div class=\"grid formgrid\">\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<span class=\"p-input-icon-left\">\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Username\"/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<span class=\"p-input-icon-right\">\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Search\"/>\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n\t\t\t\t\t<span class=\"p-input-icon-left p-input-icon-right\">\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Search\"/>\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h5>Float Label</h5>\n\t\t\t<span class=\"p-float-label\">\n\t\t\t\t<input id=\"float-input\" type=\"text\" pInputText>\n\t\t\t\t<label for=\"float-input\">Username</label>\n\t\t\t</span>\n\n\t\t\t<h5>Textarea</h5>\n\t\t\t<textarea rows=\"5\" cols=\"30\" placeholder=\"Your Message\" pInputTextarea></textarea>\n\n\t\t\t<h5>AutoComplete</h5>\n\t\t\t<p-autoComplete [(ngModel)]=\"selectedCountryAdvanced\" [suggestions]=\"filteredCountries\" (completeMethod)=\"filterCountry($event)\" field=\"name\" [dropdown]=\"true\">\n\t\t\t</p-autoComplete>\n\n\t\t\t<h5>Calendar</h5>\n\t\t\t<p-calendar [showIcon]=\"true\" inputId=\"icon\"></p-calendar>\n\n\t\t\t<h5>InputNumber</h5>\n\t\t\t<p-inputNumber mode=\"decimal\" [showButtons]=\"true\" [min]=\"0\" [max]=\"100\">\n\t\t\t</p-inputNumber>\n\n\t\t\t<h5>Chips</h5>\n\t\t\t<p-chips></p-chips>\n\t\t</div>\n\n\t\t<div class=\"card\">\n            <div class=\"grid\">\n                <div class=\"col-12\">\n                    <h5>Slider</h5>\n                    <input type=\"text\" pInputText [(ngModel)]=\"valSlider\" readonly/>\n                    <p-slider [(ngModel)]=\"valSlider\"></p-slider>\n                </div>\n                <div class=\"col-12 md:col-6\">\n                    <h5>Rating</h5>\n                    <p-rating></p-rating>\n                </div>\n                <div class=\"col-12 md:col-6\">\n                    <h5>ColorPicker</h5>\n                    <p-colorPicker [(ngModel)]=\"valColor\"></p-colorPicker>\n                </div>\n                <div class=\"col-12\">\n                    <h5>Knob</h5>\n                    <p-knob [(ngModel)]=\"valueKnob\" valueTemplate=\"{value}%\" [step]=\"10\" [min]=\"-50\" [max]=\"50\"></p-knob>\n                </div>\n            </div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12 md:col-6\">\n\t\t<div class=\"card\">\n\t\t\t<h5>RadioButton</h5>\n\t\t\t<div class=\"grid formgrid\">\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-radiobutton\">\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Chicago\" [(ngModel)]=\"valRadio\" id=\"city1\"></p-radioButton>\n\t\t\t\t\t\t<label for=\"city1\">Chicago</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-radiobutton\">\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Los Angeles\" [(ngModel)]=\"valRadio\"\n\t\t\t\t\t\t\t\t\t   id=\"city2\"></p-radioButton>\n\t\t\t\t\t\t<label for=\"city2\">Los Angeles</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-radiobutton\">\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"New York\" [(ngModel)]=\"valRadio\" id=\"city3\"></p-radioButton>\n\t\t\t\t\t\t<label for=\"city3\">New York</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h5>Checkbox</h5>\n\t\t\t<div class=\"grid formgrid\">\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-checkbox\">\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"New York\" [(ngModel)]=\"valCheck\" id=\"ny\"></p-checkbox>\n\t\t\t\t\t\t<label for=\"ny\">New York</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-checkbox\">\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"San Francisco\" [(ngModel)]=\"valCheck\" id=\"sf\"></p-checkbox>\n\t\t\t\t\t\t<label for=\"sf\">San Francisco</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 md:col-4\">\n\t\t\t\t\t<div class=\"field-checkbox\">\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"Los Angeles\" [(ngModel)]=\"valCheck\" id=\"la\"></p-checkbox>\n\t\t\t\t\t\t<label for=\"la\">Los Angeles</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h5>Input Switch</h5>\n\t\t\t<p-inputSwitch [(ngModel)]=\"valSwitch\"></p-inputSwitch>\n\t\t</div>\n\n\t\t<div class=\"card\">\n\t\t\t<h5>Listbox</h5>\n\t\t\t<p-listbox [options]=\"cities\" [(ngModel)]=\"selectedList\" [filter]=\"true\"></p-listbox>\n\n\t\t\t<h5>Dropdown</h5>\n\t\t\t<p-dropdown [options]=\"cities\" [(ngModel)]=\"selectedDrop\" placeholder=\"Select a City\" [showClear]=\"true\"></p-dropdown>\n\n\t\t\t<h5>Multiselect</h5>\n\t\t\t<p-multiSelect [options]=\"countries\" [(ngModel)]=\"selectedMulti\" placeholder=\"Select a Country\" optionLabel=\"name\" class=\"multiselect-custom\" display=\"chip\">\n\t\t\t\t<ng-template let-country pTemplate=\"item\">\n\t\t\t\t\t<div class=\"flex align-items-center\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/flag/flag_placeholder.png\" [class]=\"'flag flag-' + country.code.toLowerCase()\" style=\"width:21px\"/>\n\t\t\t\t\t\t<span class=\"ml-2\">{{country.name}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\t\t\t</p-multiSelect>\n\t\t</div>\n\n\t\t<div class=\"card\">\n\t\t\t<h5>ToggleButton</h5>\n\t\t\t<p-toggleButton [(ngModel)]=\"valToggle\" onLabel=\"Yes\" offLabel=\"No\" [style]=\"{'width': '10em'}\"></p-toggleButton>\n\n\t\t\t<h5>SelectOneButton</h5>\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect1\" optionLabel=\"name\"></p-selectButton>\n\n\t\t\t<h5>SelectManyButton</h5>\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect2\" [multiple]=\"true\" optionLabel=\"name\"></p-selectButton>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>InputGroup</h5>\n\t\t\t<div class=\"grid\">\n\t\t\t\t<div class=\"col-12 md:col-6\">\n                    <p-inputGroup>\n                        <p-inputGroupAddon>\n                            <i class=\"pi pi-user\"></i>\n                        </p-inputGroupAddon>\n                        <input pInputText type=\"text\" placeholder=\"Username\" />\n                    </p-inputGroup>\n                </div>\n\t\t\t\t<div class=\"col-12 md:col-6\">\n                    <p-inputGroup class=\"w-full\">\n                        <p-inputGroupAddon>\n                            <i class=\"pi pi-tags\" style=\"line-height: 1.25\"></i>\n                        </p-inputGroupAddon>\n\n                        <p-inputGroupAddon>\n                            <i class=\"pi pi-shopping-cart\" style=\"line-height: 1.25\"></i>\n                        </p-inputGroupAddon>\n\n                        <input type=\"text\" pInputText placeholder=\"Price\" />\n                        <p-inputGroupAddon>$</p-inputGroupAddon>\n                        <p-inputGroupAddon>.00</p-inputGroupAddon>\n                    </p-inputGroup>\n                </div>\n\t\t\t\t<div class=\"col-12 md:col-6\">\n                    <p-inputGroup>\n                        <button type=\"button\" pButton label=\"Search\"></button>\n                        <input type=\"text\" pInputText placeholder=\"Keyword\" />\n                    </p-inputGroup>\n                </div>\n\t\t\t\t<div class=\"col-12 md:col-6\">\n                    <p-inputGroup>\n                        <p-inputGroupAddon><p-checkbox [(ngModel)]=\"valCheck2\"\n                                [binary]=\"true\"></p-checkbox></p-inputGroupAddon>\n                        <input type=\"text\" pInputText placeholder=\"Username\" />\n                    </p-inputGroup>\n                </div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"
        },
        {
            "name": "InvalidStateDemoComponent",
            "id": "component-InvalidStateDemoComponent-0cbc3628d5dae118fd2bbed13619143e1ffb99cab03c47d6b550c17e3cb61ba23371c6281aefaa159c9fe1a89e9902b5cbc8a714a8eff6cce4a9825be00bdd94",
            "file": "src/app/demo/components/uikit/invalid/invalidstatedemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./invalidstatedemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "countries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "filteredCountries",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "value2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "value8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "value9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CountryService } from 'src/app/demo/service/country.service';\n\n@Component({\n    templateUrl: './invalidstatedemo.component.html'\n})\nexport class InvalidStateDemoComponent implements OnInit {\n\n    countries: any[] = [];\n\n    cities: any[];\n\n    filteredCountries: any[] = [];\n\n    value1: any;\n\n    value2: any;\n\n    value3: any;\n\n    value4: any;\n\n    value5: any;\n\n    value6: any;\n\n    value7: any;\n\n    value8: any;\n\n    value9: any;\n\n    value10: any;\n\n    constructor(private countryService: CountryService) {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n    }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n    }\n\n    searchCountry(event: any) {\n        // in a real application, make a request to a remote url with the query and return filtered results,\n        // for demo we filter at client side\n        const filtered: any[] = [];\n        const query = event.query;\n        for (let i = 0; i < this.countries.length; i++) {\n            const country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\n    <h5>Invalid State</h5>\n    <p>All form components have an invalid state style to display the validation errors when ng-invalid ng-dirty combination is applied by Angular.</p>\n    <div class=\"grid p-fluid\">\n        <div class=\"col-12 md:col-6\">\n            <div class=\"field mt-3\">\n                <label for=\"inputtext\">InputText</label>\n                <input type=\"text\" id=\"inputtext\" pInputText class=\"ng-invalid ng-dirty\">\n            </div>\n            <div class=\"field\">\n                <label for=\"autocomplete\">AutoComplete</label>\n                <p-autoComplete inputId=\"autocomplete\" [(ngModel)]=\"value1\" [suggestions]=\"filteredCountries\" (completeMethod)=\"searchCountry($event)\" field=\"name\" class=\"ng-invalid ng-dirty\"></p-autoComplete>\n\n            </div>\n            <div class=\"field\">\n                <label for=\"calendar\">Calendar</label>\n                <p-calendar inputId=\"calendar\" [(ngModel)]=\"value2\" class=\"ng-invalid ng-dirty\" [showIcon]=\"true\"></p-calendar>\n            </div>\n            <div class=\"field\">\n                <label for=\"chips\">Chips</label>\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value3\" class=\"ng-invalid ng-dirty\"></p-chips>\n            </div>\n            <div class=\"field\">\n                <label for=\"password\">Password</label>\n                <p-password [(ngModel)]=\"value8\" class=\"ng-invalid ng-dirty\"></p-password>\n            </div>\n        </div>\n        \n        <div class=\"col-12 md:col-6\">                    \n            <div class=\"field mt-3\">\n                <label for=\"inputmask\">InputMask</label>\n                <p-inputMask inputId=\"inputmask\" mask=\"99/99/9999\" [(ngModel)]=\"value5\" class=\"ng-invalid ng-dirty\"></p-inputMask>\n            </div>\n            <div class=\"field\">\n                <label for=\"inputnumber\">InputNumber</label>\n                <p-inputNumber inputId=\"inputnumber\" [(ngModel)]=\"value6\" class=\"ng-invalid ng-dirty\"></p-inputNumber>\n            </div>\n            <div class=\"field\">\n                <label for=\"dropdown\">Dropdown</label>\n                <p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"cities\" [(ngModel)]=\"value9\" optionLabel=\"name\" class=\"ng-invalid ng-dirty\"></p-dropdown>\n            </div>\n            <div class=\"field\">\n                <label for=\"multiselect\">MultiSelect</label>\n                <p-multiSelect inputId=\"multiselect\" [options]=\"cities\" [(ngModel)]=\"value10\" optionLabel=\"name\" [filter]=\"false\" class=\"ng-invalid ng-dirty\"></p-multiSelect>\n            </div>\n            <div class=\"field\">\n                <label for=\"textarea\">Textarea</label>\n                <textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" [(ngModel)]=\"value4\" pInputTextarea class=\"ng-invalid ng-dirty\"></textarea>\n            </div>\n        </div>\n    </div>\n</div>\n\n"
        },
        {
            "name": "LandingComponent",
            "id": "component-LandingComponent-918f859ee616831300499d5e66a2676bd80f89b0e096825355dc386d661f90d33547a78dc6b13848e9aedb1105b72dfc166bd9c658734e58f55908ad05b27df2",
            "file": "src/app/demo/components/landing/landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./landing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    selector: 'app-landing',\n    templateUrl: './landing.component.html'\n})\nexport class LandingComponent {\n\n    constructor(public layoutService: LayoutService, public router: Router) { }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"surface-0 flex justify-content-center\">\n    <div id=\"home\" class=\"landing-wrapper overflow-hidden\">\n        <div class=\"py-4 px-4 mx-0 md:mx-6 lg:mx-8 lg:px-8 flex align-items-center justify-content-between relative lg:static mb-3\">\n            <a class=\"flex align-items-center\" href=\"#\">\n                <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"Sakai Logo\" height=\"50\" class=\"mr-0 lg:mr-2\"><span class=\"text-900 font-medium text-2xl line-height-3 mr-8\">SAKAI</span>\n            </a>\n            <a pRipple class=\"cursor-pointer block lg:hidden text-700\" pStyleClass=\"@next\" enterClass=\"hidden\" leaveToClass=\"hidden\" [hideOnOutsideClick]=\"true\">\n                <i class=\"pi pi-bars text-4xl\"></i>\n            </a>\n            <div class=\"align-items-center surface-0 flex-grow-1 justify-content-between hidden lg:flex absolute lg:static w-full left-0 px-6 lg:px-0 z-2\" style=\"top:120px\">\n                <ul class=\"list-none p-0 m-0 flex lg:align-items-center select-none flex-column lg:flex-row cursor-pointer\">\n                    <li>\n                        <a (click)=\"router.navigate(['/landing'], {fragment: 'home'})\" pRipple class=\"flex m-0 md:ml-5 px-0 py-3 text-900 font-medium line-height-3\">\n                           <span>Home</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a (click)=\"router.navigate(['/landing'], {fragment: 'features'})\" pRipple class=\"flex m-0 md:ml-5 px-0 py-3 text-900 font-medium line-height-3\">\n                            <span>Features</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a (click)=\"router.navigate(['/landing'], {fragment: 'highlights'})\" pRipple class=\"flex m-0 md:ml-5 px-0 py-3 text-900 font-medium line-height-3\">\n                            <span>Highlights</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a (click)=\"router.navigate(['/landing'], {fragment: 'pricing'})\" pRipple class=\"flex m-0 md:ml-5 px-0 py-3 text-900 font-medium line-height-3\">\n                            <span>Pricing</span>\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"flex justify-content-between lg:block border-top-1 lg:border-top-none surface-border py-3 lg:py-0 mt-3 lg:mt-0\">\n                    <button pButton pRipple label=\"Login\" class=\"p-button-text p-button-rounded border-none font-light line-height-2 text-blue-500\"></button>\n                    <button pButton pRipple label=\"Register\" class=\"p-button-rounded border-none ml-5 font-light line-height-2 bg-blue-500 text-white\"></button>\n                </div>\n            </div>\n        </div>\n    \n        <div id=\"hero\" class=\"flex flex-column pt-4 px-4 lg:px-8 overflow-hidden\" \n            style=\"background: linear-gradient(0deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2)), radial-gradient(77.36% 256.97% at 77.36% 57.52%, #EEEFAF 0%, #C3E3FA 100%); clip-path: ellipse(150% 87% at 93% 13%);\">\n            <div class=\"mx-4 md:mx-8 mt-0 md:mt-4\">\n                <h1 class=\"text-6xl font-bold text-gray-900 line-height-2\"><span class=\"font-light block\">Eu sem integer</span>eget magna fermentum</h1>\n                <p class=\"font-normal text-2xl line-height-3 md:mt-3 text-gray-700\">Sed blandit libero volutpat sed cras. Fames ac turpis egestas integer. Placerat in egestas erat... </p>\n                <button pButton pRipple type=\"button\" label=\"Get Started\" class=\"p-button-rounded text-xl border-none mt-3 bg-blue-500 font-normal line-height-3 px-3 text-white\"></button>\n            </div>\n            <div class=\"flex justify-content-center md:justify-content-end\">\n                <img src=\"assets/demo/images/landing/screen-1.png\" alt=\"Hero Image\" class=\"w-9 md:w-auto\">\n            </div>\n        </div>\n        \n        <div id=\"features\" class=\"py-4 px-4 lg:px-8 mt-5 mx-0 lg:mx-8\">\n            <div class=\"grid justify-content-center\">\n                <div class=\"col-12 text-center mt-8 mb-4\">\n                    <h2 class=\"text-900 font-normal mb-2\">Marvelous Features</h2>\n                    <span class=\"text-600 text-2xl\">Placerat in egestas erat...</span>\n                </div>\n    \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(253, 228, 165, 0.2),rgba(187, 199, 205, 0.2)), linear-gradient(180deg, rgba(253, 228, 165, 0.2),rgba(187, 199, 205, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-yellow-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-users text-2xl text-yellow-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Easy to Use</h5>\n                            <span class=\"text-600\">Posuere morbi leo urna molestie.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(145,226,237,0.2),rgba(251, 199, 145, 0.2)), linear-gradient(180deg, rgba(253, 228, 165, 0.2), rgba(172, 180, 223, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-cyan-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-palette text-2xl text-cyan-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Fresh Design</h5>\n                            <span class=\"text-600\">Semper risus in hendrerit.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(145, 226, 237, 0.2), rgba(172, 180, 223, 0.2)), linear-gradient(180deg, rgba(172, 180, 223, 0.2), rgba(246, 158, 188, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-indigo-200\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-map text-2xl text-indigo-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Well Documented</h5>\n                            <span class=\"text-600\">Non arcu risus quis varius quam quisque.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(187, 199, 205, 0.2),rgba(251, 199, 145, 0.2)), linear-gradient(180deg, rgba(253, 228, 165, 0.2),rgba(145, 210, 204, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-bluegray-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-id-card text-2xl text-bluegray-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Responsive Layout</h5>\n                            <span class=\"text-600\">Nulla malesuada pellentesque elit.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(187, 199, 205, 0.2),rgba(246, 158, 188, 0.2)), linear-gradient(180deg, rgba(145, 226, 237, 0.2),rgba(160, 210, 250, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-orange-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-star text-2xl text-orange-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Clean Code</h5>\n                            <span class=\"text-600\">Condimentum lacinia quis vel eros.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pb-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(251, 199, 145, 0.2), rgba(246, 158, 188, 0.2)), linear-gradient(180deg, rgba(172, 180, 223, 0.2), rgba(212, 162, 221, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-pink-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-moon text-2xl text-pink-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Dark Mode</h5>\n                            <span class=\"text-600\">Convallis tellus id interdum velit laoreet.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(145, 210, 204, 0.2), rgba(160, 210, 250, 0.2)), linear-gradient(180deg, rgba(187, 199, 205, 0.2), rgba(145, 210, 204, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-teal-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-shopping-cart text-2xl text-teal-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Ready to Use</h5>\n                            <span class=\"text-600\">Mauris sit amet massa vitae.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg:pr-5 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(145, 210, 204, 0.2), rgba(212, 162, 221, 0.2)), linear-gradient(180deg, rgba(251, 199, 145, 0.2), rgba(160, 210, 250, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-blue-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-globe text-2xl text-blue-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Modern Practices</h5>\n                            <span class=\"text-600\">Elementum nibh tellus molestie nunc non.</span>\n                        </div>\n                    </div>\n                </div>\n        \n                <div class=\"col-12 md:col-12 lg:col-4 p-0 lg-4 mt-4 lg:mt-0\">\n                    <div style=\"height:160px; padding:2px; border-radius:10px; background: linear-gradient(90deg, rgba(160, 210, 250, 0.2), rgba(212, 162, 221, 0.2)), linear-gradient(180deg, rgba(246, 158, 188, 0.2), rgba(212, 162, 221, 0.2));\">\n                        <div class=\"p-3 surface-card h-full\" style=\"border-radius:8px;\">\n                            <div class=\"flex align-items-center justify-content-center bg-purple-200 mb-3\" style=\"width:3.5rem;height:3.5rem; border-radius:10px;\">\n                                <i class=\"pi pi-fw pi-eye text-2xl text-purple-700\"></i>\n                            </div>\n                            <h5 class=\"mb-2 text-900\">Privacy</h5>\n                            <span class=\"text-600\">Neque egestas congue quisque.</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <div class=\"col-12 mt-8 mb-8 p-2 md:p-8\" style=\"border-radius:20px; background:linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), radial-gradient(77.36% 256.97% at 77.36% 57.52%, #EFE1AF 0%, #C3DCFA 100%);\">\n                    <div class=\"flex flex-column justify-content-center align-items-center text-center px-3 py-3 md:py-0\">\n                        <h3 class=\"text-gray-900 mb-2\">Joséphine Miller</h3>\n                        <span class=\"text-gray-600 text-2xl\">Peak Interactive</span>\n                        <p class=\"text-gray-900 sm:line-height-2 md:line-height-4 text-2xl mt-4\" style=\"max-width:800px;\">“Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.”</p>\n                        <img src=\"assets/demo/images/landing/peak-logo.svg\" class=\"mt-4\" alt=\"Company logo\">\n    \n                    </div>\n                </div>\n            </div>\n        </div>\n            \n        <div id=\"highlights\" class=\"py-4 px-4 lg:px-8 mx-0 my-6 lg:mx-8\">\n            <div class=\"text-center\">\n                <h2 class=\"text-900 font-normal mb-2\">Powerful Everywhere</h2>\n                <span class=\"text-600 text-2xl\">Amet consectetur adipiscing elit...</span>\n            </div>\n    \n            <div class=\"grid mt-8 pb-2 md:pb-8\">\n                <div class=\"flex justify-content-center col-12 lg:col-6 bg-purple-100 p-0 flex-order-1 lg:flex-order-0\" style=\"border-radius:8px;\">\n                    <img src=\"assets/demo/images/landing/mockup.svg\" class=\"w-11\" alt=\"mockup mobile\">\n                </div>\n    \n                <div class=\"col-12 lg:col-6 my-auto flex flex-column lg:align-items-end text-center lg:text-right\">\n                    <div class=\"flex align-items-center justify-content-center bg-purple-200 align-self-center lg:align-self-end\" style=\"width:4.2rem; height:4.2rem; border-radius: 10px;\">\n                        <i class=\"pi pi-fw pi-mobile text-5xl text-purple-700\"></i>\n                    </div>\n                    <h2 class=\"line-height-1 text-900 text-4xl font-normal\">Congue Quisque Egestas</h2>\n                    <span class=\"text-700 text-2xl line-height-3 ml-0 md:ml-2\" style=\"max-width:650px;\">Lectus arcu bibendum at varius vel pharetra vel turpis nunc. Eget aliquet nibh praesent tristique magna sit amet purus gravida. Sit amet mattis vulputate enim nulla aliquet.</span>\n                </div>\n            </div>\n    \n            <div class=\"grid my-8 pt-2 md:pt-8\">\n                <div class=\"col-12 lg:col-6 my-auto flex flex-column text-center lg:text-left lg:align-items-start\">\n                    <div class=\"flex align-items-center justify-content-center bg-yellow-200 align-self-center lg:align-self-start\" style=\"width:4.2rem; height:4.2rem; border-radius:10px;\">\n                        <i class=\"pi pi-fw pi-desktop text-5xl text-yellow-700\"></i>\n                    </div>\n                    <h2 class=\"line-height-1 text-900 text-4xl font-normal\">Celerisque Eu Ultrices</h2>\n                    <span class=\"text-700 text-2xl line-height-3 mr-0 md:mr-2\" style=\"max-width:650px;\">Adipiscing commodo elit at imperdiet dui. Viverra nibh cras pulvinar mattis nunc sed blandit libero. Suspendisse in est ante in. Mauris pharetra et ultrices neque ornare aenean euismod elementum nisi.</span>\n                </div>\n    \n                <div class=\"flex justify-content-end flex-order-1 sm:flex-order-2 col-12 lg:col-6 bg-yellow-100 p-0\" style=\"border-radius:8px;\">\n                    <img src=\"assets/demo/images/landing/mockup-desktop.svg\" class=\"w-11\" alt=\"mockup\">\n                </div>\n            </div>\n        </div>\n    \n        <div id=\"pricing\" class=\"py-4 px-4 lg:px-8 my-2 md:my-4\">\n            <div class=\"text-center\">\n                <h2 class=\"text-900 font-normal mb-2\">Matchless Pricing</h2>\n                <span class=\"text-600 text-2xl\">Amet consectetur adipiscing elit...</span>\n            </div>\n    \n           <div class=\"grid justify-content-between mt-8 md:mt-0\">\n                <div class=\"col-12 lg:col-4 p-0 md:p-3\">\n                    <div class=\"p-3 flex flex-column border-200 pricing-card cursor-pointer border-2 hover:border-primary transition-duration-300 transition-all\" style=\"border-radius:10px\">\n                        <h3 class=\"text-900 text-center my-5\">Free</h3>\n                        <img src=\"assets/demo/images/landing/free.svg\" class=\"w-10 h-10 mx-auto\" alt=\"free\">\n                        <div class=\"my-5 text-center\">\n                            <span class=\"text-5xl font-bold mr-2 text-900\">$0</span>\n                            <span class=\"text-600\">per month</span>\n                            <button pButton pRipple label=\"Get Started\" class=\"block mx-auto mt-4 p-button-rounded border-none ml-3 font-light line-height-2 bg-blue-500 text-white\"></button>\n                        </div>\n                        <p-divider class=\"w-full bg-surface-200\"></p-divider>\n                        <ul class=\"my-5 list-none p-0 flex text-900 flex-column\">\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Responsive Layout</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Unlimited Push Messages</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">50 Support Ticket</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Free Shipping</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"col-12 lg:col-4 p-0 md:p-3 mt-4 md:mt-0\">\n                    <div class=\"p-3 flex flex-column border-200 pricing-card cursor-pointer border-2 hover:border-primary transition-duration-300 transition-all\" style=\"border-radius:10px\">\n                        <h3 class=\"text-900 text-center my-5\">Startup</h3>\n                        <img src=\"assets/demo/images/landing/startup.svg\" class=\"w-10 h-10 mx-auto\" alt=\"startup\">\n                        <div class=\"my-5 text-center\">\n                            <span class=\"text-5xl font-bold mr-2 text-900\">$1</span>\n                            <span class=\"text-600\">per month</span>\n                            <button pButton pRipple label=\"Try Free\" class=\"block mx-auto mt-4 p-button-rounded border-none ml-3 font-light line-height-2 bg-blue-500 text-white\"></button>\n                        </div>\n                        <p-divider class=\"w-full bg-surface-200\"></p-divider>\n                        <ul class=\"my-5 list-none p-0 flex text-900 flex-column\">\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Responsive Layout</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Unlimited Push Messages</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">50 Support Ticket</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Free Shipping</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"col-12 lg:col-4 p-0 md:p-3 mt-4 md:mt-0\">\n                    <div class=\"p-3 flex flex-column border-200 pricing-card cursor-pointer border-2 hover:border-primary transition-duration-300 transition-all\" style=\"border-radius:10px\">\n                        <h3 class=\"text-900 text-center my-5\">Enterprise</h3>\n                        <img src=\"assets/demo/images/landing/enterprise.svg\" class=\"w-10 h-10 mx-auto\" alt=\"enterprise\">\n                        <div class=\"my-5 text-center\">\n                            <span class=\"text-5xl font-bold mr-2 text-900\">$999</span>\n                            <span class=\"text-600\">per month</span>\n                            <button pButton pRipple label=\"Get a Quote\" class=\"block mx-auto mt-4 p-button-rounded border-none ml-3 font-light line-height-2 bg-blue-500 text-white\"></button>\n                        </div>\n                        <p-divider class=\"w-full bg-surface-200\"></p-divider>\n                        <ul class=\"my-5 list-none p-0 flex text-900 flex-column\">\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Responsive Layout</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Unlimited Push Messages</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">50 Support Ticket</span>\n                            </li>\n                            <li class=\"py-2\">\n                                <i class=\"pi pi-fw pi-check text-xl text-cyan-500 mr-2\"></i>\n                                <span class=\"text-xl line-height-3\">Free Shipping</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n           </div> \n        </div>\n    \n        <div class=\"py-4 px-4 mx-0 mt-8 lg:mx-8\">\n            <div class=\"grid justify-content-between\">\n                <div class=\"col-12 md:col-2\" style=\"margin-top:-1.5rem;\">\n                    <a (click)=\"router.navigate(['/pages/landing'], {fragment: 'home'})\" class=\"flex flex-wrap align-items-center justify-content-center md:justify-content-start md:mb-0 mb-3 cursor-pointer\">\n                        <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"footer sections\" width=\"50\" height=\"50\" class=\"mr-2\">\n                        <h4 class=\"font-medium text-3xl text-900\">SAKAI</h4>\n                    </a>\n                </div>\n    \n                <div class=\"col-12 md:col-10 lg:col-7\">\n                    <div class=\"grid text-center md:text-left\">\n                        <div class=\"col-12 md:col-3\">\n                            <h4 class=\"font-medium text-2xl line-height-3 mb-3 text-900\">Company</h4>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">About Us</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">News</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Investor Relations</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Careers</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer text-700\">Media Kit</a>\n                        </div>\n                        \n                        <div class=\"col-12 md:col-3 mt-4 md:mt-0\">\n                            <h4 class=\"font-medium text-2xl line-height-3 mb-3 text-900\">Resources</h4>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Get Started</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Learn</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer text-700\">Case Studies</a>\n                        </div>\n        \n                        <div class=\"col-12 md:col-3 mt-4 md:mt-0\">\n                            <h4 class=\"font-medium text-2xl line-height-3 mb-3 text-900\">Community</h4>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Discord</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Events<img src=\"assets/demo/images/landing/new-badge.svg\" class=\"ml-2\"/></a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">FAQ</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer text-700\">Blog</a>\n                        </div>\n        \n                        <div class=\"col-12 md:col-3 mt-4 md:mt-0\">\n                            <h4 class=\"font-medium text-2xl line-height-3 mb-3 text-900\">Legal</h4>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Brand Policy</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer mb-2 text-700\">Privacy Policy</a>\n                            <a class=\"line-height-3 text-xl block cursor-pointer text-700\">Terms of Service</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "ListDemoComponent",
            "id": "component-ListDemoComponent-37b246153b83c27511ab0931379199863aca6d3b18e16b8cfbc557eb4235c348a49f7e0f719f7e8130ba8c0b3fbc8cc6685decc3ddb83ac4ada15ebb2da3ae71",
            "file": "src/app/demo/components/uikit/list/listdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./listdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "orderCities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sortField",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sortOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sortOrder",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sourceCities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "targetCities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "dv",
                            "type": "DataView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dv",
                            "type": "DataView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { DataView } from 'primeng/dataview';\nimport { Product } from 'src/app/demo/api/product';\nimport { ProductService } from 'src/app/demo/service/product.service';\n\n@Component({\n    templateUrl: './listdemo.component.html'\n})\nexport class ListDemoComponent implements OnInit {\n\n    products: Product[] = [];\n\n    sortOptions: SelectItem[] = [];\n\n    sortOrder: number = 0;\n\n    sortField: string = '';\n\n    sourceCities: any[] = [];\n\n    targetCities: any[] = [];\n\n    orderCities: any[] = [];\n\n    constructor(private productService: ProductService) { }\n\n    ngOnInit() {\n        this.productService.getProducts().then(data => this.products = data);\n\n        this.sourceCities = [\n            { name: 'San Francisco', code: 'SF' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Paris', code: 'PRS' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Berlin', code: 'BRL' },\n            { name: 'Barcelona', code: 'BRC' },\n            { name: 'Rome', code: 'RM' }];\n\n        this.targetCities = [];\n\n        this.orderCities = [\n            { name: 'San Francisco', code: 'SF' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Paris', code: 'PRS' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Berlin', code: 'BRL' },\n            { name: 'Barcelona', code: 'BRC' },\n            { name: 'Rome', code: 'RM' }];\n\n        this.sortOptions = [\n            { label: 'Price High to Low', value: '!price' },\n            { label: 'Price Low to High', value: 'price' }\n        ];\n    }\n\n    onSortChange(event: any) {\n        const value = event.value;\n\n        if (value.indexOf('!') === 0) {\n            this.sortOrder = -1;\n            this.sortField = value.substring(1, value.length);\n        } else {\n            this.sortOrder = 1;\n            this.sortField = value;\n        }\n    }\n\n    onFilter(dv: DataView, event: Event) {\n        dv.filter((event.target as HTMLInputElement).value);\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>DataView</h5>\n\t\t\t<p-dataView #dv [value]=\"products\" [paginator]=\"true\" [rows]=\"9\" filterBy=\"name\" [sortField]=\"sortField\" [sortOrder]=\"sortOrder\" layout=\"grid\">\n\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<div class=\"flex flex-column md:flex-row md:justify-content-between gap-2\">\n\t\t\t\t\t\t<p-dropdown [options]=\"sortOptions\" placeholder=\"Sort By Price\" (onChange)=\"onSortChange($event)\"></p-dropdown>\n\t\t\t\t\t\t<span class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <input type=\"search\" pInputText placeholder=\"Search by Name\" (input)=\"onFilter(dv, $event)\">\n                        </span>\t\n\t\t\t\t\t\t<p-dataViewLayoutOptions></p-dataViewLayoutOptions>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template let-products pTemplate=\"listItem\">\n\t\t\t\t\t<div class=\"col-12\" *ngFor=\"let product of products\">\n\t\t\t\t\t\t<div class=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n\t\t\t\t\t\t\t<img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\"/>\n\t\t\t\t\t\t\t<div class=\"flex-1 flex flex-column align-items-center text-center md:text-left\">\n\t\t\t\t\t\t\t\t<div class=\"font-bold text-2xl\">{{product.name}}</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-2\">{{product.description}}</div>\n\t\t\t\t\t\t\t\t<p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\" styleClass=\"mb-2\"></p-rating>\n\t\t\t\t\t\t\t\t<div class=\"flex align-items-center mt-2\">\n\t\t\t\t\t\t\t\t\t<i class=\"pi pi-tag mr-2\"></i>\n\t\t\t\t\t\t\t\t\t<span class=\"font-semibold\">{{product.category}}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\n\t\t\t\t\t\t\t\t<span class=\"text-2xl font-semibold mb-2 align-self-center md:align-self-end\">${{product.price}}</span>\n\t\t\t\t\t\t\t\t<p-button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" [disabled]=\"product.inventoryStatus === 'OUTOFSTOCK'\" styleClass=\"mb-2 p-button-sm\"></p-button>\n\t\t\t\t\t\t\t\t<span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template let-products pTemplate=\"gridItem\">\n\t\t\t\t\t<div class=\"grid grid-nogutter\">\n\t\t\t\t\t<div class=\"col-12 md:col-4\" *ngFor=\"let product of products\">\n\t\t\t\t\t\t<div class=\"card m-3 border-1 surface-border\">\n\t\t\t\t\t\t\t<div class=\"flex flex-wrap gap-2 align-items-center justify-content-between mb-2\">\n\t\t\t\t\t\t\t\t<div class=\"flex align-items-center\">\n\t\t\t\t\t\t\t\t\t<i class=\"pi pi-tag mr-2\"></i>\n\t\t\t\t\t\t\t\t\t<span class=\"font-semibold\">{{product.category}}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex flex-column align-items-center text-center mb-3\">\n\t\t\t\t\t\t\t\t<img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"w-9 shadow-2 my-3 mx-0\"/>\n\t\t\t\t\t\t\t\t<div class=\"text-2xl font-bold\">{{product.name}}</div>\n\t\t\t\t\t\t\t\t<div class=\"mb-3\">{{product.description}}</div>\n\t\t\t\t\t\t\t\t<p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex align-items-center justify-content-between\">\n\t\t\t\t\t\t\t\t<span class=\"text-2xl font-semibold\">${{product.price}}</span>\n\t\t\t\t\t\t\t\t<p-button icon=\"pi pi-shopping-cart\" [disabled]=\"product.inventoryStatus === 'OUTOFSTOCK'\"></p-button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\t\t\t</p-dataView>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12 xl:col-8\">\n\t\t<div class=\"card\">\n\t\t\t<h5>PickList</h5>\n\t\t\t<p-pickList [source]=\"sourceCities\" [target]=\"targetCities\" sourceHeader=\"From\" targetHeader=\"To\" [dragdrop]=\"true\"\n\t\t\t\t\t\t[responsive]=\"true\" [sourceStyle]=\"{'height':'250px'}\" [targetStyle]=\"{'height':'250px'}\">\n\t\t\t\t<ng-template let-city pTemplate=\"item\">\n\t\t\t\t\t<div>{{city.name}}</div>\n\t\t\t\t</ng-template>\n\t\t\t</p-pickList>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12 xl:col-4\">\n\t\t<div class=\"card\">\n\t\t\t<h5>OrderList</h5>\n\t\t\t<p-orderList [value]=\"orderCities\" header=\"Cities\" [dragdrop]=\"true\" [listStyle]=\"{'height':'250px'}\">\n\t\t\t\t<ng-template let-city pTemplate=\"item\">\n\t\t\t\t\t<div>{{city.name}}</div>\n\t\t\t\t</ng-template>\n\t\t\t</p-orderList>\n\t\t</div>\n\t</div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-700844382decda80053fce6ca56f5d937d986315d72de98931077a082fee90adc0313efc24455a5a785d4c89f8cc483b536f6ef1eede85b4d06c389837207125",
            "file": "src/app/demo/components/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [
                "\n        :host ::ng-deep .pi-eye,\n        :host ::ng-deep .pi-eye-slash {\n            transform:scale(1.6);\n            margin-right: 1rem;\n            color: var(--primary-color) !important;\n        }\n    "
            ],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LayoutService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "valCheck",
                    "defaultValue": "['remember']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styles: [`\n        :host ::ng-deep .pi-eye,\n        :host ::ng-deep .pi-eye-slash {\n            transform:scale(1.6);\n            margin-right: 1rem;\n            color: var(--primary-color) !important;\n        }\n    `]\n})\nexport class LoginComponent {\n\n    valCheck: string[] = ['remember'];\n\n    password!: string;\n\n    constructor(public layoutService: LayoutService) { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        :host ::ng-deep .pi-eye,\n        :host ::ng-deep .pi-eye-slash {\n            transform:scale(1.6);\n            margin-right: 1rem;\n            color: var(--primary-color) !important;\n        }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <img src=\"assets/layout/images/{{layoutService.config().colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"Sakai logo\" class=\"mb-5 w-6rem flex-shrink-0\">                \n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8\" style=\"border-radius:53px\">\n                <div class=\"text-center mb-5\">\n                    <img src=\"assets/demo/images/login/avatar.png\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n                    <div class=\"text-900 text-3xl font-medium mb-3\">Welcome, Isabel!</div>\n                    <span class=\"text-600 font-medium\">Sign in to continue</span>\n                </div>\n\n                <div>\n                    <label for=\"email1\" class=\"block text-900 text-xl font-medium mb-2\">Email</label>\n                    <input id=\"email1\" type=\"text\" placeholder=\"Email address\" pInputText class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\">\n\n                    <label for=\"password1\" class=\"block text-900 font-medium text-xl mb-2\">Password</label>\n                    <p-password id=\"password1\" [(ngModel)]=\"password\" placeholder=\"Password\" [toggleMask]=\"true\" styleClass=\"mb-5\" inputStyleClass=\"w-full p-3 md:w-30rem\"></p-password>\n\n                    <div class=\"flex align-items-center justify-content-between mb-5 gap-5\">\n                        <div class=\"flex align-items-center\">\n                            <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                            <label for=\"rememberme1\">Remember me</label>\n                        </div>\n                        <a class=\"font-medium no-underline ml-2 text-right cursor-pointer\" style=\"color: var(--primary-color)\">Forgot password?</a>\n                    </div>\n                    <button pButton pRipple label=\"Sign In\" class=\"w-full p-3 text-xl\" [routerLink]=\"['/']\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "MediaDemoComponent",
            "id": "component-MediaDemoComponent-60bceb2a22a7f476170395970ee4d2ca292ca4065076043c15c070463788c97ca08157048c05ae59ab4257296b1992cd4925afc9257cdf3a0306d5a68094bc02",
            "file": "src/app/demo/components/uikit/media/mediademo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./mediademo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "carouselResponsiveOptions",
                    "defaultValue": "[\n        {\n            breakpoint: '1024px',\n            numVisible: 3,\n            numScroll: 3\n        },\n        {\n            breakpoint: '768px',\n            numVisible: 2,\n            numScroll: 2\n        },\n        {\n            breakpoint: '560px',\n            numVisible: 1,\n            numScroll: 1\n        }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "galleriaResponsiveOptions",
                    "defaultValue": "[\n        {\n            breakpoint: '1024px',\n            numVisible: 5\n        },\n        {\n            breakpoint: '960px',\n            numVisible: 4\n        },\n        {\n            breakpoint: '768px',\n            numVisible: 3\n        },\n        {\n            breakpoint: '560px',\n            numVisible: 1\n        }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/demo/service/product.service';\nimport { PhotoService } from 'src/app/demo/service/photo.service';\nimport { Product } from 'src/app/demo/api/product';\n\n@Component({\n    templateUrl: './mediademo.component.html'\n})\nexport class MediaDemoComponent implements OnInit {\n\n    products!: Product[];\n\n    images!: any[];\n\n    galleriaResponsiveOptions: any[] = [\n        {\n            breakpoint: '1024px',\n            numVisible: 5\n        },\n        {\n            breakpoint: '960px',\n            numVisible: 4\n        },\n        {\n            breakpoint: '768px',\n            numVisible: 3\n        },\n        {\n            breakpoint: '560px',\n            numVisible: 1\n        }\n    ];\n\n    carouselResponsiveOptions: any[] = [\n        {\n            breakpoint: '1024px',\n            numVisible: 3,\n            numScroll: 3\n        },\n        {\n            breakpoint: '768px',\n            numVisible: 2,\n            numScroll: 2\n        },\n        {\n            breakpoint: '560px',\n            numVisible: 1,\n            numScroll: 1\n        }\n    ];\n\n    constructor(private productService: ProductService, private photoService: PhotoService) { }\n\n    ngOnInit() {\n        this.productService.getProductsSmall().then(products => {\n            this.products = products;\n        });\n\n        this.photoService.getImages().then(images => {\n            this.images = images;\n        });\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "photoService",
                        "type": "PhotoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "photoService",
                        "type": "PhotoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Carousel</h5>\n            <p-carousel [value]=\"products\" [numVisible]=\"3\" [numScroll]=\"3\" [circular]=\"false\" [responsiveOptions]=\"carouselResponsiveOptions\">\n                <ng-template let-product pTemplate=\"item\">\n                        <div class=\"border-round m-2 text-center p-2\" style=\"border: 1px solid var(--surface-d)\">\n                            <div class=\"my-5\">\n                                <img src=\"assets/demo/images/product/{{product.image}}\" [alt]=\"product.name\" class=\"shadow-4\" width=\"50%\"/>\n                            </div>\n                            <div>\n                                <h5 class=\"mb-1\">{{product.name}}</h5>\n                                <h6 class=\"mt-0 mb-3\">${{product.price}}</h6>\n                                <span [class]=\"'product-badge status-'+product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\n                                <div class=\"my-5\">\n                                    <button pButton pRipple icon=\"pi pi-search\" class=\"mr-2 p-button-rounded\"></button>\n                                    <button pButton pRipple icon=\"pi pi-star-fill\" class=\"mr-2 p-button-rounded p-button-success\"></button>\n                                    <button pButton pRipple icon=\"pi pi-cog\" class=\"p-button-rounded p-button-info\"></button>\n                                </div>\n                            </div>\n                        </div>\n                </ng-template>\n            </p-carousel>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Image</h5>\n            <div class=\"flex justify-content-center\">\n                <p-image src=\"assets/demo/images/galleria/galleria10.jpg\" alt=\"Image\" width=\"250\" [preview]=\"true\"></p-image>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Galleria</h5>\n            <p-galleria [value]=\"images\" [responsiveOptions]=\"galleriaResponsiveOptions\"\n                        [containerStyle]=\"{'max-width': '800px', 'margin':'auto'}\" [numVisible]=\"6\" [circular]=\"true\">\n                <ng-template pTemplate=\"item\" let-item>\n                    <img [src]=\"item.itemImageSrc\" style=\"width: 100%; display: block;\"/>\n                </ng-template>\n                <ng-template pTemplate=\"thumbnail\" let-item>\n                    <div class=\"grid nogutter justify-center\">\n                        <img [src]=\"item.thumbnailImageSrc\" style=\"display: block;\"/>\n                    </div>\n                </ng-template>\n            </p-galleria>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "MenusComponent",
            "id": "component-MenusComponent-aa5018473641a9a89874769d02ad739ba1a2e56e958daf552a20811a6704292d16fcd871191fcbc562702a48bd4bb00c04071215f655d1cb1ec09d847874cd77",
            "file": "src/app/demo/components/uikit/menus/menus.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n        :host ::ng-deep .p-menubar-root-list {\n            flex-wrap: wrap;\n        }\n    "
            ],
            "templateUrl": [
                "./menus.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "megaMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MegaMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "panelMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "plainMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "routeItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "slideItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "stepsItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "tieredItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MegaMenuItem, MenuItem } from 'primeng/api';\n\n@Component({\n    templateUrl: './menus.component.html',\n    styles: [`\n        :host ::ng-deep .p-menubar-root-list {\n            flex-wrap: wrap;\n        }\n    `]\n})\nexport class MenusComponent implements OnInit {\n\n    breadcrumbItems: MenuItem[] = [];\n\n    tieredItems: MenuItem[] = [];\n\n    items: MenuItem[] = [];\n\n    routeItems: MenuItem[] = [];\n\n    megaMenuItems: MegaMenuItem[] = [];\n\n    panelMenuItems: MenuItem[] = [];\n\n    stepsItems: MenuItem[] = [];\n\n    slideItems: MenuItem[] = [];\n\n    menuItems: MenuItem[] = [];\n\n    plainMenuItems: MenuItem[] = [];\n\n    pageIndex: number = 0;\n\n    ngOnInit() {\n        this.tieredItems = [\n            {\n                label: 'Customers',\n                icon: 'pi pi-fw pi-table',\n                items: [\n                    {\n                        label: 'New',\n                        icon: 'pi pi-fw pi-plus',\n                        items: [\n                            {\n                                label: 'Customer',\n                                icon: 'pi pi-fw pi-plus'\n                            },\n                            {\n                                label: 'Duplicate',\n                                icon: 'pi pi-fw pi-copy'\n                            },\n\n                        ]\n                    },\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-user-edit'\n                    }\n                ]\n            },\n            {\n                label: 'Orders',\n                icon: 'pi pi-fw pi-shopping-cart',\n                items: [\n                    {\n                        label: 'View',\n                        icon: 'pi pi-fw pi-list'\n                    },\n                    {\n                        label: 'Search',\n                        icon: 'pi pi-fw pi-search'\n                    }\n\n                ]\n            },\n            {\n                label: 'Shipments',\n                icon: 'pi pi-fw pi-envelope',\n                items: [\n                    {\n                        label: 'Tracker',\n                        icon: 'pi pi-fw pi-compass',\n\n                    },\n                    {\n                        label: 'Map',\n                        icon: 'pi pi-fw pi-map-marker',\n\n                    },\n                    {\n                        label: 'Manage',\n                        icon: 'pi pi-fw pi-pencil'\n                    }\n                ]\n            },\n            {\n                label: 'Profile',\n                icon: 'pi pi-fw pi-user',\n                items: [\n                    {\n                        label: 'Settings',\n                        icon: 'pi pi-fw pi-cog'\n                    },\n                    {\n                        label: 'Billing',\n                        icon: 'pi pi-fw pi-file'\n                    }\n                ]\n            },\n            { separator: true },\n            {\n                label: 'Quit',\n                icon: 'pi pi-fw pi-sign-out'\n            }\n        ];\n\n        this.items = [\n            {\n                label: 'Customers',\n                items: [\n                    {\n                        label: 'New',\n                        icon: 'pi pi-fw pi-plus'\n                    },\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-user-edit'\n                    }\n                ]\n            },\n            {\n                label: 'Orders',\n                items: [\n                    {\n                        label: 'View',\n                        icon: 'pi pi-fw pi-list'\n                    },\n                    {\n                        label: 'Search',\n                        icon: 'pi pi-fw pi-search'\n                    }\n\n                ]\n            },\n            {\n                label: 'Shipments',\n                items: [\n                    {\n                        label: 'Tracker',\n                        icon: 'pi pi-fw pi-compass',\n\n                    },\n                    {\n                        label: 'Map',\n                        icon: 'pi pi-fw pi-map-marker',\n\n                    },\n                    {\n                        label: 'Manage',\n                        icon: 'pi pi-fw pi-pencil'\n                    }\n                ]\n            }\n        ];\n\n        this.menuItems = [\n            {\n                label: 'Save', icon: 'pi pi-fw pi-check'\n            },\n            {\n                label: 'Update', icon: 'pi pi-fw pi-refresh'\n            },\n            {\n                label: 'Delete', icon: 'pi pi-fw pi-trash'\n            },\n            {\n                separator: true\n            },\n            {\n                label: 'Home', icon: 'pi pi-fw pi-home'\n            },\n        ];\n\n        this.slideItems = [\n            {\n                label: 'Customers',\n                icon: 'pi pi-fw pi-table',\n                items: [\n                    {\n                        label: 'New',\n                        icon: 'pi pi-fw pi-plus'\n                    },\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-user-edit'\n                    }\n                ]\n            },\n            {\n                label: 'Orders',\n                icon: 'pi pi-fw pi-shopping-cart',\n                items: [\n                    {\n                        label: 'View',\n                        icon: 'pi pi-fw pi-list'\n                    },\n                    {\n                        label: 'Search',\n                        icon: 'pi pi-fw pi-search'\n                    }\n\n                ]\n            },\n            {\n                label: 'Shipments',\n                icon: 'pi pi-fw pi-envelope',\n                items: [\n                    {\n                        label: 'Tracker',\n                        icon: 'pi pi-fw pi-compass',\n\n                    },\n                    {\n                        label: 'Map',\n                        icon: 'pi pi-fw pi-map-marker',\n\n                    },\n                    {\n                        label: 'Manage',\n                        icon: 'pi pi-fw pi-pencil'\n                    }\n                ]\n            },\n            {\n                label: 'Profile',\n                icon: 'pi pi-fw pi-user',\n                items: [\n                    {\n                        label: 'Settings',\n                        icon: 'pi pi-fw pi-cog'\n                    },\n                    {\n                        label: 'Billing',\n                        icon: 'pi pi-fw pi-file'\n                    }\n                ]\n            }\n        ];\n\n        this.plainMenuItems = [\n            {\n                label: 'Customers',\n                items: [\n                    {\n                        label: 'New',\n                        icon: 'pi pi-fw pi-plus'\n                    },\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-user-edit'\n                    }\n                ]\n            },\n            {\n                label: 'Orders',\n                items: [\n                    {\n                        label: 'View',\n                        icon: 'pi pi-fw pi-list'\n                    },\n                    {\n                        label: 'Search',\n                        icon: 'pi pi-fw pi-search'\n                    }\n\n                ]\n            }\n        ];\n\n        this.breadcrumbItems = [];\n        this.breadcrumbItems.push({ label: 'Electronics' });\n        this.breadcrumbItems.push({ label: 'Computer' });\n        this.breadcrumbItems.push({ label: 'Notebook' });\n        this.breadcrumbItems.push({ label: 'Accessories' });\n        this.breadcrumbItems.push({ label: 'Backpacks' });\n        this.breadcrumbItems.push({ label: 'Item' });\n\n        this.routeItems = [\n            { label: 'Personal', routerLink: 'personal' },\n            { label: 'Seat', routerLink: 'seat' },\n            { label: 'Payment', routerLink: 'payment' },\n            { label: 'Confirmation', routerLink: 'confirmation' },\n        ];\n\n        this.megaMenuItems = [\n            {\n                label: 'Fashion', icon: 'pi pi-fw pi-tag',\n                items: [\n                    [\n                        {\n                            label: 'Women',\n                            items: [{ label: 'Women Item' }, { label: 'Women Item' }, { label: 'Women Item' }]\n                        },\n                        {\n                            label: 'Men',\n                            items: [{ label: 'Men Item' }, { label: 'Men Item' }, { label: 'Men Item' }]\n                        }\n                    ],\n                    [\n                        {\n                            label: 'Kids',\n                            items: [{ label: 'Kids Item' }, { label: 'Kids Item' }]\n                        },\n                        {\n                            label: 'Luggage',\n                            items: [{ label: 'Luggage Item' }, { label: 'Luggage Item' }, { label: 'Luggage Item' }]\n                        }\n                    ]\n                ]\n            },\n            {\n                label: 'Electronics', icon: 'pi pi-fw pi-desktop',\n                items: [\n                    [\n                        {\n                            label: 'Computer',\n                            items: [{ label: 'Computer Item' }, { label: 'Computer Item' }]\n                        },\n                        {\n                            label: 'Camcorder',\n                            items: [{ label: 'Camcorder Item' }, { label: 'Camcorder Item' }, { label: 'Camcorder Item' }]\n                        }\n                    ],\n                    [\n                        {\n                            label: 'TV',\n                            items: [{ label: 'TV Item' }, { label: 'TV Item' }]\n                        },\n                        {\n                            label: 'Audio',\n                            items: [{ label: 'Audio Item' }, { label: 'Audio Item' }, { label: 'Audio Item' }]\n                        }\n                    ],\n                    [\n                        {\n                            label: 'Sports.7',\n                            items: [{ label: 'Sports.7.1' }, { label: 'Sports.7.2' }]\n                        }\n                    ]\n                ]\n            },\n            {\n                label: 'Furniture', icon: 'pi pi-fw pi-image',\n                items: [\n                    [\n                        {\n                            label: 'Living Room',\n                            items: [{ label: 'Living Room Item' }, { label: 'Living Room Item' }]\n                        },\n                        {\n                            label: 'Kitchen',\n                            items: [{ label: 'Kitchen Item' }, { label: 'Kitchen Item' }, { label: 'Kitchen Item' }]\n                        }\n                    ],\n                    [\n                        {\n                            label: 'Bedroom',\n                            items: [{ label: 'Bedroom Item' }, { label: 'Bedroom Item' }]\n                        },\n                        {\n                            label: 'Outdoor',\n                            items: [{ label: 'Outdoor Item' }, { label: 'Outdoor Item' }, { label: 'Outdoor Item' }]\n                        }\n                    ]\n                ]\n            },\n            {\n                label: 'Sports', icon: 'pi pi-fw pi-star',\n                items: [\n                    [\n                        {\n                            label: 'Basketball',\n                            items: [{ label: 'Basketball Item' }, { label: 'Basketball Item' }]\n                        },\n                        {\n                            label: 'Football',\n                            items: [{ label: 'Football Item' }, { label: 'Football Item' }, { label: 'Football Item' }]\n                        }\n                    ],\n                    [\n                        {\n                            label: 'Tennis',\n                            items: [{ label: 'Tennis Item' }, { label: 'Tennis Item' }]\n                        }\n                    ]\n                ]\n            },\n        ];\n\n        this.panelMenuItems = [\n            {\n                label: 'Customers',\n                items: [\n                    {\n                        label: 'New',\n                        icon: 'pi pi-fw pi-plus',\n                        items: [\n                            {\n                                label: 'Customer',\n                                icon: 'pi pi-fw pi-plus'\n                            },\n                            {\n                                label: 'Duplicate',\n                                icon: 'pi pi-fw pi-copy'\n                            },\n\n                        ]\n                    },\n                    {\n                        label: 'Edit',\n                        icon: 'pi pi-fw pi-user-edit'\n                    }\n                ]\n            },\n            {\n                label: 'Orders',\n                items: [\n                    {\n                        label: 'View',\n                        icon: 'pi pi-fw pi-list'\n                    },\n                    {\n                        label: 'Search',\n                        icon: 'pi pi-fw pi-search'\n                    }\n\n                ]\n            },\n            {\n                label: 'Shipments',\n                items: [\n                    {\n                        label: 'Tracker',\n                        icon: 'pi pi-fw pi-compass',\n\n                    },\n                    {\n                        label: 'Map',\n                        icon: 'pi pi-fw pi-map-marker',\n\n                    },\n                    {\n                        label: 'Manage',\n                        icon: 'pi pi-fw pi-pencil'\n                    }\n                ]\n            },\n            {\n                label: 'Profile',\n                items: [\n                    {\n                        label: 'Settings',\n                        icon: 'pi pi-fw pi-cog'\n                    },\n                    {\n                        label: 'Billing',\n                        icon: 'pi pi-fw pi-file'\n                    }\n                ]\n            }\n        ];\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        :host ::ng-deep .p-menubar-root-list {\n            flex-wrap: wrap;\n        }\n    \n",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\n    <div class=\"col-12\">\n        <div class=\"card card-w-title\">\n            <h5>MenuBar</h5>\n            <p-menubar [model]=\"tieredItems\">\n                <ng-template pTemplate=\"end\">\n                    <span class=\"p-input-icon-right\">\n                        <input type=\"text\" pInputText placeholder=\"Search\">\n                        <i class=\"pi pi-search\"></i>\n                    </span>\n                </ng-template>\n            </p-menubar>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card card-w-title\">\n            <h5>Breadcrumb</h5>\n            <p-breadcrumb [model]=\"breadcrumbItems\" [home]=\"{icon: 'pi pi-home'}\"></p-breadcrumb>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card card-w-title flex flex-wrap\">\n            <div class=\"col-12 md:col-8 h-full\">\n                <h5>TabMenu</h5>\n                <p-tabMenu styleClass=\"mb-5\" [model]=\"routeItems\"></p-tabMenu>\n\n                <h5>Steps</h5>\n                <p-steps [model]=\"routeItems\" styleClass=\"mt-5\" [readonly]=\"false\"></p-steps>\n            </div>\n            <div class=\"col-12 md:col-4 mt-5 md:mt-0\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-4\">\n        <div class=\"card card-w-title\">\n            <h5>TieredMenu</h5>\n            <p-tieredMenu [model]=\"tieredItems\"></p-tieredMenu>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-4\">\n        <div class=\"card card-w-title\">\n            <h5>Plain Menu</h5>\n            <p-menu [model]=\"plainMenuItems\"></p-menu>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-4\">\n\n        <div class=\"card card-w-title\">\n            <h5>Overlay Menu</h5>\n\n            <p-menu #menu [popup]=\"true\" [model]=\"menuItems\"></p-menu>\n            <button type=\"button\" pButton icon=\"pi pi-chevron-down\" label=\"Options\" (click)=\"menu.toggle($event)\" style=\"width:auto\"></button>\n        </div>\n\n        <div class=\"card card-w-title\" #anchor>\n            <h5>ContextMenu</h5>\n            Right click to display.\n            <p-contextMenu [target]=\"anchor\" [model]=\"menuItems\"></p-contextMenu>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card card-w-title\">\n            <h5>MegaMenu - Horizontal</h5>\n            <p-megaMenu [model]=\"megaMenuItems\"></p-megaMenu>\n\n            <h5>MegaMenu - Vertical</h5>\n            <p-megaMenu [model]=\"megaMenuItems\" orientation=\"vertical\" [style]=\"{'width':'200px'}\"></p-megaMenu>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card card-w-title\">\n            <h5>PanelMenu</h5>\n            <p-panelMenu [model]=\"panelMenuItems\"></p-panelMenu>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "MessagesDemoComponent",
            "id": "component-MessagesDemoComponent-5e854c35b0692d993dc989469f0f68132802eb47061373ff3988c79bb87e8ed5d8189ed893a0dc0ea5a528a089e9cb752902fd18b81c8b9274ffdaf4b7f6dde9",
            "file": "src/app/demo/components/uikit/messages/messagesdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./messagesdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "showErrorViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showErrorViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showInfoViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showInfoViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSuccessViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSuccessViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showWarnViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showWarnViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Message, MessageService } from 'primeng/api';\n\n@Component({\n    templateUrl: './messagesdemo.component.html',\n    providers: [MessageService]\n})\nexport class MessagesDemoComponent {\n\n    msgs: Message[] = [];\n\n    constructor(private service: MessageService) { }\n\n    showInfoViaToast() {\n        this.service.add({ key: 'tst', severity: 'info', summary: 'Info Message', detail: 'PrimeNG rocks' });\n    }\n\n    showWarnViaToast() {\n        this.service.add({ key: 'tst', severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes' });\n    }\n\n    showErrorViaToast() {\n        this.service.add({ key: 'tst', severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\n    }\n\n    showSuccessViaToast() {\n        this.service.add({ key: 'tst', severity: 'success', summary: 'Success Message', detail: 'Message sent' });\n    }\n\n    showInfoViaMessages() {\n        this.msgs = [];\n        this.msgs.push({ severity: 'info', summary: 'Info Message', detail: 'PrimeNG rocks' });\n    }\n\n    showWarnViaMessages() {\n        this.msgs = [];\n        this.msgs.push({ severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes' });\n    }\n\n    showErrorViaMessages() {\n        this.msgs = [];\n        this.msgs.push({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\n    }\n\n    showSuccessViaMessages() {\n        this.msgs = [];\n        this.msgs.push({ severity: 'success', summary: 'Success Message', detail: 'Message sent' });\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Toast</h5>\n            <p-toast key=\"tst\"></p-toast>\n            <div class=\"flex flex-wrap gap-2\">\n                <button type=\"button\" pButton (click)=\"showSuccessViaToast()\" label=\"Success\" class=\"p-button-success\"></button>\n                <button type=\"button\" pButton (click)=\"showInfoViaToast()\" label=\"Info\" class=\"p-button-info\"></button>\n                <button type=\"button\" pButton (click)=\"showWarnViaToast()\" label=\"Warn\" class=\"p-button-warning\"></button>\n                <button type=\"button\" pButton (click)=\"showErrorViaToast()\" label=\"Error\" class=\"p-button-danger\"></button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card z-3\">\n            <h5>Messages</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <button type=\"button\" pButton (click)=\"showSuccessViaMessages()\" label=\"Success\" class=\"p-button-success\"></button>\n                <button type=\"button\" pButton (click)=\"showInfoViaMessages()\" label=\"Info\" class=\"p-button-info\"></button>\n                <button type=\"button\" pButton (click)=\"showWarnViaMessages()\" label=\"Warn\" class=\"p-button-warning\"></button>\n                <button type=\"button\" pButton (click)=\"showErrorViaMessages()\" label=\"Error\" class=\"p-button-danger\"></button>\n            </div>\n\n            <p-messages [value]=\"msgs\"></p-messages>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-8\">\n        <div class=\"card\">\n            <h5>Inline</h5>\n            <div class=\"flex align-items-center flex-wrap gap-2 mb-3\">\n                <label for=\"username\" class=\"w-9rem\">Username</label>\n                <input id=\"username\" type=\"text\" #username pInputText placeholder=\"Username\" class=\"ng-dirty ng-invalid\">\n                <p-message severity=\"error\" text=\"Field is required\"></p-message>\n            </div>\n\n            <div class=\"flex align-items-center flex-wrap gap-2\">\n                <label for=\"email\" class=\"w-9rem\">Email</label>\n                <input type=\"text\" #email pInputText placeholder=\"Email\" label=\"email\" class=\"ng-dirty ng-invalid\">\n                <p-message severity=\"error\"></p-message>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-4\">\n        <div class=\"card\">\n            <h5>Help Text</h5>\n            <div class=\"field p-fluid\">\n                <label for=\"username2\">Username</label>\n                <input id=\"username2\" type=\"username\" aria-describedby=\"username-help\" class=\"ng-dirty ng-invalid\" pInputText />\n                <small id=\"username-help\" class=\"p-error\">Enter your username to reset your password.</small>\n            </div>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "MiscDemoComponent",
            "id": "component-MiscDemoComponent-88a907e7a8fb6de7828a53af79c1c3c5c58c5893eeb5926ca2a4cd176b8f49ee1daef664b01f7f6251799daa378cac3bf45fae9b86e67454eca03ebd6cc477a0",
            "file": "src/app/demo/components/uikit/misc/miscdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./miscdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n    templateUrl: './miscdemo.component.html'\n})\nexport class MiscDemoComponent implements OnInit, OnDestroy {\n\n    value = 0;\n\n    interval: any;\n\n    ngOnInit() {\n        this.interval = setInterval(() => {\n            this.value = this.value + Math.floor(Math.random() * 10) + 1;\n            if (this.value >= 100) {\n                this.value = 100;\n                clearInterval(this.interval);\n            }\n        }, 2000);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.interval);\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>ProgressBar</h5>\n            <div class=\"grid\">\n                <div class=\"col\">\n                    <p-progressBar [value]=\"value\" [showValue]=\"true\"></p-progressBar>\n                </div>\n                <div class=\"col\">\n                    <p-progressBar [value]=\"50\" [showValue]=\"false\"></p-progressBar>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h4>Badge</h4>\n            <h5>Numbers</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <p-badge value=\"2\"></p-badge>\n                <p-badge value=\"8\" severity=\"success\"></p-badge>\n                <p-badge value=\"4\" severity=\"info\"></p-badge>\n                <p-badge value=\"12\" severity=\"warning\"></p-badge>\n                <p-badge value=\"3\" severity=\"danger\"></p-badge>\n            </div>\n\n            <h5>Positioned Badge</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <i class=\"pi pi-bell mr-4 p-text-secondary\" pBadge style=\"font-size: 2rem\" value=\"2\"></i>\n                <i class=\"pi pi-calendar mr-4 p-text-secondary\" pBadge style=\"font-size: 2rem\" [value]=\"'10+'\" severity=\"danger\"></i>\n                <i class=\"pi pi-envelope p-text-secondary\" pBadge style=\"font-size: 2rem\" severity=\"danger\"></i>\n            </div>\n\n\n            <h5>Inline Button Badge</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <p-button label=\"Emails\" badge=\"8\"></p-button>\n                <p-button label=\"Messages\" icon=\"pi pi-users\" styleClass=\"p-button-warning\" badge=\"8\" badgeClass=\"p-badge-danger\"></p-button>\n            </div>\n\n\n            <h5>Sizes</h5>\n            <div class=\"flex flex-wrap gap-2 align-items-end\">\n                <p-badge value=\"2\"></p-badge>\n                <p-badge value=\"4\" size=\"large\" severity=\"warning\"></p-badge>\n                <p-badge value=\"6\" size=\"xlarge\" severity=\"success\"></p-badge>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <h4>Avatar</h4>\n            <h5>Avatar Group</h5>\n            <p-avatarGroup styleClass=\"mb-3\">\n                <p-avatar image=\"assets/demo/images/avatar/amyelsner.png\" size=\"large\" shape=\"circle\"></p-avatar>\n                <p-avatar image=\"assets/demo/images/avatar/asiyajavayant.png\" size=\"large\" shape=\"circle\"></p-avatar>\n                <p-avatar image=\"assets/demo/images/avatar/onyamalimba.png\" size=\"large\" shape=\"circle\"></p-avatar>\n                <p-avatar image=\"assets/demo/images/avatar/ionibowcher.png\" size=\"large\" shape=\"circle\"></p-avatar>\n                <p-avatar image=\"assets/demo/images/avatar/xuxuefeng.png\" size=\"large\"shape=\"circle\"></p-avatar>\n                <p-avatar label=\"+2\" shape=\"circle\" size=\"large\" [style]=\"{'background-color':'#9c27b0', 'color': '#ffffff'}\"></p-avatar>\n            </p-avatarGroup>\n\n            <h5>Label - Circle</h5>\n            <div class=\"flex flex-wrap gap-2 align-items-end\">\n                <p-avatar label=\"P\" size=\"xlarge\" shape=\"circle\"></p-avatar>\n                <p-avatar label=\"V\" size=\"large\" [style]=\"{'background-color':'#2196F3', 'color': '#ffffff'}\" shape=\"circle\"></p-avatar>\n                <p-avatar label=\"U\" [style]=\"{'background-color': '#9c27b0', 'color': '#ffffff'}\" shape=\"circle\"></p-avatar>\n            </div>\n\n            <h5>Icon - Badge</h5>\n            <p-avatar icon=\"pi pi-user\" pBadge value=\"4\" severity=\"success\" size=\"xlarge\"></p-avatar>\n        </div>\n\n        <div class=\"card\">\n            <h4>ScrollTop</h4>\n            <p-scrollPanel [style]=\"{width: '250px', height: '200px'}\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                    Vitae et leo duis ut diam.\n                    Ultricies mi quis hendrerit dolor magna eget est lorem. Amet consectetur adipiscing elit ut.\n                    Nam libero justo laoreet sit amet. Pharetra massa massa ultricies mi quis hendrerit dolor magna.\n                    Est ultricies integer quis auctor elit sed vulputate. Consequat ac felis donec et. Tellus orci ac auctor augue mauris.\n                    Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus a. Tincidunt arcu non sodales neque sodales.\n                    Metus aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices. Sodales ut etiam sit amet nisl purus.\n                    Cursus sit amet dictum sit amet. Tristique senectus et netus et malesuada fames ac turpis egestas.\n                    Et tortor consequat id porta nibh venenatis cras sed. Diam maecenas ultricies mi eget mauris.\n                    Eget egestas purus viverra accumsan in nisl nisi. Suscipit adipiscing bibendum est ultricies integer.\n                    Mattis aliquam faucibus purus in massa tempor nec.\n                </p>\n                <p-scrollTop target=\"parent\" styleClass=\"custom-scrolltop\" [threshold]=\"100\" icon=\"pi pi-arrow-up\"></p-scrollTop>\n            </p-scrollPanel>\n        </div>\n    </div>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h4>Tag</h4>\n            <h5>Tags</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <p-tag value=\"Primary\"></p-tag>\n                <p-tag severity=\"success\" value=\"Success\"></p-tag>\n                <p-tag severity=\"info\" value=\"Info\"></p-tag>\n                <p-tag severity=\"warning\" value=\"Warning\"></p-tag>\n                <p-tag severity=\"danger\" value=\"Danger\"></p-tag>\n            </div>\n\n            <h5>Pills</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <p-tag value=\"Primary\" [rounded]=\"true\"></p-tag>\n                <p-tag severity=\"success\" value=\"Success\" [rounded]=\"true\"></p-tag>\n                <p-tag severity=\"info\" value=\"Info\" [rounded]=\"true\"></p-tag>\n                <p-tag severity=\"warning\" value=\"Warning\" [rounded]=\"true\"></p-tag>\n                <p-tag severity=\"danger\" value=\"Danger\" [rounded]=\"true\"></p-tag>\n            </div>\n\n            <h5>Icons</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <p-tag icon=\"pi pi-user\" value=\"Primary\"></p-tag>\n                <p-tag icon=\"pi pi-check\" severity=\"success\" value=\"Success\"></p-tag>\n                <p-tag icon=\"pi pi-info-circle\" severity=\"info\" value=\"Info\"></p-tag>\n                <p-tag con=\"pi pi-exclamation-triangle\" severity=\"warning\" value=\"Warning\"></p-tag>\n                <p-tag icon=\"pi pi-times\" severity=\"danger\" value=\"Danger\"></p-tag>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <h4>Chip</h4>\n            <h5>Basic</h5>\n            <div class=\"flex flex-wrap align-items-center\">\n                <p-chip label=\"Action\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Comedy\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Mystery\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Thriller\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\n            </div>\n\n            <h5>Icon</h5>\n            <div class=\"flex flex-wrap align-items-center\">\n                <p-chip label=\"Apple\" icon=\"pi pi-apple\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Facebook\" icon=\"pi pi-facebook\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Google\" icon=\"pi pi-google\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Microsoft\" icon=\"pi pi-microsoft\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\n            </div>\n\n            <h5>Image</h5>\n            <div class=\"flex flex-wrap align-items-center\">\n                <p-chip label=\"Amy Elsner\" image=\"assets/demo/images/avatar/amyelsner.png\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Asiya Javayant\" image=\"assets/demo/images/avatar/asiyajavayant.png\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" styleClass=\"m-1\"></p-chip>\n                <p-chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\n            </div>\n\n            <h5>Styling</h5>\n            <div class=\"flex flex-wrap align-items-center\">\n                <p-chip label=\"Action\" styleClass=\"m-1 custom-chip\"></p-chip>\n                <p-chip label=\"Comedy\" styleClass=\"m-1 custom-chip\"></p-chip>\n                <p-chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" styleClass=\"m-1 custom-chip\"></p-chip>\n                <p-chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" [removable]=\"true\" styleClass=\"m-1 custom-chip\"></p-chip>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <h4>Skeleton</h4>\n            <div class=\"border-round border-1 surface-border p-4\">\n                <div class=\"flex mb-3\">\n                    <p-skeleton shape=\"circle\" size=\"4rem\" styleClass=\"mr-2\"></p-skeleton>\n                    <div>\n                        <p-skeleton width=\"10rem\" styleClass=\"mb-2\"></p-skeleton>\n                        <p-skeleton width=\"5rem\" styleClass=\"mb-2\"></p-skeleton>\n                        <p-skeleton height=\".5rem\"></p-skeleton>\n                    </div>\n                </div>\n                <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\n                <div class=\"flex justify-content-between mt-3\">\n                    <p-skeleton width=\"4rem\" height=\"2rem\"></p-skeleton>\n                    <p-skeleton width=\"4rem\" height=\"2rem\"></p-skeleton>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "NotfoundComponent",
            "id": "component-NotfoundComponent-e6413b941a813360611100d299de581b39b504911d5e14aef29abcfa4c794eacd18079dc612ca916fd6c4cda5315bd0d5d889ee26bede7b67021f42dd5e0ed25",
            "file": "src/app/demo/components/notfound/notfound.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notfound",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notfound.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-notfound',\n    templateUrl: './notfound.component.html',\n})\nexport class NotfoundComponent { }",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <img src=\"assets/demo/images/notfound/logo-blue.svg\" alt=\"Sakai logo\" class=\"mb-5 w-6rem flex-shrink-0\">\n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, rgba(33, 150, 243, 0.4) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8 flex flex-column align-items-center\" style=\"border-radius:53px\">\n                <span class=\"text-blue-500 font-bold text-3xl\">404</span>\n                <h1 class=\"text-900 font-bold text-3xl lg:text-5xl mb-2\">Not Found</h1>\n                <div class=\"text-600 mb-5\">Requested resource is not available.</div>\n                <a [routerLink]=\"['/']\" class=\"w-full flex align-items-center py-5 border-300 border-bottom-1\">\n                    <span class=\"flex justify-content-center align-items-center bg-cyan-400 border-round\" style=\"height:3.5rem; width:3.5rem;\">\n                        <i class=\"text-50 pi pi-fw pi-table text-2xl\"></i>\n                    </span>\n                    <span class=\"ml-4 flex flex-column\">\n                        <span class=\"text-900 lg:text-xl font-medium mb-0 block\">Frequently Asked Questions</span>\n                        <span class=\"text-600 lg:text-xl\">Ultricies mi quis hendrerit dolor.</span>\n                    </span>\n                </a>\n                <a [routerLink]=\"['/']\" class=\"w-full flex align-items-center py-5 border-300 border-bottom-1\">\n                    <span class=\"flex justify-content-center align-items-center bg-orange-400 border-round\" style=\"height:3.5rem; width:3.5rem;\">\n                        <i class=\"pi pi-fw pi-question-circle text-50 text-2xl\"></i>\n                    </span>\n                    <span class=\"ml-4 flex flex-column\">\n                        <span class=\"text-900 lg:text-xl font-medium mb-0\">Solution Center</span>\n                        <span class=\"text-600 lg:text-xl\">Phasellus faucibus scelerisque eleifend.</span>\n                    </span>\n                </a>\n                <a [routerLink]=\"['/']\" class=\"w-full flex align-items-center mb-5 py-5 border-300 border-bottom-1\">\n                    <span class=\"flex justify-content-center align-items-center bg-indigo-400 border-round\" style=\"height:3.5rem; width:3.5rem;\">\n                        <i class=\"pi pi-fw pi-unlock text-50 text-2xl\"></i>\n                    </span>\n                    <span class=\"ml-4 flex flex-column\">\n                        <span class=\"text-900 lg:text-xl font-medium mb-0\">Permission Manager</span>\n                        <span class=\"text-600 lg:text-xl\">Accumsan in nisl nisi scelerisque</span>\n                    </span>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "OverlaysDemoComponent",
            "id": "component-OverlaysDemoComponent-c616c8be8e63be64a284367bc38bf46c125855f7e2d95f63bc00984dcc306b349dea6d4d8c6b3045c9d749782eac4e55a016211b9524a456a3724acccb116cdc",
            "file": "src/app/demo/components/uikit/overlays/overlaysdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService",
                    "type": "injectable"
                },
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./overlaysdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedProduct",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "visibleSidebar1",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "visibleSidebar2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "visibleSidebar3",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "visibleSidebar4",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "visibleSidebar5",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "confirm1",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirm2",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Product } from 'src/app/demo/api/product';\nimport { ProductService } from 'src/app/demo/service/product.service';\n\n@Component({\n    templateUrl: './overlaysdemo.component.html',\n    providers: [ConfirmationService, MessageService]\n})\nexport class OverlaysDemoComponent implements OnInit {\n\n    images: any[] = [];\n\n    display: boolean = false;\n\n    products: Product[] = [];\n\n    selectedProduct: Product = {};\n\n    visibleSidebar1: boolean = false;\n\n    visibleSidebar2: boolean = false;\n\n    visibleSidebar3: boolean = false;\n\n    visibleSidebar4: boolean = false;\n\n    visibleSidebar5: boolean = false;\n\n    constructor(private productService: ProductService, private confirmationService: ConfirmationService, private messageService: MessageService) { }\n\n    ngOnInit() {\n        this.productService.getProductsSmall().then(products => this.products = products);\n\n        this.images = [];\n        this.images.push({\n            source: 'assets/demo/images/sopranos/sopranos1.jpg',\n            thumbnail: 'assets/demo/images/sopranos/sopranos1_small.jpg', title: 'Sopranos 1'\n        });\n        this.images.push({\n            source: 'assets/demo/images/sopranos/sopranos2.jpg',\n            thumbnail: 'assets/demo/images/sopranos/sopranos2_small.jpg', title: 'Sopranos 2'\n        });\n        this.images.push({\n            source: 'assets/demo/images/sopranos/sopranos3.jpg',\n            thumbnail: 'assets/demo/images/sopranos/sopranos3_small.jpg', title: 'Sopranos 3'\n        });\n        this.images.push({\n            source: 'assets/demo/images/sopranos/sopranos4.jpg',\n            thumbnail: 'assets/demo/images/sopranos/sopranos4_small.jpg', title: 'Sopranos 4'\n        });\n    }\n\n    confirm1() {\n        this.confirmationService.confirm({\n            key: 'confirm1',\n            message: 'Are you sure to perform this action?'\n        });\n    }\n\n    confirm2(event: Event) {\n        this.confirmationService.confirm({\n            key: 'confirm2',\n            target: event.target || new EventTarget,\n            message: 'Are you sure that you want to proceed?',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n                this.messageService.add({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' });\n            },\n            reject: () => {\n                this.messageService.add({ severity: 'error', summary: 'Rejected', detail: 'You have rejected' });\n            }\n        });\n    }\n\n    formatCurrency(value: number) {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n    <p-toast></p-toast>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Dialog</h5>\n            <p-dialog header=\"Dialog\" [(visible)]=\"display\" [modal]=\"true\" showEffect=\"fade\" [style]=\"{width: '30vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\n                <p class=\"line-height-3 m-0\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\n                    in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n                <ng-template pTemplate=\"footer\">\n                        <button pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Ok\" class=\"p-button-outlined\"></button>\n                </ng-template>\n            </p-dialog>\n            <div class=\"grid\">\n                <div class=\"col-12\">\n                    <button (click)=\"display=true\" pButton icon=\"pi pi-external-link\" label=\"Show\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card p-fluid\">\n            <h5>Overlay Panel</h5>\n            <div class=\"flex flex-wrap gap-2\">\n                <div>\n                    <button type=\"button\" pButton label=\"Image\" (click)=\"op1.toggle($event)\" class=\"p-button-success\"></button>\n                    <p-overlayPanel #op1 [showCloseIcon]=\"true\" [style]=\"{width: '450px'}\">\n                        <img src=\"assets/demo/images/nature/nature1.jpg\" alt=\"Nature 1\" style=\"width:100%\"/>\n                    </p-overlayPanel>\n                </div>\n                <div>\n                    <button type=\"button\" pButton label=\"DataTable\" (click)=\"op2.toggle($event)\" class=\"p-button-success\"></button>\n                    <p-overlayPanel #op2 [showCloseIcon]=\"true\" [style]=\"{width: '450px'}\">\n                        <ng-template pTemplate>\n                            <p-table [value]=\"products\" selectionMode=\"single\" [(selection)]=\"selectedProduct\" [paginator]=\"true\" [rows]=\"5\" (onRowSelect)=\"op2.hide()\" responsiveLayout=\"scroll\">\n                                <ng-template pTemplate=\"header\">\n                                    <tr>\n                                        <th style=\"min-width:12rem\" pSortableColumn=\"name\">Name<p-sortIcon field=\"name\"></p-sortIcon></th>\n                                        <th style=\"min-width:5rem\">Image</th>\n                                        <th style=\"min-width:8rem\" pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-rowData let-product>\n                                    <tr [pSelectableRow]=\"rowData\">\n                                        <td>{{product.name}}</td>\n                                        <td><img src=\"assets/demo/images/product/{{product.image}}\" [alt]=\"product.image\" width=\"50\" class=\"shadow-2\"/></td>\n                                        <td>{{formatCurrency(product.price)}}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n                        </ng-template>\n                    </p-overlayPanel>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card p-fluid\">\n            <h5>Confirmation</h5>\n            <p-confirmDialog header=\"Confirmation\" key=\"confirm1\" icon=\"pi pi-exclamation-triangle\" message=\"Are you sure you want to proceed?\"\n                             [style]=\"{width: '350px'}\" acceptButtonStyleClass=\"p-button-text\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\n            <div class=\"grid\">\n                <div class=\"col-12\">\n                    <button type=\"text\" (click)=\"confirm1()\" pButton icon=\"pi pi-trash\" label=\"Delete\" class=\"p-button-danger\" style=\"width:auto;\"></button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <h5>Sidebar</h5>\n            <p-sidebar [(visible)]=\"visibleSidebar1\" [baseZIndex]=\"10000\">\n                <h3 style=\"font-weight:normal\">Left Sidebar</h3>\n            </p-sidebar>\n\n            <p-sidebar [(visible)]=\"visibleSidebar2\" position=\"right\" [baseZIndex]=\"10000\">\n                <h3 style=\"font-weight:normal\">Right Sidebar</h3>\n            </p-sidebar>\n\n            <p-sidebar [(visible)]=\"visibleSidebar3\" position=\"top\" [baseZIndex]=\"10000\">\n                <h3 style=\"font-weight:normal\">Top Sidebar</h3>\n            </p-sidebar>\n\n            <p-sidebar [(visible)]=\"visibleSidebar4\" position=\"bottom\" [baseZIndex]=\"10000\">\n                <h3 style=\"font-weight:normal\">Bottom Sidebar</h3>\n            </p-sidebar>\n\n            <p-sidebar [(visible)]=\"visibleSidebar5\" [fullScreen]=\"true\" [baseZIndex]=\"10000\">\n                <h3 style=\"font-weight:normal\">Full Screen Sidebar</h3>\n            </p-sidebar>\n\n            <div class=\"flex flex-wrap gap-2\">\n                <button pButton type=\"button\" (click)=\"visibleSidebar1 = true\" icon=\"pi pi-arrow-right\" class=\"p-button-warning\"></button>\n                <button pButton type=\"button\" (click)=\"visibleSidebar2 = true\" icon=\"pi pi-arrow-left\" class=\"p-button-warning\"></button>\n                <button pButton type=\"button\" (click)=\"visibleSidebar3 = true\" icon=\"pi pi-arrow-down\" class=\"p-button-warning\"></button>\n                <button pButton type=\"button\" (click)=\"visibleSidebar4 = true\" icon=\"pi pi-arrow-up\" class=\"p-button-warning\"></button>\n                <button pButton type=\"button\" (click)=\"visibleSidebar5 = true\" icon=\"pi pi-external-link\" class=\"p-button-warning\"></button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Tooltip</h5>\n            <div class=\"flex align-items-center gap-2\">\n                <span>\n                    <label for=\"firstname5\" class=\"p-sr-only\">Username</label>\n                    <input id=\"firstname5\" type=\"text\" pInputText placeholder=\"Username\" pTooltip=\"Enter your username\">\n                </span>\n                <button pButton pRipple type=\"button\" label=\"Save\" icon=\"pi pi-check\" pTooltip=\"Click to proceed\"></button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>ConfirmPopup</h5>\n\n            <p-toast></p-toast>\n            <button (click)=\"confirm2($event)\" pButton icon=\"pi pi-check\" label=\"Confirm\"></button>\n            <p-confirmPopup key=\"confirm2\"></p-confirmPopup>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PanelsDemoComponent",
            "id": "component-PanelsDemoComponent-a28bc342ad38ad86469a24f5cf80069b34d3b3ef9479bc5601f208a22977801d92e962d53adaa43b33c3010fb1555d301fd1e1d8dfaace8875b4187fe99bf796",
            "file": "src/app/demo/components/uikit/panels/panelsdemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./panelsdemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardMenu",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n    templateUrl: './panelsdemo.component.html'\n})\nexport class PanelsDemoComponent implements OnInit {\n\n    items: MenuItem[] = [];\n\n    cardMenu: MenuItem[] = [];\n\n    ngOnInit() {\n        this.items = [\n            { label: 'Angular.io', icon: 'pi pi-external-link', url: 'http://angular.io' },\n            { label: 'Theming', icon: 'pi pi-bookmark', routerLink: ['/theming'] }\n        ];\n\n        this.cardMenu = [\n            {\n                label: 'Save', icon: 'pi pi-fw pi-check'\n            },\n            {\n                label: 'Update', icon: 'pi pi-fw pi-refresh'\n            },\n            {\n                label: 'Delete', icon: 'pi pi-fw pi-trash'\n            },\n        ];\n    }\n    \n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Toolbar</h5>\n            <p-toolbar>\n                <div class=\"p-toolbar-group-left flex flex-wrap\">\n                    <button pButton type=\"button\" label=\"New\" icon=\"pi pi-plus\" class=\"mr-2\"></button>\n                    <button pButton type=\"button\" label=\"Open\" icon=\"pi pi-folder-open\" class=\"p-button-secondary mr-2\"></button>\n\n                    <i class=\"pi pi-bars p-toolbar-separator\"></i>\n\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"p-button-success mr-2\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-trash\" class=\"p-button-warning mr-2\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-print\" class=\"p-button-danger\"></button>\n                </div>\n\n                <div class=\"p-toolbar-group-right\">\n                    <p-splitButton label=\"Options\" icon=\"pi pi-check\" [model]=\"items\"></p-splitButton>\n                </div>\n            </p-toolbar>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>AccordionPanel</h5>\n            <p-accordion>\n                <p-accordionTab header=\"Header I\" [selected]=\"true\" class=\"line-height-3 m-0\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua.\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                    consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                    pariatur.\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n                    est laborum.\n                </p-accordionTab>\n                <p-accordionTab header=\"Header II\" class=\"line-height-3 m-0\">\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\n                    totam rem aperiam, eaque\n                    ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo\n                    enim ipsam voluptatem quia\n                    voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                    voluptatem sequi nesciunt.\n                    Consectetur, adipisci velit, sed quia non numquam eius modi.\n                </p-accordionTab>\n                <p-accordionTab header=\"Header III\" class=\"line-height-3 m-0\">\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\n                    deleniti atque corrupti quos dolores\n                    et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\n                    officia deserunt mollitia animi, id est laborum et dolorum fuga.\n                    Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\n                    eligendi optio cumque nihil impedit\n                    quo minus.\n                </p-accordionTab>\n            </p-accordion>\n        </div>\n\n        <div class=\"card\">\n            <h5>TabView</h5>\n            <p-tabView orientation=\"left\">\n                <p-tabPanel header=\"Header I\" class=\"line-height-3 m-0\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua.\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                    consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                    pariatur.\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n                    est laborum.\n                </p-tabPanel>\n                <p-tabPanel header=\"Header II\" class=\"line-height-3 m-0\">\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\n                    totam rem aperiam, eaque\n                    ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo\n                    enim ipsam voluptatem quia\n                    voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                    voluptatem sequi nesciunt.\n                    Consectetur, adipisci velit, sed quia non numquam eius modi.\n                </p-tabPanel>\n                <p-tabPanel header=\"Header III\" class=\"line-height-3 m-0\">\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\n                    deleniti atque corrupti quos dolores\n                    et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\n                    officia deserunt mollitia animi, id est laborum et dolorum fuga.\n                    Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\n                    eligendi optio cumque nihil impedit\n                    quo minus.\n                </p-tabPanel>\n            </p-tabView>\n        </div>\n    </div>\n\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>Panel</h5>\n            <p-panel header=\"Header\" [toggleable]=\"true\" class=\"line-height-3 m-0\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua.\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                consequat.\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\n                laborum.\n            </p-panel>\n        </div>\n\n        <div class=\"card\">\n            <h5>Fieldset</h5>\n            <p-fieldset legend=\"Legend\" [toggleable]=\"true\" class=\"line-height-3 m-0\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua.\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                consequat.\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\n                laborum.\n            </p-fieldset>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"flex align-items-center justify-content-between mb-0\">\n                <h5>Card</h5>\n                <p-menu #menu [popup]=\"true\" [model]=\"cardMenu\"></p-menu>\n                <button pButton type=\"button\" icon=\"pi pi-plus\" class=\"p-button-text\"\n                        (click)=\"menu.toggle($event)\"></button>\n            </div>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua.\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                consequat.\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\n                laborum.</p>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Divider</h5>\n            <div class=\"grid\">\n                <div class=\"col-5 flex align-items-center justify-content-center\">\n                    <div class=\"p-fluid\">\n                        <div class=\"field\">\n                            <label for=\"username\">Username</label>\n                            <input pInputText id=\"username\" type=\"text\"/>\n                        </div>\n                        <div class=\"field\">\n                            <label for=\"password\">Password</label>\n                            <input pInputText id=\"password\" type=\"password\"/>\n                        </div>\n                        <p-button label=\"Login\" class=\"mt-2\"></p-button>\n                    </div>\n                </div>\n                <div class=\"col-2\">\n                    <p-divider layout=\"vertical\">\n                        <b>OR</b>\n                    </p-divider>\n                </div>\n                <div class=\"col-5 align-items-center justify-content-center\">\n                    <p class=\"line-height-3 m-0\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\n                        totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                        architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n                        aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                        voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\n\n                    <p-divider layout=\"horizontal\" align=\"center\">\n                        <span class=\"p-tag\">Badge</span>\n                    </p-divider>\n\n                    <p class=\"line-height-3 m-0\">At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\n                        deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\n                        cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est\n                        laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\n                        Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\n\n                    <p-divider align=\"right\">\n                        <p-button label=\"Button\" icon=\"pi pi-search\" styleClass=\"p-button-outlined\"></p-button>\n                    </p-divider>\n\n                    <p class=\"line-height-3 m-0\">Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et\n                        voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\n                        a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis\n                        doloribus asperiores repellat.\n                        Donec vel volutpat ipsum. Integer nunc magna, posuere ut tincidunt eget, egestas vitae sapien.\n                        Morbi dapibus luctus odio.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <h5>Splitter</h5>\n            <p-splitter [style]=\"{'height': '300px'}\" [panelSizes]=\"[30,70]\">\n                <ng-template pTemplate>\n                    <div class=\"col flex align-items-center justify-content-center\">\n                        Panel 1\n                    </div>\n                </ng-template>\n                <ng-template pTemplate>\n                    <p-splitter layout=\"vertical\" [panelSizes]=\"[50,50]\" [minSizes]=\"[10,10]\">\n                        <ng-template pTemplate>\n                            <div class=\"col flex align-items-center justify-content-center\">\n                                Panel 2\n                            </div>\n                        </ng-template>\n                        <ng-template pTemplate>\n                            <div class=\"col flex align-items-center justify-content-center\">\n                                Panel 3\n                            </div>\n                        </ng-template>\n                    </p-splitter>\n                </ng-template>\n            </p-splitter>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-8b63ac8966329927e1e7ab4ee1796706f5b963016dee205c9172f5e1ff8a6ef9898c89bded38b81a7981adf9532a10cc2ec8aa1a2c6811243e0e39bfcc023e10",
            "file": "src/app/demo/components/uikit/menus/payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n<i class=\"pi pi-fw pi-money-bill mr-2 text-2xl\"></i>\n<p class=\"m-0 mt-5 text-center text-lg\">Payment Component Content via Child Route</p>\n</div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n\t\t<i class=\"pi pi-fw pi-money-bill mr-2 text-2xl\"></i>\n\t\t<p class=\"m-0 mt-5 text-center text-lg\">Payment Component Content via Child Route</p>\n\t\t</div>\n  \t`\n})\nexport class PaymentComponent {\n\n\tconstructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": []
        },
        {
            "name": "PersonalComponent",
            "id": "component-PersonalComponent-10a42bb794f252d8810372c33e49b73158eb0ae1b55809bd774b533c25b459c84efc242fe571a355aa3b7697fe5d9545a5dc84e230735bfc84320582a348a4e7",
            "file": "src/app/demo/components/uikit/menus/personal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n\t<i class=\"pi pi-fw pi-user mr-2 text-2xl\"></i>\n\t<p class=\"mt-5 text-center text-lg\">Personal Component Content via Child Route</p>\n</div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n\t\t\t<i class=\"pi pi-fw pi-user mr-2 text-2xl\"></i>\n\t\t\t<p class=\"mt-5 text-center text-lg\">Personal Component Content via Child Route</p>\n\t\t</div>\n  \t`\n})\nexport class PersonalComponent {\n\n\tconstructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": []
        },
        {
            "name": "SeatComponent",
            "id": "component-SeatComponent-146a75f4ee28c1b9eea2ecf95fba846ec3dd26193b4883a8620df4ceeab83bab2db92e759875494880227fe7661255c0bdda8c5e48099f0be368559b3bc40519",
            "file": "src/app/demo/components/uikit/menus/seat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n\t<i class=\"pi pi-fw pi-ticket mr-2 text-2xl\"></i>\n\t<p class=\"m-0 mt-5 text-center text-lg\">Seat Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n\t\t\t<i class=\"pi pi-fw pi-ticket mr-2 text-2xl\"></i>\n\t\t\t<p class=\"m-0 mt-5 text-center text-lg\">Seat Component Content via Child Route</p>\n\t\t</div>\n    `\n})\nexport class SeatComponent {\n\n\tconstructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": []
        },
        {
            "name": "TableDemoComponent",
            "id": "component-TableDemoComponent-8449a537892c5bcecc7c359216a188d38b47f7c564270a6cb61129e00e8ed0330f015b360f1c0326c247240e50a3d9ee7702d97d84aab8a7620f1c817798fc33",
            "file": "src/app/demo/components/uikit/table/tabledemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                },
                {
                    "name": "ConfirmationService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tabledemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activityValues",
                    "defaultValue": "[0, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "customers1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "customers2",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "customers3",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "expandedRows",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "expandedRows",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "idFrozen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "representatives",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Representative[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "rowGroupMetadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "selectedCustomer",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedCustomers1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "statuses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expandAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onGlobalFilter",
                    "args": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateRowGroupMetaData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Customer, Representative } from 'src/app/demo/api/customer';\nimport { CustomerService } from 'src/app/demo/service/customer.service';\nimport { Product } from 'src/app/demo/api/product';\nimport { ProductService } from 'src/app/demo/service/product.service';\nimport { Table } from 'primeng/table';\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\ninterface expandedRows {\n    [key: string]: boolean;\n}\n\n@Component({\n    templateUrl: './tabledemo.component.html',\n    providers: [MessageService, ConfirmationService]\n})\nexport class TableDemoComponent implements OnInit {\n\n    customers1: Customer[] = [];\n\n    customers2: Customer[] = [];\n\n    customers3: Customer[] = [];\n\n    selectedCustomers1: Customer[] = [];\n\n    selectedCustomer: Customer = {};\n\n    representatives: Representative[] = [];\n\n    statuses: any[] = [];\n\n    products: Product[] = [];\n\n    rowGroupMetadata: any;\n\n    expandedRows: expandedRows = {};\n\n    activityValues: number[] = [0, 100];\n\n    isExpanded: boolean = false;\n\n    idFrozen: boolean = false;\n\n    loading: boolean = true;\n\n    @ViewChild('filter') filter!: ElementRef;\n\n    constructor(private customerService: CustomerService, private productService: ProductService) { }\n\n    ngOnInit() {\n        this.customerService.getCustomersLarge().then(customers => {\n            this.customers1 = customers;\n            this.loading = false;\n\n            // @ts-ignore\n            this.customers1.forEach(customer => customer.date = new Date(customer.date));\n        });\n        this.customerService.getCustomersMedium().then(customers => this.customers2 = customers);\n        this.customerService.getCustomersLarge().then(customers => this.customers3 = customers);\n        this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\n\n        this.representatives = [\n            { name: 'Amy Elsner', image: 'amyelsner.png' },\n            { name: 'Anna Fali', image: 'annafali.png' },\n            { name: 'Asiya Javayant', image: 'asiyajavayant.png' },\n            { name: 'Bernardo Dominic', image: 'bernardodominic.png' },\n            { name: 'Elwin Sharvill', image: 'elwinsharvill.png' },\n            { name: 'Ioni Bowcher', image: 'ionibowcher.png' },\n            { name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png' },\n            { name: 'Onyama Limba', image: 'onyamalimba.png' },\n            { name: 'Stephen Shaw', image: 'stephenshaw.png' },\n            { name: 'XuXue Feng', image: 'xuxuefeng.png' }\n        ];\n\n        this.statuses = [\n            { label: 'Unqualified', value: 'unqualified' },\n            { label: 'Qualified', value: 'qualified' },\n            { label: 'New', value: 'new' },\n            { label: 'Negotiation', value: 'negotiation' },\n            { label: 'Renewal', value: 'renewal' },\n            { label: 'Proposal', value: 'proposal' }\n        ];\n    }\n\n    onSort() {\n        this.updateRowGroupMetaData();\n    }\n\n    updateRowGroupMetaData() {\n        this.rowGroupMetadata = {};\n\n        if (this.customers3) {\n            for (let i = 0; i < this.customers3.length; i++) {\n                const rowData = this.customers3[i];\n                const representativeName = rowData?.representative?.name || '';\n\n                if (i === 0) {\n                    this.rowGroupMetadata[representativeName] = { index: 0, size: 1 };\n                }\n                else {\n                    const previousRowData = this.customers3[i - 1];\n                    const previousRowGroup = previousRowData?.representative?.name;\n                    if (representativeName === previousRowGroup) {\n                        this.rowGroupMetadata[representativeName].size++;\n                    }\n                    else {\n                        this.rowGroupMetadata[representativeName] = { index: i, size: 1 };\n                    }\n                }\n            }\n        }\n    }\n\n    expandAll() {\n        if (!this.isExpanded) {\n            this.products.forEach(product => product && product.name ? this.expandedRows[product.name] = true : '');\n\n        } else {\n            this.expandedRows = {};\n        }\n        this.isExpanded = !this.isExpanded;\n    }\n\n    formatCurrency(value: number) {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    onGlobalFilter(table: Table, event: Event) {\n        table.filterGlobal((event.target as HTMLInputElement).value, 'contains');\n    }\n\n    clear(table: Table) {\n        table.clear();\n        this.filter.nativeElement.value = '';\n    }\n    \n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "customerService",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "customerService",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Filter Menu</h5>\n\t\t\t<p-table #dt1 [value]=\"customers1\" dataKey=\"id\" [rows]=\"10\" [loading]=\"loading\" [rowHover]=\"true\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" [globalFilterFields]=\"['name','country.name','representative.name','status']\" responsiveLayout=\"scroll\">\n\t\t\t\t<ng-template pTemplate=\"caption\">\n\t\t\t\t\t<div class=\"flex justify-content-between flex-column sm:flex-row\">\n\t\t\t\t\t\t<button pButton label=\"Clear\" class=\"p-button-outlined mb-2\" icon=\"pi pi-filter-slash\" (click)=\"clear(dt1)\"></button>\n\t\t\t\t\t\t<span class=\"p-input-icon-left mb-2\">\n\t\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\n\t\t\t\t\t\t\t<input pInputText type=\"text\" #filter (input)=\"onGlobalFilter(dt1, $event)\" placeholder=\"Search Keyword\" class=\"w-full\"/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style=\"min-width: 12rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"text\" field=\"name\" display=\"menu\" placeholder=\"Search by name\"></p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 12rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"text\" field=\"country.name\" display=\"menu\" placeholder=\"Search by country\"></p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 14rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tAgent\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"representative\" matchMode=\"in\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\">\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"px-3 pt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-bold\">Agent Picker</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n\t\t\t\t\t\t\t\t\t\t<p-multiSelect [ngModel]=\"value\" [options]=\"representatives\" placeholder=\"Any\" (onChange)=\"filter($event.value)\" optionLabel=\"name\">\n\t\t\t\t\t\t\t\t\t\t\t<ng-template let-option pTemplate=\"item\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-multiselect-representative-option\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img [alt]=\"option.label\" src=\"assets/demo/images/avatar/{{option.image}}\" width=\"32\" style=\"vertical-align: middle\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"ml-2\">{{option.name}}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t\t\t</p-multiSelect>\n\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t</p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 10rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"date\" field=\"date\" display=\"menu\" placeholder=\"mm/dd/yyyy\"></p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 10rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tBalance\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 12rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"status\" matchMode=\"equals\" display=\"menu\">\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n\t\t\t\t\t\t\t\t\t\t<p-dropdown [ngModel]=\"value\" [options]=\"statuses\" (onChange)=\"filter($event.value)\" placeholder=\"Any\" [style]=\"{'min-width': '12rem'}\" >\n\t\t\t\t\t\t\t\t\t\t\t<ng-template let-option pTemplate=\"item\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + option.value\">{{option.label}}</span>\n\t\t\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t\t\t</p-dropdown>\n\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t</p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 12rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tActivity\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"activity\" matchMode=\"between\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\">\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-filter=\"filterCallback\">\n\t\t\t\t\t\t\t\t\t\t<p-slider [ngModel]=\"activityValues\" [range]=\"true\" (onSlideEnd)=\"filter($event.values)\" styleClass=\"m-3\" [style]=\"{'min-width': '12rem'}\" ></p-slider>\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex align-items-center justify-content-between px-2\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{{activityValues[0]}}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{{activityValues[1]}}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t\t\t</p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th style=\"min-width: 8rem\">\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\tVerified\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"boolean\" field=\"verified\" display=\"menu\"></p-columnFilter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{customer.name}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<img src=\"assets/demo/images/flag/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.country.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\"/>\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.representative.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{customer.date | date: 'MM/dd/yyyy'}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{customer.balance | currency:'USD':'symbol'}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<p-progressBar [value]=\"customer.activity\" [showValue]=\"false\" [style]=\"{'height': '0.5rem'}\"></p-progressBar>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"text-center\">\n\t\t\t\t\t\t\t<i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle text-green-500': customer.verified, 'false-icon pi-times-circle text-pink-500': !customer.verified}\"></i>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"emptymessage\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"8\">No customers found.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"loadingbody\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"8\">Loading customers data. Please wait.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n    \t\t</p-table>\n\t\t</div>\n\n\t</div>\n\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Frozen Columns</h5>\n\t\t\t<p-toggleButton [(ngModel)]=\"idFrozen\" [onIcon]=\"'pi pi-lock'\" offIcon=\"pi pi-lock-open\" [onLabel]=\"'Unfreeze Id'\" offLabel=\"Freeze Id\" [style]=\"{'width': '12rem'}\"></p-toggleButton>\n\n\t\t\t<p-table [value]=\"customers3\" scrollDirection=\"both\" [scrollable]=\"true\" scrollHeight=\"400px\" styleClass=\"mt-3\" responsiveLayout=\"scroll\">\n\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style=\"width:200px\" pFrozenColumn>Name</th>\n\t\t\t\t\t\t<th style=\"width:200px\" alignFrozen=\"left\" pFrozenColumn [frozen]=\"idFrozen\">Id</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Country</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Date</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Company</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Status</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Activity</th>\n\t\t\t\t\t\t<th style=\"width:200px\">Representative</th>\n\t\t\t\t\t\t<th style=\"width:200px\" pFrozenColumn alignFrozen=\"right\">Balance</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style=\"width:200px\" pFrozenColumn class=\"font-bold\">{{customer.name}}</td>\n\t\t\t\t\t\t<td style=\"width:200px\" alignFrozen=\"left\" pFrozenColumn [frozen]=\"idFrozen\" [ngClass]=\"{'font-bold': idFrozen}\">{{customer.id}}</td>\n\t\t\t\t\t\t<td style=\"width:200px\">\n\t\t\t\t\t\t\t<img src=\"assets/demo/images/flag/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.country.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.date}}</td>\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.company}}</td>\n\t\t\t\t\t\t<td style=\"width:200px\">\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.activity}}</td>\n\t\t\t\t\t\t<td style=\"width:200px\">\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\"/>\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.representative.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"width:200px\" pFrozenColumn  class=\"font-bold\" alignFrozen=\"right\">{{formatCurrency(customer.balance)}}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t</p-table>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Row Expand</h5>\n\t\t\t<p-toast></p-toast>\n\t\t\t<p-table [value]=\"products\" dataKey=\"name\" [expandedRowKeys]=\"expandedRows\" responsiveLayout=\"scroll\">\n\t\t\t\t<ng-template pTemplate=\"caption\">\n\t\t\t\t\t<button pButton icon=\"pi pi-fw {{isExpanded ? 'pi-minus' : 'pi-plus'}}\" label=\"{{isExpanded ? 'Collapse All' : 'Expand All'}}\" (click)=\"expandAll()\"></button>\n\t\t\t\t\t<div class=\"flex table-header\">\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style=\"width: 3rem\"></th>\n\t\t\t\t\t\t<th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n\t\t\t\t\t\t<th>Image</th>\n\t\t\t\t\t\t<th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"category\">Category <p-sortIcon field=\"category\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"rating\">Reviews <p-sortIcon field=\"rating\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"inventoryStatus\">Status <p-sortIcon field=\"inventoryStatus\"></p-sortIcon></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-product let-expanded=\"expanded\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button type=\"button\" pButton pRipple [pRowToggler]=\"product\" class=\"p-button-text p-button-rounded p-button-plain\" [icon]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"min-width: 12rem;\">{{product.name}}</td>\n\t\t\t\t\t\t<td><img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" width=\"100\" class=\"shadow-4\" /></td>\n\t\t\t\t\t\t<td style=\"min-width: 8rem;\">{{product.price | currency:'USD'}}</td>\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\">{{product.category}}</td>\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\"><p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating></td>\n\t\t\t\t\t\t<td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"rowexpansion\" let-product>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"7\">\n\t\t\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t\t\t<p-table [value]=\"product.orders\" dataKey=\"id\" responsiveLayout=\"scroll\">\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th pSortableColumn=\"id\">Id <p-sortIcon field=\"price\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"customer\">Customer <p-sortIcon field=\"customer\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"date\">Date <p-sortIcon field=\"date\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"amount\">Amount <p-sortIcon field=\"amount\"></p-sortIcon></th>\n\t\t\t\t\t\t<th pSortableColumn=\"stats\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\n\t\t\t\t\t\t<th style=\"width: 4rem\"></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-order>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{{order.id}}</td>\n\t\t\t\t\t\t<td>{{order.customer}}</td>\n\t\t\t\t\t\t<td>{{order.date}}</td>\n\t\t\t\t\t\t<td>{{order.amount | currency:'USD'}}</td>\n\t\t\t\t\t\t<td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\n\t\t\t\t\t\t<td><p-button type=\"button\" icon=\"pi pi-search\"></p-button></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"emptymessage\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"6\">There are no order for this product yet.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t</p-table>\n\t\t</div>\n\t\t</td>\n\t\t</tr>\n\t\t</ng-template>\n\t\t</p-table>\n\t</div>\n\t</div>\n\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Subheader Grouping</h5>\n\t\t\t<p-table [value]=\"customers3\" rowGroupMode=\"subheader\" groupRowsBy=\"representative.name\" sortField=\"representative.name\" sortMode=\"single\" (onSort)=\"onSort()\" responsiveLayout=\"scroll\" [scrollable]=\"true\" scrollHeight=\"400px\">\n\t\t\t\t<ng-template pTemplate=\"header\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Country</th>\n\t\t\t\t\t\t<th>Company</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer let-rowIndex=\"rowIndex\">\n\t\t\t\t\t<tr pRowGroupHeader *ngIf=\"rowGroupMetadata[customer.representative.name].index === rowIndex\">\n\t\t\t\t\t\t<td colspan=\"5\" style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\" />\n\t\t\t\t\t\t\t<span class=\"font-bold ml-2\">{{customer.representative.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t{{customer.name}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t<img src=\"assets/demo/images/flag/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\n\t\t\t\t\t\t\t<span class=\"image-text\" style=\"margin-left: .5em\">{{customer.country.name}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t{{customer.company}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\n\t\t\t\t\t\t\t{{customer.date}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t</p-table>\n\t\t</div>\n\t</div>\n</div>\n"
        },
        {
            "name": "TimelineDemoComponent",
            "id": "component-TimelineDemoComponent-3aec609a137adfc4b3c1cf2f599bc0bed28092775aa934c923b7d048b4abd8eb9ac7ba0b4f60ce1cbf518a21e132371949c194bf53895e2865f7ce0b07daf0ee",
            "file": "src/app/demo/components/pages/timeline/timelinedemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./timelinedemo.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./timelinedemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "events1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "events2",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { PrimeIcons } from 'primeng/api';\n\n@Component({\n    templateUrl: './timelinedemo.component.html',\n    styleUrls: ['./timelinedemo.scss']\n})\nexport class TimelineDemoComponent implements OnInit {\n\n    events1: any[] = [];\n\n    events2: any[] = [];\n\n    ngOnInit() {\n        this.events1 = [\n            { status: 'Ordered', date: '15/10/2020 10:30', icon: PrimeIcons.SHOPPING_CART, color: '#9C27B0', image: 'game-controller.jpg' },\n            { status: 'Processing', date: '15/10/2020 14:00', icon: PrimeIcons.COG, color: '#673AB7' },\n            { status: 'Shipped', date: '15/10/2020 16:15', icon: PrimeIcons.ENVELOPE, color: '#FF9800' },\n            { status: 'Delivered', date: '16/10/2020 10:00', icon: PrimeIcons.CHECK, color: '#607D8B' }\n        ];\n\n        this.events2 = [\n            \"2020\", \"2021\", \"2022\", \"2023\"\n        ];\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@media screen and (max-width: 960px) {\n    ::ng-deep {\n        .customized-timeline {\n            .p-timeline-event:nth-child(even) {\n                flex-direction: row !important;\n\n                .p-timeline-event-content {\n                    text-align: left !important;\n                }\n            }\n\n            .p-timeline-event-opposite {\n                flex: 0;\n            }\n\n            .p-card {\n                margin-top: 1rem;\n            }\n        }\n    }\n}",
                    "styleUrl": "./timelinedemo.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>Left Align</h5>\n            <p-timeline [value]=\"events1\">\n                <ng-template pTemplate=\"content\" let-event>\n                    {{event.status}}\n                </ng-template>\n            </p-timeline>\n        </div>\n    </div>\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>Right Align</h5>\n            <p-timeline [value]=\"events1\" align=\"right\">\n                <ng-template pTemplate=\"content\" let-event>\n                    {{event.status}}\n                </ng-template>\n            </p-timeline>\n        </div>\n    </div>\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>Alternate Align</h5>\n            <p-timeline [value]=\"events1\" align=\"alternate\">\n                <ng-template pTemplate=\"content\" let-event>\n                    {{event.status}}\n                </ng-template>\n            </p-timeline>\n        </div>\n    </div>\n    <div class=\"col-12 md:col-6\">\n        <div class=\"card\">\n            <h5>Opposite Content</h5>\n            <p-timeline [value]=\"events1\">\n                <ng-template pTemplate=\"content\" let-event>\n                    <small class=\"p-text-secondary\">{{event.date}}</small>\n                </ng-template>\n                <ng-template pTemplate=\"opposite\" let-event>\n                    {{event.status}}\n                </ng-template>\n            </p-timeline>\n        </div>\n    </div>\n</div>\n\n<div class=\"card\">\n    <h5>Customized</h5>\n    <p-timeline [value]=\"events1\" align=\"alternate\" styleClass=\"customized-timeline\">\n        <ng-template pTemplate=\"marker\" let-event>\n        <span class=\"flex z-1 w-2rem h-2rem align-items-center justify-content-center text-white border-circle shadow-2\" [style.backgroundColor]=\"event.color\">\n            <i [ngClass]=\"event.icon\"></i>\n        </span>\n        </ng-template>\n        <ng-template pTemplate=\"content\" let-event>\n            <p-card [header]=\"event.status\" [subheader]=\"event.date\">\n                <img *ngIf=\"event.image\" [src]=\"'assets/demo/images/product/' + event.image\" [alt]=\"event.name\" width=\"200\" class=\"shadow-2\" />\n                <p class=\"line-height-3 my-3\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore sed consequuntur error repudiandae numquam deserunt\n                    quisquam repellat libero asperiores earum nam nobis, culpa ratione quam perferendis esse, cupiditate neque quas!</p>\n                <button pButton label=\"Read more\" class=\"p-button-outlined mb-5\"></button>\n            </p-card>\n        </ng-template>\n    </p-timeline>\n</div>\n\n<div class=\"card\">\n    <h5>Horizontal</h5>\n    <h6>Top Align</h6>\n    <p-timeline [value]=\"events2\" layout=\"horizontal\" align=\"top\">\n        <ng-template pTemplate=\"content\" let-event>\n            {{event}}\n        </ng-template>\n    </p-timeline>\n\n    <h6>Bottom Align</h6>\n    <p-timeline [value]=\"events2\" layout=\"horizontal\" align=\"bottom\">\n        <ng-template pTemplate=\"content\" let-event>\n            {{event}}\n        </ng-template>\n    </p-timeline>\n\n    <h6>Alternate Align</h6>\n    <p-timeline [value]=\"events2\" layout=\"horizontal\" align=\"alternate\">\n        <ng-template pTemplate=\"content\" let-event>\n            {{event}}\n        </ng-template>\n        <ng-template pTemplate=\"opposite\" let-event>\n            &nbsp;\n        </ng-template>\n    </p-timeline>\n</div>"
        },
        {
            "name": "TreeDemoComponent",
            "id": "component-TreeDemoComponent-6f5fdf5ad2bb07512d02477c3cc1848b10e47b94ba0354e3e5e76c5fe14f53519c69427c975847c2d4b2ec3ff627f1cfe8877bcd5237885499f5442b340cba27",
            "file": "src/app/demo/components/uikit/tree/treedemo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-treedemo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./treedemo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "collapsedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "expandedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fileIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "files1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TreeNode[]",
                    "decorators": []
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "TreeNode[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "files2",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "files3",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedFiles1",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selectedFiles2",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedFiles3",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NodeService } from 'src/app/demo/service/node.service';\nimport { TreeNode } from 'primeng/api';\n@Component({\n    selector: 'app-treedemo',\n    templateUrl: './treedemo.component.html'\n})\nexport class TreeDemoComponent implements OnInit {\n    @Input() value: TreeNode[] = [];\n    @Input() selectionMode: string;\n\n    @Output()\n    onClick = new EventEmitter<Event>();\n\n    @Input() files1: TreeNode[] = [];\n\n    files2: TreeNode[] = [];\n\n    files3: TreeNode[] = [];\n\n    selectedFiles1: TreeNode[] = [];\n\n    selectedFiles2: TreeNode[] = [];\n\n    selectedFiles3: TreeNode = {};\n    @Input() collapsedIcon: string;\n    @Input() expandedIcon: string;\n    @Input() fileIcon: string;\n\n    @Input() cols: any[] = [];\n\n    constructor(private nodeService: NodeService) { }\n\n    ngOnInit() {\n\n        this.nodeService.getFiles().then(files => this.value = files);\n        this.nodeService.getFilesystem().then(files => this.files2 = files);\n        this.nodeService.getFiles().then(files => {\n            this.files3 = [{\n                label: 'Root',\n                children: files\n            }];\n        });\n\n        this.cols = [\n            { field: 'name', header: 'Name' },\n            { field: 'size', header: 'Size' },\n            { field: 'type', header: 'Type' }\n        ];\n        console.log(this.value);\n\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <h5>Tree</h5>\n      <p-tree\n        [value]=\"value\"\n        selectionMode=\"single\"\n        expandedIcon=\"pi pi-folder\"\n        [(selection)]=\"selectedFiles1\"\n      ></p-tree>\n    </div>\n  </div>\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <h5>TreeTable</h5>\n      <p-treeTable\n        [value]=\"files2\"\n        [columns]=\"cols\"\n        selectionMode=\"checkbox\"\n        [(selection)]=\"selectedFiles2\"\n      >\n        <ng-template pTemplate=\"header\" let-columns>\n          <tr>\n            <th *ngFor=\"let col of columns\">\n              {{ col.header }}\n            </th>\n          </tr>\n        </ng-template>\n        <ng-template\n          pTemplate=\"body\"\n          let-rowNode\n          let-rowData=\"rowData\"\n          let-columns=\"columns\"\n        >\n          <tr>\n            <td *ngFor=\"let col of columns; let i = index\">\n              <p-treeTableToggler\n                [rowNode]=\"rowNode\"\n                *ngIf=\"i === 0\"\n              ></p-treeTableToggler>\n              <p-treeTableCheckbox\n                [value]=\"rowNode\"\n                *ngIf=\"i === 0\"\n              ></p-treeTableCheckbox>\n              {{ rowData[col.field] }}\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </div>\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <h5>Horizontal Tree</h5>\n      <p-tree\n        [value]=\"files3\"\n        layout=\"horizontal\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedFiles3\"\n      ></p-tree>\n    </div>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AccessModule",
            "id": "module-AccessModule-1a5995e230e7d1330da51a5fd8d484f65c0efb6f1cf0c61278598d4b9592828bcf33d2c81554f382ac7195b3b965fd0ddae13f1e4f2dc30a6ef4dbe07d65fb6b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/access/access.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\n\nimport { AccessRoutingModule } from './access-routing.module';\nimport { AccessComponent } from './access.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        AccessRoutingModule,\n        ButtonModule\n    ],\n    declarations: [AccessComponent]\n})\nexport class AccessModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccessComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccessRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccessRoutingModule",
            "id": "module-AccessRoutingModule-36df28fa9b1699a7faabe5ad41800cec51bbe9373f53f42e7f8b577db50d399dad9e1f706f022fdf2ee180b670fa366d6e01a3558ea9817d79c33fc18f0631a9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/access/access-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AccessComponent } from './access.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: AccessComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class AccessRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppConfigModule",
            "id": "module-AppConfigModule-fa259356769debac6cf755f732a135638da52ba95b970ab2a6f8cf630058f39f8b5526ae0c28d1434c9c19c7d6cb36710dc7005f7a3b4cabb07d8f1b898a2a1a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/config/config.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { AppConfigComponent } from './app.config.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SidebarModule,\n        RadioButtonModule,\n        ButtonModule,\n        InputSwitchModule\n    ],\n    declarations: [\n        AppConfigComponent\n    ],\n    exports: [\n        AppConfigComponent\n    ]\n})\nexport class AppConfigModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppConfigComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppConfigComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppLayoutModule",
            "id": "module-AppLayoutModule-e34955f540d092fd287a368b80b4b0f2417314425ecbe67cdbe62ee608d95eb7c2d0f20409a603ea4dfe5e618754095fd0621d7f36b25cc07b8f6be345d3426d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/app.layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { BadgeModule } from 'primeng/badge';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { RippleModule } from 'primeng/ripple';\nimport { AppMenuComponent } from './app.menu.component';\nimport { AppMenuitemComponent } from './app.menuitem.component';\nimport { RouterModule } from '@angular/router';\nimport { AppTopBarComponent } from './app.topbar.component';\nimport { AppFooterComponent } from './app.footer.component';\nimport { AppConfigModule } from './config/config.module';\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppLayoutComponent } from \"./app.layout.component\";\n\n@NgModule({\n    declarations: [\n        AppMenuitemComponent,\n        AppTopBarComponent,\n        AppFooterComponent,\n        AppMenuComponent,\n        AppSidebarComponent,\n        AppLayoutComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        InputTextModule,\n        SidebarModule,\n        BadgeModule,\n        RadioButtonModule,\n        InputSwitchModule,\n        RippleModule,\n        RouterModule,\n        AppConfigModule\n    ],\n    exports: [AppLayoutComponent]\n})\nexport class AppLayoutModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppFooterComponent"
                        },
                        {
                            "name": "AppLayoutComponent"
                        },
                        {
                            "name": "AppMenuComponent"
                        },
                        {
                            "name": "AppMenuitemComponent"
                        },
                        {
                            "name": "AppSidebarComponent"
                        },
                        {
                            "name": "AppTopBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppConfigModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-ada2d91e809db43b500eef876e38aa19eb3b33b8fdca55e08c073200a2b9d444d287769ca0a57c4209c209200febb2522157909667da8b9b57f5592632258a97",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HashLocationStrategy, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppLayoutModule } from './layout/app.layout.module';\nimport { NotfoundComponent } from './demo/components/notfound/notfound.component';\nimport { ProductService } from './demo/service/product.service';\nimport { CountryService } from './demo/service/country.service';\nimport { CustomerService } from './demo/service/customer.service';\nimport { EventService } from './demo/service/event.service';\nimport { IconService } from './demo/service/icon.service';\nimport { NodeService } from './demo/service/node.service';\nimport { PhotoService } from './demo/service/photo.service';\n\n@NgModule({\n    declarations: [AppComponent, NotfoundComponent],\n    imports: [AppRoutingModule, AppLayoutModule],\n    providers: [\n        { provide: LocationStrategy, useClass: PathLocationStrategy },\n        CountryService, CustomerService, EventService, IconService, NodeService,\n        PhotoService, ProductService\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CountryService"
                        },
                        {
                            "name": "CustomerService"
                        },
                        {
                            "name": "EventService"
                        },
                        {
                            "name": "IconService"
                        },
                        {
                            "name": "NodeService"
                        },
                        {
                            "name": "PhotoService"
                        },
                        {
                            "name": "ProductService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NotfoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppLayoutModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d100acf85c79d5bcde6b9e1f66abba47e3ea2722126bd84050cf0f3adbf4b6c5fae070cff49a7f800c72c851789f1a1cc7e71ee26cde54eb9be0e2d3294d67e3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { NotfoundComponent } from './demo/components/notfound/notfound.component';\nimport { AppLayoutComponent } from \"./layout/app.layout.component\";\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot([\n            {\n                path: '', component: AppLayoutComponent,\n                children: [\n                    { path: '', loadChildren: () => import('./demo/components/dashboard/dashboard.module').then(m => m.DashboardModule) },\n                    { path: 'uikit', loadChildren: () => import('./demo/components/uikit/uikit.module').then(m => m.UIkitModule) },\n                    { path: 'utilities', loadChildren: () => import('./demo/components/utilities/utilities.module').then(m => m.UtilitiesModule) },\n                    { path: 'documentation', loadChildren: () => import('./demo/components/documentation/documentation.module').then(m => m.DocumentationModule) },\n                    { path: 'blocks', loadChildren: () => import('./demo/components/primeblocks/primeblocks.module').then(m => m.PrimeBlocksModule) },\n                    { path: 'pages', loadChildren: () => import('./demo/components/pages/pages.module').then(m => m.PagesModule) }\n                ]\n            },\n            { path: 'auth', loadChildren: () => import('./demo/components/auth/auth.module').then(m => m.AuthModule) },\n            { path: 'landing', loadChildren: () => import('./demo/components/landing/landing.module').then(m => m.LandingModule) },\n            { path: 'notfound', component: NotfoundComponent },\n            { path: '**', redirectTo: '/notfound' },\n        ], { scrollPositionRestoration: 'enabled', anchorScrolling: 'enabled', onSameUrlNavigation: 'reload' })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-80d514048815d7b1b1c7c056694a63c1b8cad95f9351f3e555ac604b5d750743d6452c89842495411aee4dd13070d094c21c17396db400c9191206097211bca9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        AuthRoutingModule\n    ]\n})\nexport class AuthModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-31fcebd66087d1b8724a50ad8b0160fd471a1c7e62ba4e081e4c89b65a7539caf5c5e8879464602fc52d5772619fa98cc98947430ab0f69c2310270a829aadc7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: 'error', loadChildren: () => import('./error/error.module').then(m => m.ErrorModule) },\n        { path: 'access', loadChildren: () => import('./access/access.module').then(m => m.AccessModule) },\n        { path: 'login', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },\n        { path: '**', redirectTo: '/notfound' }\n    ])],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonDemoModule",
            "id": "module-ButtonDemoModule-ba2b2af4fe188920bb899d7eb4cec4fe4e0752eb90f1ef4bf5208a7ecf77d57975bcb271d2d1670e155c776df20cbb9a094be322c81cbfda37188600c56113a8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/button/buttondemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonDemoRoutingModule } from './buttondemo-routing.module';\nimport { ButtonDemoComponent } from './buttondemo.component';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { SplitButtonModule } from 'primeng/splitbutton';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tButtonDemoRoutingModule,\n\t\tButtonModule,\n\t\tRippleModule,\n\t\tSplitButtonModule,\n\t\tToggleButtonModule,\n\t],\n\tdeclarations: [ButtonDemoComponent]\n})\nexport class ButtonDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonDemoRoutingModule",
            "id": "module-ButtonDemoRoutingModule-fbdf81bb2aaa2a4d9e02939f644a14df94a537f0d80d29287978c94f1fc80e93f78d82979b515d9f56fef37af51fbf14957f4d7011037314fe22258ab3dbf395",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/button/buttondemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonDemoComponent } from './buttondemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: ButtonDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class ButtonDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsDemoModule",
            "id": "module-ChartsDemoModule-4967d54d31e24751249fa0415cadd9283f4a747ff365fb9fd07f05169f6729c33aab9c5249656c9de2f20db6fb189f083031c02a2065135e40a03085fbf37145",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/charts/chartsdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsDemoRoutingModule } from './chartsdemo-routing.module';\nimport { ChartModule } from 'primeng/chart'\nimport { ChartsDemoComponent } from './chartsdemo.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tChartsDemoRoutingModule,\n\t\tChartModule\n\t],\n\tdeclarations: [ChartsDemoComponent]\n})\nexport class ChartsDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChartsDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ChartsDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsDemoRoutingModule",
            "id": "module-ChartsDemoRoutingModule-a71fbefc7a304963c8888246202402c0b9949224521c3f541ae2fbde8b64ac117a96b94c3274b6817c84963af0abf8acdc5198958b3d68cfbf3398bb6f20ffb2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/charts/chartsdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ChartsDemoComponent } from './chartsdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: ChartsDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class ChartsDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CrudModule",
            "id": "module-CrudModule-9daed45a3fc67a4bffcc06620810090c94378af20be2447128257c90417f0baa3aa3000f61c4d84b1cc047ccdb724ea1887b71d95f7f0f368a51e90cabc1d97c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/crud/crud.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CrudRoutingModule } from './crud-routing.module';\nimport { CrudComponent } from './crud.component';\nimport { TableModule } from 'primeng/table';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { RatingModule } from 'primeng/rating';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DialogModule } from 'primeng/dialog';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CrudRoutingModule,\n        TableModule,\n        FileUploadModule,\n        FormsModule,\n        ButtonModule,\n        RippleModule,\n        ToastModule,\n        ToolbarModule,\n        RatingModule,\n        InputTextModule,\n        InputTextareaModule,\n        DropdownModule,\n        RadioButtonModule,\n        InputNumberModule,\n        DialogModule\n    ],\n    declarations: [CrudComponent]\n})\nexport class CrudModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CrudComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CrudRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CrudRoutingModule",
            "id": "module-CrudRoutingModule-7b5cc2df79f231ef3c61834fe15c8ca8851e84daeb677902cd9201da26b1994d4ac7abb1a7443aa78b98a5148f68e33408436b671e4b76207641c9d2dc430dc2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/crud/crud-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CrudComponent } from './crud.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: CrudComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class CrudRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-cd33f8d01f29a3157e55264ab8ffebde1ada28ebbca4d743e920772c56da2339c00af10bb97b9b5e01fb215767ef540042917aef2ebfaf83c5f49f33fe0ca383",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DashboardComponent } from './dashboard.component';\nimport { ChartModule } from 'primeng/chart';\nimport { MenuModule } from 'primeng/menu';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { StyleClassModule } from 'primeng/styleclass';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { DashboardsRoutingModule } from './dashboard-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ChartModule,\n        MenuModule,\n        TableModule,\n        StyleClassModule,\n        PanelMenuModule,\n        ButtonModule,\n        DashboardsRoutingModule\n    ],\n    declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardsRoutingModule",
            "id": "module-DashboardsRoutingModule-c94ed56312979ae0ce512f720de0ad721998761cc4ad0ba68f445165c38bfdab711107c5e49906add77ae06a29efbfb275cfdb6299653978f02a45224a1b1db5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/dashboard/dashboard-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: DashboardComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class DashboardsRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DocumentationModule",
            "id": "module-DocumentationModule-7e9677aaaf9acaa737a4821824bc71824f1c86cf483cbe8862f08524c171bf31fdc338c6ce5d7b3dede1d3051c17bde0c88d21f142fc34c64197a5576430787d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/documentation/documentation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocumentationRoutingModule } from './documentation-routing.module';\nimport { DocumentationComponent } from './documentation.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DocumentationRoutingModule\n    ],\n    declarations: [DocumentationComponent]\n})\nexport class DocumentationModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DocumentationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DocumentationRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DocumentationRoutingModule",
            "id": "module-DocumentationRoutingModule-285e487f27a27a951fb803be793e84fd42b4a54a863229eccadb1a02ec4f028824bbb615cff9b9b83d33b3e92a3d1a9dc4020a54d53ab2b116448008769a156c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/documentation/documentation-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DocumentationComponent } from './documentation.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: DocumentationComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class DocumentationRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EmptyDemoModule",
            "id": "module-EmptyDemoModule-cee3d771892131283236b54d5ecc8c5703070224447870fc8c0a574065d1d54c084b1ddac8a94d3a8d48d15e3c206003d17a708da8944ff75edf8d075c7f6e41",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/empty/emptydemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmptyDemoRoutingModule } from './emptydemo-routing.module';\nimport { EmptyDemoComponent } from './emptydemo.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        EmptyDemoRoutingModule\n    ],\n    declarations: [EmptyDemoComponent]\n})\nexport class EmptyDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EmptyDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EmptyDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EmptyDemoRoutingModule",
            "id": "module-EmptyDemoRoutingModule-a84ebd815c221fbc105f5f1b50c6cb30dbf8119180b5a20873366dab33f9a851c03a60fff0605542d74aa4b7d133acd91b367a47ee3b2ec376b5b2bb03252b8b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/empty/emptydemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EmptyDemoComponent } from './emptydemo.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: EmptyDemoComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class EmptyDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorModule",
            "id": "module-ErrorModule-ab8a5a7a1b130b40817ba3aafb98c05b999886748ebbc8e0104ef0310e018af98335e8dcfb224964ba89561bfa414d1b5de317e7b2e3b603256816b35b18be5e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/error/error.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorRoutingModule } from './error-routing.module';\nimport { ErrorComponent } from './error.component';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ErrorRoutingModule,\n        ButtonModule\n    ],\n    declarations: [ErrorComponent]\n})\nexport class ErrorModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorRoutingModule",
            "id": "module-ErrorRoutingModule-8d7ce4790077f5b272535f41a035eeb57eeb412d39883446d76878a2de5a8b8b36bfa015af6ad431b0d22d846c783753b27beb053dbcaaff6d5de710e3e26125",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/error/error-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: ErrorComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class ErrorRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FileDemoModule",
            "id": "module-FileDemoModule-3331e6b6a44b5b8a520855e72fc383dbc56c4afbab4ce521b03fe3f4d7d55f4014108a73fa11ab64808a86652bc02cc11b384c3c1ee2c1943fe3454d3c1ba7cd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/file/filedemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { FileDemoRoutingModule } from './filedemo-routing.module';\nimport { FileDemoComponent } from './filedemo.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tFileDemoRoutingModule,\n\t\tFileUploadModule\n\t],\n\tdeclarations: [FileDemoComponent],\n})\nexport class FileDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FileDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FileDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FileDemoRoutingModule",
            "id": "module-FileDemoRoutingModule-c22833be76c685b0a05679b38bd0d3564511f15ba457d16b15b82efcf50b04cb85aef9d4470dd7c684aee6611af5a53dcd6fc138c24ef75051aa509958c8240a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/file/filedemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FileDemoComponent } from './filedemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: FileDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class FileDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FloatlabelDemoModule",
            "id": "module-FloatlabelDemoModule-132bf51e87858e5e9739897b5af23138235a3da5fa35801dd63b81fb5d95da475acd9a7f7b1ae8e2ae7e16b043a31496c8f8555ec59656765623ac1dec9814b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/floatlabel/floatlabeldemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FloatLabelDemoComponent } from './floatlabeldemo.component';\nimport { FloatlabelDemoRoutingModule } from './floatlabeldemo-routing.module';\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { ChipsModule } from \"primeng/chips\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputMaskModule } from \"primeng/inputmask\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { InputGroupModule } from 'primeng/inputgroup';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tFloatlabelDemoRoutingModule,\n\t\tAutoCompleteModule,\n\t\tCalendarModule,\n\t\tChipsModule,\n\t\tDropdownModule,\n\t\tInputMaskModule,\n\t\tInputNumberModule,\n\t\tCascadeSelectModule,\n\t\tMultiSelectModule,\n\t\tInputTextareaModule,\n\t\tInputTextModule,\n\t\tInputGroupModule,\n\t\tInputGroupAddonModule\n\t],\n\tdeclarations: [FloatLabelDemoComponent]\n})\nexport class FloatlabelDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FloatLabelDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FloatlabelDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FloatlabelDemoRoutingModule",
            "id": "module-FloatlabelDemoRoutingModule-813dbed24657cd54d8aab9779124de14f6abe9a9b9ab8f5da3d6de98df72dbee31bc8bf8f17be33a9dcc6ec56beea82cbab287ca50a19acb67d8a72a9e85cbec",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/floatlabel/floatlabeldemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FloatLabelDemoComponent } from './floatlabeldemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: FloatLabelDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class FloatlabelDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormLayoutDemoModule",
            "id": "module-FormLayoutDemoModule-a93853fe951e99eef3cd819ac432cc27e4a37ca18aa056b49e8b1c88e44b5fbc3cebde7de2a4f1ac0b3bd6ded3b1de69dda3ed2c300da064403c970dfcef7324",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/formlayout/formlayoutdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FormLayoutDemoComponent } from './formlayoutdemo.component';\nimport { FormLayoutDemoRoutingModule } from './formlayoutdemo-routing.module';\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { ChipsModule } from \"primeng/chips\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputMaskModule } from \"primeng/inputmask\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { InputTextModule } from \"primeng/inputtext\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tFormLayoutDemoRoutingModule,\n\t\tAutoCompleteModule,\n\t\tCalendarModule,\n\t\tChipsModule,\n\t\tDropdownModule,\n\t\tInputMaskModule,\n\t\tInputNumberModule,\n\t\tCascadeSelectModule,\n\t\tMultiSelectModule,\n\t\tInputTextareaModule,\n\t\tInputTextModule\n\t],\n\tdeclarations: [FormLayoutDemoComponent]\n})\nexport class FormLayoutDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormLayoutDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FormLayoutDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormLayoutDemoRoutingModule",
            "id": "module-FormLayoutDemoRoutingModule-36d89be919a4e4746f5555ab48a2344764a6f4a2de21a9e685edfacff007357467a2e526d5bf9dd23a945377d8e8af320b3533684fb08ce83f056941e11b0344",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/formlayout/formlayoutdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormLayoutDemoComponent } from './formlayoutdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: FormLayoutDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class FormLayoutDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputDemoModule",
            "id": "module-InputDemoModule-9173b086f4b22de49e2eacb281f4246a0ed624a6090e8793e7906336d1d16c555ff5c0e121347ca4f5dfab25878ed6ee4f77ae97bbed9e36adb8e4b88863e91b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/input/inputdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { InputDemoComponent } from './inputdemo.component';\nimport { InputDemoRoutingModule } from './inputdemo-routing.module';\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { ChipsModule } from \"primeng/chips\";\nimport { ChipModule } from \"primeng/chip\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputMaskModule } from \"primeng/inputmask\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { RatingModule } from 'primeng/rating';\nimport { KnobModule } from 'primeng/knob';\nimport { ListboxModule } from 'primeng/listbox';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ButtonModule } from 'primeng/button';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { SliderModule } from 'primeng/slider';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { InputGroupModule } from 'primeng/inputgroup';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tInputDemoRoutingModule,\n\t\tAutoCompleteModule,\n\t\tCalendarModule,\n\t\tChipsModule,\n\t\tDropdownModule,\n\t\tInputMaskModule,\n\t\tInputNumberModule,\n\t\tColorPickerModule,\n\t\tCascadeSelectModule,\n\t\tMultiSelectModule,\n\t\tToggleButtonModule,\n\t\tSliderModule,\n\t\tInputTextareaModule,\n\t\tRadioButtonModule,\n\t\tInputTextModule,\n\t\tRatingModule,\n\t\tChipModule,\n\t\tKnobModule,\n\t\tInputSwitchModule,\n\t\tListboxModule,\n\t\tSelectButtonModule,\n\t\tCheckboxModule,\n\t\tButtonModule,\n\t\tInputGroupModule,\n\t\tInputGroupAddonModule\n\t],\n\tdeclarations: [InputDemoComponent]\n})\nexport class InputDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "InputDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputDemoRoutingModule",
            "id": "module-InputDemoRoutingModule-1735671abfc1c35544178eb07ef9f5937aa4d95a4f498fc8ac33133934b95e7116d080a4587d60d4d7f66678ed440db7f6a878455f0bc742cd83638b5092c03b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/input/inputdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { InputDemoComponent } from './inputdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: InputDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class InputDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InvalidStateDemoModule",
            "id": "module-InvalidStateDemoModule-06f82450af323916f95ffb619e7780a72f8131f549a50e484b1bbc9dbaf38116ec16fca48a3bf3426f2d0e024de104d164f5ea1458aab23fca7159ed1fe58b44",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/invalid/invalidstatedemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { InvalidStateDemoComponent } from './invalidstatedemo.component';\nimport { InvalidStateDemoRoutingModule } from './invalidstatedemo-routing.module';\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { ChipsModule } from \"primeng/chips\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputMaskModule } from \"primeng/inputmask\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { PasswordModule } from \"primeng/password\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tInvalidStateDemoRoutingModule,\n\t\tAutoCompleteModule,\n\t\tCalendarModule,\n\t\tChipsModule,\n\t\tDropdownModule,\n\t\tInputMaskModule,\n\t\tInputNumberModule,\n\t\tCascadeSelectModule,\n\t\tMultiSelectModule,\n\t\tPasswordModule,\n\t\tInputTextareaModule,\n\t\tInputTextModule\n\t],\n\tdeclarations: [InvalidStateDemoComponent]\n})\nexport class InvalidStateDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InvalidStateDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "InvalidStateDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InvalidStateDemoRoutingModule",
            "id": "module-InvalidStateDemoRoutingModule-1446bb885cb0843ee732792b446cdd604e3f970bf2e6d8893b4216c9c4e789d76a886e09b711e19733fdd7bcbc61d23351f0a65c57cc37223e1fdfbbe0011236",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/invalid/invalidstatedemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { InvalidStateDemoComponent } from './invalidstatedemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: InvalidStateDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class InvalidStateDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingModule",
            "id": "module-LandingModule-d2bef71946e38649b79144ce400247d034002e839f4d1915d8f24ed376672de4148d6edb270b32db5999cd7a6f610b3bf69c4c55384443d78a95f26d6e6e30d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/landing/landing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LandingRoutingModule } from './landing-routing.module';\nimport { LandingComponent } from './landing.component';\nimport { StyleClassModule } from 'primeng/styleclass';\nimport { DividerModule } from 'primeng/divider';\nimport { ChartModule } from 'primeng/chart';\nimport { PanelModule } from 'primeng/panel';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LandingRoutingModule,\n        DividerModule,\n        StyleClassModule,\n        ChartModule,\n        PanelModule,\n        ButtonModule\n    ],\n    declarations: [LandingComponent]\n})\nexport class LandingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LandingRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingRoutingModule",
            "id": "module-LandingRoutingModule-711b6c2b63df2817a72d504b23a4830e2471558ea845ea538218544cd40366d68d8a70d6fd22436898cc6eb414de589ba8c3aed288f95c899a9ee10dfd5b8b1f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/landing/landing-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LandingComponent } from './landing.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: LandingComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class LandingRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListDemoModule",
            "id": "module-ListDemoModule-7cb7f698ac8ff48417646a596e818f8f6fed88dba202836102d3bc1886b092db41ebc2cafee25634b995690a52e5a1faf6f78499c6339791f6f6fc2d4463edc5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/list/listdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ListDemoComponent } from './listdemo.component';\nimport { ListDemoRoutingModule } from './listdemo-routing.module';\nimport { DataViewModule } from 'primeng/dataview';\nimport { PickListModule } from 'primeng/picklist';\nimport { OrderListModule } from 'primeng/orderlist';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RatingModule } from 'primeng/rating';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tListDemoRoutingModule,\n\t\tDataViewModule,\n\t\tPickListModule,\n\t\tOrderListModule,\n\t\tInputTextModule,\n\t\tDropdownModule,\n\t\tRatingModule,\n\t\tButtonModule\n\t],\n\tdeclarations: [ListDemoComponent]\n})\nexport class ListDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ListDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListDemoRoutingModule",
            "id": "module-ListDemoRoutingModule-c2959ddfc11a9224fdc94cfd93e0045ca922f85bc67b657b5335e70a547c4ceca1b487c3958406f7c72fd09fcddef8d9191c5014027c9f58a9926d53c9edf3a4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/list/listdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ListDemoComponent } from './listdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: ListDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class ListDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-6bc4451610b9832f8960554555a15d98eda17539456b183341684d1de163bb231159b53a7f73b76555d9ec6acd44ecc18579e959163397ff05c0fc9046f005bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { ButtonModule } from 'primeng/button';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { PasswordModule } from 'primeng/password';\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LoginRoutingModule,\n        ButtonModule,\n        CheckboxModule,\n        InputTextModule,\n        FormsModule,\n        PasswordModule\n    ],\n    declarations: [LoginComponent]\n})\nexport class LoginModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoginRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginRoutingModule",
            "id": "module-LoginRoutingModule-5515e0b95bffb6688544759e9333ad496a61f264f7ce45ab9d3017aae8cd1c754f25d30a2beb2c77604d7bfb50ecc6e0010001fe56e9b32a6c9f552f79b397bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/auth/login/login-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: LoginComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MediaDemoModule",
            "id": "module-MediaDemoModule-121fa3f8306411b02c8228e7d4b4d942fcd7bd32d18d325e91aec26271d21395dfdfd1818306f0f22f7db908603b215bf8c08b8bbd4a58e29daf45938e796d52",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/media/mediademo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MediaDemoComponent } from './mediademo.component';\nimport { MediaDemoRoutingModule } from './mediademo-routing.module';\nimport { ButtonModule } from 'primeng/button';\nimport { ImageModule } from 'primeng/image';\nimport { GalleriaModule } from 'primeng/galleria';\nimport { CarouselModule } from 'primeng/carousel';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMediaDemoRoutingModule,\n\t\tButtonModule,\n\t\tImageModule,\n\t\tGalleriaModule,\n\t\tCarouselModule\n\t],\n\tdeclarations: [MediaDemoComponent]\n})\nexport class MediaDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MediaDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MediaDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MediaDemoRoutingModule",
            "id": "module-MediaDemoRoutingModule-fee4e3e6b3362113a279d312b9e5d7937ebe8257c5b8b09f52c1c611c14a9734efe5b7e8b1dc57156932c61a925ce5363a5ac17bf0edf81f33a060052e165335",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/media/mediademo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MediaDemoComponent } from './mediademo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: MediaDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class MediaDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenusModule",
            "id": "module-MenusModule-cce0a24c22eb13680ef29cbbb760e592d1c055e05e5db0958a83e9d598bd551f1724337167020f465a1abf0c5d09f0efa1017aa545639b68b9e2384c74e87712",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/menus/menus.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MenusComponent } from './menus.component';\nimport { PaymentComponent } from './payment.component';\nimport { SeatComponent } from './seat.component';\nimport { PersonalComponent } from './personal.component';\nimport { ConfirmationComponent } from './confirmation.component';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { MenubarModule } from 'primeng/menubar';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { StepsModule } from 'primeng/steps';\nimport { TieredMenuModule } from 'primeng/tieredmenu';\nimport { MenuModule } from 'primeng/menu';\nimport { ButtonModule } from 'primeng/button';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { MegaMenuModule } from 'primeng/megamenu';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { InputTextModule } from 'primeng/inputtext';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tBreadcrumbModule,\n\t\tMenubarModule,\n\t\tTabMenuModule,\n\t\tStepsModule,\n\t\tTieredMenuModule,\n\t\tMenuModule,\n\t\tButtonModule,\n\t\tContextMenuModule,\n\t\tMegaMenuModule,\n\t\tPanelMenuModule,\n\t\tInputTextModule,\n\t\tRouterModule.forChild([\n\t\t\t{\n\t\t\t\tpath: '', component: MenusComponent, children: [\n\t\t\t\t\t{ path: '', redirectTo: 'personal', pathMatch: 'full' },\n\t\t\t\t\t{ path: 'personal', component: PersonalComponent },\n\t\t\t\t\t{ path: 'confirmation', component: ConfirmationComponent },\n\t\t\t\t\t{ path: 'seat', component: SeatComponent },\n\t\t\t\t\t{ path: 'payment', component: PaymentComponent }\n\t\t\t\t]\n\t\t\t}\n\t\t])\n\t],\n\tdeclarations: [MenusComponent],\n\texports: [RouterModule]\n})\nexport class MenusModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MenusComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MessagesDemoModule",
            "id": "module-MessagesDemoModule-17110e9e32749c9d407c918930f6fd1bcae32a715fd46fa4395c9835656829ec9f8d9b99c95af8ae20ee0ccb7580860b448899f59c51c63ac44e0e1a7ec40115",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/messages/messagesdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesDemoComponent } from './messagesdemo.component';\nimport { MessagesDemoRoutingModule } from './messagesdemo-routing.module';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMessagesDemoRoutingModule,\n\t\tMessagesModule,\n\t\tMessageModule,\n\t\tButtonModule,\n\t\tToastModule,\n\t\tInputTextModule\n\t],\n\tdeclarations: [MessagesDemoComponent]\n})\nexport class MessagesDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MessagesDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MessagesDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MessagesDemoRoutingModule",
            "id": "module-MessagesDemoRoutingModule-72a6fd4818549b948b1dd30ee983b591c51fc79fad88660e8970e9a27e2c3a948f80e5c1d4a585ddf67228d32e2181361ca4732abeb72d60dd0e1516402e0817",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/messages/messagesdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MessagesDemoComponent } from './messagesdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: MessagesDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class MessagesDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MiscDemoModule",
            "id": "module-MiscDemoModule-0288050051506b9b2875b42fa61e71368198ee50f382c5cf25112ffbb3461a7ef863ddf1a77a7fcfcb87b55388b8758179996d6dfca579be0ba28892e1d3d1a8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/misc/miscdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MiscDemoComponent } from './miscdemo.component';\nimport { MiscDemoRoutingModule } from './miscdemo-routing.module';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { BadgeModule } from 'primeng/badge';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\nimport { TagModule } from 'primeng/tag';\nimport { ChipModule } from 'primeng/chip';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { ButtonModule } from 'primeng/button';\nimport { AvatarGroupModule } from 'primeng/avatargroup';\nimport { ScrollTopModule } from 'primeng/scrolltop';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMiscDemoRoutingModule,\n\t\tProgressBarModule,\n\t\tBadgeModule,\n\t\tAvatarModule,\n\t\tScrollPanelModule,\n\t\tTagModule,\n\t\tChipModule,\n\t\tButtonModule,\n\t\tSkeletonModule,\n\t\tAvatarGroupModule,\n\t\tScrollTopModule\n\t],\n\tdeclarations: [MiscDemoComponent]\n})\nexport class MiscDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MiscDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MiscDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MiscDemoRoutingModule",
            "id": "module-MiscDemoRoutingModule-7640dcf180a4e42dce6c3c3da80b4b27d37e9142d102c83e86ee23d469d87d0454a8d2633850c8dd49f7633618ac0748d4505eaccb4a8351b710545b606e7f60",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/misc/miscdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MiscDemoComponent } from './miscdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: MiscDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class MiscDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverlaysDemoModule",
            "id": "module-OverlaysDemoModule-efaa8587e8dc1ff2b427959abab31a8816dd37a18824a333b6869f879a2ce7c773e1520c76c9e06e236f332e97a424b2055366ad7114037311a8b23133835695",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/overlays/overlaysdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OverlaysDemoComponent } from './overlaysdemo.component';\nimport { OverlaysDemoRoutingModule } from './overlaysdemo-routing.module';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { TableModule } from 'primeng/table';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { RippleModule } from 'primeng/ripple';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { InputTextModule } from 'primeng/inputtext';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tOverlaysDemoRoutingModule,\n\t\tToastModule,\n\t\tDialogModule,\n\t\tFormsModule,\n\t\tTooltipModule,\n\t\tInputTextModule,\n\t\tButtonModule,\n\t\tOverlayPanelModule,\n\t\tTableModule,\n\t\tConfirmDialogModule,\n\t\tSidebarModule,\n\t\tRippleModule,\n\t\tConfirmPopupModule\n\t],\n\tdeclarations: [OverlaysDemoComponent]\n})\nexport class OverlaysDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OverlaysDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OverlaysDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverlaysDemoRoutingModule",
            "id": "module-OverlaysDemoRoutingModule-4c92762b13909b5fa32ed1ee2b06b30c19fb1f483b332f51d4be48f4c6d725de45d144ffb8c09d51d999645fd3ae27dbceb0b334b909843a7ea8706c69a79ce8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/overlays/overlaysdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { OverlaysDemoComponent } from './overlaysdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: OverlaysDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class OverlaysDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "id": "module-PagesModule-798d880d244e13ab18078554cb677c547235b6993ffaf214ffe61af5637d7c6fe03e7d16ef6d7e2c08ed7aeb7a0382bd590bcd932a2d5e00d65a4fcebeb113c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/pages.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagesRoutingModule } from './pages-routing.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        PagesRoutingModule\n    ]\n})\nexport class PagesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PagesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesRoutingModule",
            "id": "module-PagesRoutingModule-9da14faee267d16c31db7fa639d0f8cd4ec2af9c475f6a76439bb774b14a4fac86365849ad7fa0912c7de2ea000c57377fbc598992395cadab875936329fee5f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/pages-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: 'crud', loadChildren: () => import('./crud/crud.module').then(m => m.CrudModule) },\n        { path: 'empty', loadChildren: () => import('./empty/emptydemo.module').then(m => m.EmptyDemoModule) },\n        { path: 'timeline', loadChildren: () => import('./timeline/timelinedemo.module').then(m => m.TimelineDemoModule) },\n        { path: '**', redirectTo: '/notfound' }\n    ])],\n    exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PanelsDemoModule",
            "id": "module-PanelsDemoModule-fb4b673131d79a87f0e0b5b4fe9c13ea43f6144194eb6ae90c7d207e87b498549aa09c20086ecf0d81d737f7703886f10191e96cde2e66019d9d4dc540e4a458",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/panels/panelsdemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PanelsDemoComponent } from './panelsdemo.component';\nimport { PanelsDemoRoutingModule } from './panelsdemo-routing.module';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { SplitButtonModule } from 'primeng/splitbutton';\nimport { AccordionModule } from 'primeng/accordion';\nimport { TabViewModule } from 'primeng/tabview';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { MenuModule } from 'primeng/menu';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DividerModule } from 'primeng/divider';\nimport { SplitterModule } from 'primeng/splitter';\nimport { PanelModule } from 'primeng/panel';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tPanelsDemoRoutingModule,\n\t\tToolbarModule,\n\t\tButtonModule,\n\t\tRippleModule,\n\t\tSplitButtonModule,\n\t\tAccordionModule,\n\t\tTabViewModule,\n\t\tFieldsetModule,\n\t\tMenuModule,\n\t\tInputTextModule,\n\t\tDividerModule,\n\t\tSplitterModule,\n\t\tPanelModule\n\t],\n\tdeclarations: [PanelsDemoComponent]\n})\nexport class PanelsDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PanelsDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PanelsDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PanelsDemoRoutingModule",
            "id": "module-PanelsDemoRoutingModule-16d6306abea03731dff89c32eb67ba13446999f65169d2f14e214e7d9ba29c79d4fb4026e638b530737d5bd2e7c2fa7c37ea0bfe34a541bb61f4c01141d55ec8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/panels/panelsdemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PanelsDemoComponent } from './panelsdemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: PanelsDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class PanelsDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PrimeBlocksModule",
            "id": "module-PrimeBlocksModule-4745256c440d935e8c81983b4e8e5b895c4d621ce931666f497aaa7e565047a47db1db8c93634435d053fcbac8bbf5f789381016d31b6349c5b97e52fb2617aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/primeblocks/primeblocks.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlocksComponent } from './blocks/blocks.component';\nimport { PrimeBlocksRoutingModule } from './primeblocks-routing.module';\nimport { BlockViewerComponent } from './blockviewer/blockviewer.component'\nimport { ChipModule } from 'primeng/chip';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { FormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { TooltipModule } from 'primeng/tooltip';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ButtonModule,\n        RippleModule,\n        ChipModule,\n        CheckboxModule,\n        FormsModule,\n        InputTextModule,\n        PasswordModule,\n        TooltipModule,\n        PrimeBlocksRoutingModule\n    ],\n    declarations: [BlocksComponent, BlockViewerComponent]\n})\nexport class PrimeBlocksModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlockViewerComponent"
                        },
                        {
                            "name": "BlocksComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PrimeBlocksRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PrimeBlocksRoutingModule",
            "id": "module-PrimeBlocksRoutingModule-1da13b86eb5d69f2630d1676fc0e91120f48adb6d38889cd1cebec31b7c376c055b48a6df69e3b72d39dcad165d35009ce6f5d7f59d99b063abb174ced37a701",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/primeblocks/primeblocks-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BlocksComponent } from './blocks/blocks.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: BlocksComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class PrimeBlocksRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableDemoModule",
            "id": "module-TableDemoModule-18a3e334810ccb3b7d954300b281afffbe84ba5c8b75c410dfb00889fbe145159e42a7c03429333ea9416f80b57031f7e33d190cf92b195db7993a38c10ea4a6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/table/tabledemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TableDemoComponent } from './tabledemo.component';\nimport { TableDemoRoutingModule } from './tabledemo-routing.module';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { RatingModule } from 'primeng/rating';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTableDemoRoutingModule,\n\t\tFormsModule,\n\t\tTableModule,\n\t\tRatingModule,\n\t\tButtonModule,\n\t\tSliderModule,\n\t\tInputTextModule,\n\t\tToggleButtonModule,\n\t\tRippleModule,\n\t\tMultiSelectModule,\n\t\tDropdownModule,\n\t\tProgressBarModule,\n\t\tToastModule\n\t],\n\tdeclarations: [TableDemoComponent]\n})\nexport class TableDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TableDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TableDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableDemoRoutingModule",
            "id": "module-TableDemoRoutingModule-8c195fb4fc7f0219e68edff8ee676567123836ade5879a4bdac120116ffbf89cbca7d8dbe1d74cf1713779c0948e347966366eae00bc96227f4b3900a8b8bb53",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/table/tabledemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TableDemoComponent } from './tabledemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: TableDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class TableDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TimelineDemoModule",
            "id": "module-TimelineDemoModule-d45b46faab87e68038f39d16ceef1b2b29599e9bd573f8e64a67db22254640cb3d75533b92b555652fa1df40b712b5189be6edf67e30a89b6d868a19d9ee478e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/timeline/timelinedemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineDemoRoutingModule } from './timelinedemo-routing.module';\nimport { TimelineDemoComponent } from './timelinedemo.component';\nimport { TimelineModule } from 'primeng/timeline';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TimelineModule,\n        ButtonModule,\n        CardModule,\n        TimelineDemoRoutingModule\n    ],\n    declarations: [TimelineDemoComponent]\n})\nexport class TimelineDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TimelineDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TimelineDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TimelineDemoRoutingModule",
            "id": "module-TimelineDemoRoutingModule-e2cb28b0315ad0feedc5992feadefa9c1ad2e614cd6c7c756b3fae58b5b80cc7d55ae7514f12fd384204fd1d11e659bf75f7e37620151a1ac22d10a04244ebcf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/pages/timeline/timelinedemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TimelineDemoComponent } from './timelinedemo.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: TimelineDemoComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class TimelineDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TreeDemoModule",
            "id": "module-TreeDemoModule-036c14e80e8f86ff6b3c97d9a3e318459198887e61a047f5b49ca31aeb00a77357085bb114463d9006bcc658abd9c0b8b9ed2b15c5b8dc57fef3daebca220110",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/tree/treedemo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TreeDemoComponent } from './treedemo.component';\nimport { TreeDemoRoutingModule } from './treedemo-routing.module';\nimport { TreeModule } from 'primeng/tree';\nimport { TreeTableModule } from 'primeng/treetable';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTreeDemoRoutingModule,\n\t\tFormsModule,\n\t\tTreeModule,\n\t\tTreeTableModule\n\t],\n\tdeclarations: [TreeDemoComponent],\n})\nexport class TreeDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TreeDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TreeDemoRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TreeDemoRoutingModule",
            "id": "module-TreeDemoRoutingModule-f24b03dce2177fd2f8434c62ffbfdaf284da0862e519ec32c01e36c39bb4099c77b14e46d0768e0c97a4317ac98a8ffd960c46b279b753dcb3c4935f745e828c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/tree/treedemo-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TreeDemoComponent } from './treedemo.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: TreeDemoComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class TreeDemoRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIkitModule",
            "id": "module-UIkitModule-849741fd84ffc1b3e7149f3167aae0b1828c1ed9cabda06eca799ccc80559b456b9609efc02b6c5a94e4827beb780f92180a61685dff9fed05ba0c83674acceb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/uikit.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UIkitRoutingModule } from './uikit-routing.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tUIkitRoutingModule\n\t]\n})\nexport class UIkitModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UIkitRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIkitRoutingModule",
            "id": "module-UIkitRoutingModule-9bb351d820a4ede4d868a5499f4ed7e5e891287949974f848831ad77d7ff052b3d46d7b72f5e743381572301e33fa6c920c60a00d20d9a9b8d4055ab20be93ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/uikit/uikit-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: 'button', data: { breadcrumb: 'Button' }, loadChildren: () => import('./button/buttondemo.module').then(m => m.ButtonDemoModule) },\n        { path: 'charts', data: { breadcrumb: 'Charts' }, loadChildren: () => import('./charts/chartsdemo.module').then(m => m.ChartsDemoModule) },\n        { path: 'file', data: { breadcrumb: 'File' }, loadChildren: () => import('./file/filedemo.module').then(m => m.FileDemoModule) },\n        { path: 'floatlabel', data: { breadcrumb: 'Float Label' }, loadChildren: () => import('./floatlabel/floatlabeldemo.module').then(m => m.FloatlabelDemoModule) },\n        { path: 'formlayout', data: { breadcrumb: 'Form Layout' }, loadChildren: () => import('./formlayout/formlayoutdemo.module').then(m => m.FormLayoutDemoModule) },\n        { path: 'input', data: { breadcrumb: 'Input' }, loadChildren: () => import('./input/inputdemo.module').then(m => m.InputDemoModule) },\n        { path: 'invalidstate', data: { breadcrumb: 'Invalid State' }, loadChildren: () => import('./invalid/invalidstatedemo.module').then(m => m.InvalidStateDemoModule) },\n        { path: 'list', data: { breadcrumb: 'List' }, loadChildren: () => import('./list/listdemo.module').then(m => m.ListDemoModule) },\n        { path: 'media', data: { breadcrumb: 'Media' }, loadChildren: () => import('./media/mediademo.module').then(m => m.MediaDemoModule) },\n        { path: 'message', data: { breadcrumb: 'Message' }, loadChildren: () => import('./messages/messagesdemo.module').then(m => m.MessagesDemoModule) },\n        { path: 'misc', data: { breadcrumb: 'Misc' }, loadChildren: () => import('./misc/miscdemo.module').then(m => m.MiscDemoModule) },\n        { path: 'overlay', data: { breadcrumb: 'Overlay' }, loadChildren: () => import('./overlays/overlaysdemo.module').then(m => m.OverlaysDemoModule) },\n        { path: 'panel', data: { breadcrumb: 'Panel' }, loadChildren: () => import('./panels/panelsdemo.module').then(m => m.PanelsDemoModule) },\n        { path: 'table', data: { breadcrumb: 'Table' }, loadChildren: () => import('./table/tabledemo.module').then(m => m.TableDemoModule) },\n        { path: 'tree', data: { breadcrumb: 'Tree' }, loadChildren: () => import('./tree/treedemo.module').then(m => m.TreeDemoModule) },\n        { path: 'menu', data: { breadcrumb: 'Menu' }, loadChildren: () => import('./menus/menus.module').then(m => m.MenusModule) },\n        { path: '**', redirectTo: '/notfound' }\n    ])],\n    exports: [RouterModule]\n})\nexport class UIkitRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UtilitiesModule",
            "id": "module-UtilitiesModule-884a011cc2fbec0e5d239e7bc0ea16a9ad5f9309ee31ee1829cd2dde3b032a95fd7b69b204eea593e4a5cf6eb0cfc1f511eac5030ef75816e5cd83aeb8058a04",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/utilities/utilities.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconsComponent } from './icons/icons.component';\nimport { UtilitiesRoutingModule } from './utilities-routing.module';\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UtilitiesRoutingModule,\n        InputTextModule\n    ],\n    declarations: [IconsComponent]\n})\nexport class UtilitiesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UtilitiesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UtilitiesRoutingModule",
            "id": "module-UtilitiesRoutingModule-de24b35f36d589bd7472c683fba2164e5edcba646c343d2398f7b98b39af1ab353d742918a4e2d6c074e550bcd2cd690f67d2d55cc8731067f6f2c0a60d39697",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demo/components/utilities/utilities-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IconsComponent } from './icons/icons.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: 'icons', data: { breadcrumb: 'Prime Icons' }, component: IconsComponent },\n        { path: '**', redirectTo: '/notfound' }\n    ])],\n    exports: [RouterModule]\n})\nexport class UtilitiesRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            }
        ],
        "functions": [
            {
                "name": "injectInjectorToProps",
                "file": "src/app/demo/inject-injector-to-props.decorator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "DecoratorFunction<AngularRenderer, TArgs>"
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "BlockView",
                "childs": [
                    {
                        "name": "PREVIEW",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CODE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/demo/components/primeblocks/blockviewer/blockviewer.component.ts"
            }
        ],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/demo/inject-injector-to-props.decorator.ts": [
                {
                    "name": "injectInjectorToProps",
                    "file": "src/app/demo/inject-injector-to-props.decorator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "DecoratorFunction<AngularRenderer, TArgs>"
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/demo/components/primeblocks/blockviewer/blockviewer.component.ts": [
                {
                    "name": "BlockView",
                    "childs": [
                        {
                            "name": "PREVIEW",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CODE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/demo/components/primeblocks/blockviewer/blockviewer.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Representative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/image.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Image",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InventoryStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/api/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/auth/access/access.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/auth/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/documentation/documentation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/landing/landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/notfound/notfound.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotfoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/pages/crud/crud.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CrudComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/pages/empty/emptydemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/pages/timeline/timelinedemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimelineDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/primeblocks/blocks/blocks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlocksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/primeblocks/blockviewer/blockviewer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlockViewerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/button/buttondemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/charts/chartsdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartsDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/file/filedemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/floatlabel/floatlabeldemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FloatLabelDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/formlayout/formlayoutdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormLayoutDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/input/inputdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/invalid/invalidstatedemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvalidStateDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/list/listdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/media/mediademo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MediaDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/menus/confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/menus/menus.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/menus/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/menus/personal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/menus/seat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/messages/messagesdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessagesDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/misc/miscdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MiscDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/overlays/overlaysdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlaysDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/panels/panelsdemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PanelsDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/table/tabledemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/table/tabledemo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "expandedRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/uikit/tree/treedemo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/components/utilities/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/inject-injector-to-props.decorator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "injectInjectorToProps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/country.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CountryService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/customer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CustomerService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/icon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/node.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NodeService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/photo.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PhotoService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/demo/service/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/api/menuchangeevent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.menuitem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppMenuitemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/app.topbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTopBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/config/app.config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/service/app.layout.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LayoutService",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/service/app.layout.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/service/app.layout.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LayoutState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}